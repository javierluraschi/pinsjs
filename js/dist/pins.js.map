{"version":3,"file":"pins.js","sources":["../src/host/callbacks.js","../src/utils/checks.js","../src/host/options.js","../src/utils/arrays.js","../src/ui-viewer.js","../src/board-registry.js","../src/host/appdirs.js","../src/board-registration.js","../src/host/file-system.js","../src/host/signature.js","../src/utils/dataframe.js","../src/board-default.js","../src/board-storage.js","../src/utils/onexit.js","../src/log.js","../node_modules/js-yaml/lib/js-yaml/common.js","../node_modules/js-yaml/lib/js-yaml/exception.js","../node_modules/js-yaml/lib/js-yaml/mark.js","../node_modules/js-yaml/lib/js-yaml/type.js","../node_modules/js-yaml/lib/js-yaml/schema.js","../node_modules/js-yaml/lib/js-yaml/type/str.js","../node_modules/js-yaml/lib/js-yaml/type/seq.js","../node_modules/js-yaml/lib/js-yaml/type/map.js","../node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","../node_modules/js-yaml/lib/js-yaml/type/null.js","../node_modules/js-yaml/lib/js-yaml/type/bool.js","../node_modules/js-yaml/lib/js-yaml/type/int.js","../node_modules/js-yaml/lib/js-yaml/type/float.js","../node_modules/js-yaml/lib/js-yaml/schema/json.js","../node_modules/js-yaml/lib/js-yaml/schema/core.js","../node_modules/js-yaml/lib/js-yaml/type/timestamp.js","../node_modules/js-yaml/lib/js-yaml/type/merge.js","../node_modules/js-yaml/lib/js-yaml/type/binary.js","../node_modules/js-yaml/lib/js-yaml/type/omap.js","../node_modules/js-yaml/lib/js-yaml/type/pairs.js","../node_modules/js-yaml/lib/js-yaml/type/set.js","../node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","../node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","../node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","../node_modules/js-yaml/lib/js-yaml/type/js/function.js","../node_modules/js-yaml/lib/js-yaml/schema/default_full.js","../node_modules/js-yaml/lib/js-yaml/loader.js","../node_modules/js-yaml/lib/js-yaml/dumper.js","../node_modules/js-yaml/lib/js-yaml.js","../node_modules/js-yaml/index.js","../src/utils/dict.js","../src/pin-tools.js","../src/utils/errors.js","../src/pin-registry.js","../src/utils/list.js","../src/pin-manifest.js","../src/versions.js","../src/board-local.js","../src/utils/inheritance.js","../src/board-extensions.js","../src/board.js","../src/pin.js","../src/utils/const.js","../src/utils/pin-utils.js","../src/pins-metadata.js","../src/pin-extensions.js","../src/pin-default.js","../src/host/requests.js","../src/board-datatxt-headers.js","../src/board-manifest.js","../src/pin-file.js","../src/pin-download.js","../src/board-datatxt.js","../src/board-s3.js","../src/board-azure.js","../src/pin-files.js","../src/utils/csv.js","../src/utils.js","../src/pin-dataframe.js","../src/main.js"],"sourcesContent":["const HOST_CALLBACKS = {};\n\nexport const get = (name) => {\n  if (Object.keys(HOST_CALLBACKS).includes(name)) return HOST_CALLBACKS[name];\n  else return (...args) => null;\n};\n\nexport const set = (name, callback) => {\n  HOST_CALLBACKS[name] = callback;\n};\n\nexport default {\n  get,\n  set,\n};\n","export const isNull = (obj) => {\n  return obj === null || typeof obj === 'undefined';\n};\n\nexport const isDataFrame = (x) => {\n  return typeof x['class'] !== undefined && x['class'] === 'dataframe';\n};\n","import * as callbacks from './callbacks';\nimport * as checks from '../utils/checks';\n\nexport const getOption = (name, defval) => {\n  var option = callbacks.get('getOption')(name);\n  return !checks.isNull(option) ? option : defval;\n};\n","export const unique = (arr) => {\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  return arr.filter(onlyUnique);\n};\n\nexport const concat = (arr, value) => {\n  if (value !== null) {\n    arr = arr.concat(value);\n  }\n\n  return arr;\n};\n\nexport const vectorize = (func) => {\n  return function (x, ...args) {\n    var result = [];\n    for (var idx = 0; idx > x.length; idx++) {\n      result.push(fun(x[idx], ...args));\n    }\n\n    return result;\n  };\n};\n\nexport const ensure = (obj) => {\n  if (!Array.isArray(obj)) {\n    return [obj];\n  } else {\n    return obj;\n  }\n};\n\n// Retrieves the only element in an array\nexport const getOnly = (obj) => {\n  if (Array.isArray(obj)) {\n    if (obj.length == 1) {\n      obj = obj[0];\n    } else {\n      throw new Error('Array has more than one element but expecting only one');\n    }\n  }\n\n  return obj;\n};\n\n// Retrieves the element of the array when only one element is available\nexport const maybeOne = (obj) => {\n  if (Array.isArray(obj) && obj.length == 1) {\n    return obj[0];\n  }\n\n  return obj;\n};\n\n// Are all the callbacks for the array tru?\nexport const all = (arr, callback) => {\n  for (i in arr) {\n    if (!callback(i)) return false;\n  }\n\n  return true;\n};\n","import * as callbacks from './host/callbacks';\n\nexport const uiViewerRegister = (board, boardCall) => {\n  callbacks.get('uiViewerRegister')(board, boardCall);\n};\n\nexport const uiViewerUpdated = (board) => {\n  callbacks.get('uiViewerUpdated')(board);\n};\n\nexport const uiViewerClose = (board) => {\n  callbacks.get('uiViewerClose')(board);\n};\n","const BOARDS_REGISTERED = {};\n\nexport const list = () => Object.keys(BOARDS_REGISTERED);\n\nexport const get = (name) => BOARDS_REGISTERED[name];\n\nexport const set = (name, board) => (BOARDS_REGISTERED[name] = board);\n\nexport const remove = (name) => delete BOARDS_REGISTERED[name];\n","import callbacks from './callbacks';\n\nexport const userCacheDir = () => {\n  return callbacks.get('userCacheDir')('pins');\n};\n","import * as appdirs from './host/appdirs';\nimport * as options from './host/options';\n\nexport const boardCachePath = () => {\n  return options.getOption('pins.path', appdirs.userCacheDir('pins'));\n};\n","import callbacks from './callbacks';\nimport * as arrays from '../utils/arrays';\n\nexport const tempfile = () => callbacks.get('tempfile')();\nexport const basename = (filePath) => callbacks.get('basename')(filePath);\nexport const readLines = (filePath) => callbacks.get('readLines')(filePath);\nexport const writeLines = (filePath, content) =>\n  callbacks.get('writeLines')(filePath, content);\n\nexport const dir = Object.freeze({\n  create(dirPath, { recursive } = { recursive: false }) {\n    return callbacks.get('dirCreate')(dirPath);\n  },\n  exists(dirPath) {\n    return callbacks.get('dirExists')(dirPath);\n  },\n  list(dirPath, ...args) {\n    return callbacks.get('dirList')(arrays.getOnly(dirPath));\n  },\n  remove(dirPath, ...args) {\n    dirPath = arrays.ensure(dirPath);\n    return dirPath.map((e) => callbacks.get('dirRemove')(dirPath));\n  },\n  zip(dirPath, zipfile, commonPath, ...args) {\n    return callbacks.get('dirZip')(dirPath, dirPath, commonPath);\n  },\n});\n\nexport const tools = Object.freeze({\n  filePathSansExt(filePath) {\n    return filePath.replace(/\\.[^/.]+$/, '');\n  },\n  fileExt(filePath) {\n    return filePath.match(/\\.[^/.]+$/, '')[0];\n  },\n});\n\nexport const write = (object, path) => {\n  return callbacks.get('fileWrite')(object, path);\n};\n\nexport const read = (path) => {\n  return callbacks.get('fileRead')(path);\n};\n\nexport const path = (path1, path2) => {\n  return callbacks.get('filePath')(path1, path2);\n};\n\nexport const normalizePath = (\n  path,\n  { winslash, mustWork } = { winslash: '\\\\', mustWork: false }\n) => {\n  return path;\n};\n\nexport const absolutePath = (path) => path;\n\nexport const dirname = (path) => path.replace(/[^\\/]+$/, '');\n\nexport const lockFile = (path, timeout) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const unlockFile = (path) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const fileExists = (path) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const copy = (from, to, { recursive } = { recursive: true }) => {\n  return callbacks.get('fileCopy')(from, to, recursive);\n};\n\nexport const createLink = (from, to) => {\n  return callbacks.get('createLink')(path);\n};\n\nexport const fileSize = (path) => {\n  return callbacks.get('fileSize')(path);\n};\n","import callbacks from './callbacks';\n\nexport const md5 = (str, key) => callbacks.get('md5')(str, key);\n","import * as checks from './checks';\n\n// TODO remove(column)\n// TODO order((e) => ())\n\nexport const dataFrame = (data, columns) => {\n  var df = [];\n  if (!checks.isNull(data)) {\n    df = data;\n  }\n\n  df.columns = columns;\n  return df;\n};\n\nexport const dfColNames = (df) => {\n  if (df.hasOwnProperty('columns')) return Object.keys(df['columns']);\n  if (df.length > 0) return Object.keys(df[0]);\n  return [];\n};\n\nexport const dfFromColumns = (cols) => {\n  return cols[0].map((row, idx) => {\n    var row = {};\n    for (var col in cols) {\n      row[cols[col]] = cols[col][idx];\n    }\n    return row;\n  });\n};\n\nexport const dfCBind = (df1, df2) => {\n  var rows = df1.map((left, idx) => {\n    var row = {};\n    Object.assign(row, left);\n    Object.assign(row, df2[idx]);\n    return row;\n  });\n\n  var cols = Object.assign({}, df1.columns);\n  Object.assign(cols, df2.columns);\n\n  return dataFrame(rows, cols);\n};\n\nexport const dfColRemove = (df, col) => {\n  var cols = {};\n  Object.assign(cols, df.columns);\n  if (Object.keys(cols).includes(col)) delete cols[col];\n\n  var rows = df.map((old) => {\n    var row = {};\n    Object.assign(row, old);\n    if (Object.keys(row).includes(col)) delete row[col];\n    return row;\n  });\n\n  return dataFrame(rows, cols);\n};\n\nexport const dfIsDataFrame = (obj) => {\n  if (Array.isArray(obj)) {\n    if (obj.length === 0 || typeof obj.columns != 'undefined') return true;\n\n    if (obj.length === 1 && typeof obj[0] === 'object') {\n      return true;\n    }\n\n    if (obj.length > 1) {\n      var isDataFrame = true;\n      for (var idxRow = 1; idxRow < obj.length; idxRow++) {\n        if (\n          typeof obj[idxRow] !== 'object' ||\n          obj[idxRow].length !== obj[0].length\n        ) {\n          isDataFrame = false;\n          break;\n        }\n      }\n\n      return isDataFrame;\n    }\n  }\n\n  return false;\n};\n","import * as options from './host/options';\n\nexport const boardDefault = () => {\n  return options.getOption('pins.board', 'local');\n};\n","import * as fileSystem from './host/file-system';\nimport { boardDefault } from './board-default';\nimport * as checks from './utils/checks';\n\nexport const boardLocalStorage = (board) => {\n  var path = board['cache'];\n\n  var componentPath = fileSystem.path(path, board['name']);\n\n  if (!fileSystem.dir.exists(componentPath))\n    fileSystem.dir.create(componentPath, { recursive: true });\n\n  return fileSystem.normalizePath(componentPath, { mustWork: false });\n};\n","export const onExit = (...args) => {\n  var error = null;\n  var result = null;\n  try {\n    result = args[args.length - 1]();\n  } catch (err) {\n    error = err;\n  }\n\n  for (var idx = 0; idx < args.length - 2; idx++) args[idx]();\n\n  if (error !== null) throw error;\n\n  return result;\n};\n","import { getOption } from './host/options';\nimport callbacks from './host/callbacks';\n\nexport const pinLog = (...args) => {\n  if (getOption('pins.verbose', true)) {\n    callbacks.get('pinLog')(args.join(''));\n  }\n};\n\nexport const pinDebug = (method, params) => {\n  if (getOption('pins.verbose', true)) {\n    callbacks.get('pinLog')(\n      'Calling ' + method + '(' + JSON.stringify(params) + ')'\n    );\n  }\n};\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /*global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!state.anchorMap.hasOwnProperty(alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        // Implicit resolving is not allowed for non-scalar types, and '?'\n        // non-specific tag is only assigned to plain scalars. So, it isn't\n        // needed to check for 'kind' conformity.\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  var documents = loadDocuments(input, options), index, length;\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, output, options) {\n  if (typeof output === 'function') {\n    loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  } else {\n    return loadAll(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  }\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    && c !== CHAR_COLON\n    && c !== CHAR_SHARP;\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = state.condenseFlow ? '\"' : '';\n\n    if (index !== 0) pairBuffer += ', ';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n","export const dictRemove = (dict, removes) => {\n  var copy = {};\n  Object.assign(copy, dict);\n  removes.forEach((remove) => {\n    if (copy.hasOwnProperty(remove)) delete copy[remove];\n  });\n  return copy;\n};\n","import * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport { dictRemove } from './utils/dict';\nimport { dataFrame } from './utils/dataframe';\n\nexport const pinSplitOwner = (fullName = '') => {\n  const parts = fullName.split('/');\n  const name = parts[0];\n  parts.pop();\n  const owner = parts.join('/');\n\n  return { name, owner };\n};\n\nexport const pinContentName = (fullName) => {\n  return typeof fullName === 'string' ? pinSplitOwner(fullName).name : fullName;\n};\n\nexport const pinOwnerName = (fullName) => {\n  return typeof fullName === 'string'\n    ? pinSplitOwner(fullName).owner\n    : fullName;\n};\n\nexport const pinResultsFromRows = (entries) => {\n  var resultsField = function (e, field, def) {\n    return checks.isNull(e[field]) ? def : e[field];\n  };\n\n  var rows = entries.map((e) => {\n    var row = {\n      name: resultsField(e, 'name', fileSystem.basename(e['path'])),\n      description: resultsField(e, 'description', ''),\n      type: resultsField(e, 'type', 'files'),\n    };\n    row['metadata'] = dictRemove(e, ['name', 'description', 'type']);\n\n    return row;\n  });\n\n  return dataFrame(rows, {\n    name: 'character',\n    description: 'character',\n    type: 'character',\n  });\n};\n\n// TODO: Implement dataframes shim.\nexport const pinResultsExtractColumn = (df, column) => {\n  throw 'NYI';\n};\n\nexport const pinEntriesToDataframe = (entries) => {\n  throw 'NYI';\n};\n\nexport const pinResultsMerge = (r1, r2) => {\n  var result = [].concat(r1).concat(r2);\n  result.columns = {};\n  Object.assign(result.columns, r1.columns);\n  Object.assign(result.columns, r2.columns);\n  return result;\n};\n","export const tryCatch = (expr, error) => {\n  try {\n    return expr();\n  } catch (err) {\n    return error(err);\n  }\n};\n\nexport const tryCatchNull = (expr, error) => {\n  return tryCatch(expr, () => null);\n};\n","import * as fileSystem from './host/file-system';\nimport * as options from './host/options';\nimport { boardLocalStorage } from './board-storage';\nimport { onExit } from './utils/onexit';\nimport { pinLog } from './log';\nimport yaml from 'js-yaml';\nimport { pinResultsFromRows } from './pin-tools';\nimport * as checks from './utils/checks';\nimport * as errors from './utils/errors';\n\nconst pinRegistryConfig = (board) => {\n  return fileSystem.path(boardLocalStorage(board), 'data.txt');\n};\n\nconst pinRegistryLoadEntries = (board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entriesPath = pinRegistryConfig(board);\n\n      if (!fileSystem.fileExists(entriesPath)) {\n        return [];\n      } else {\n        let yamlText = fileSystem.readLines(entriesPath).join('\\n');\n        let loadedYaml = yaml.safeLoad(yamlText);\n        return loadedYaml;\n      }\n    }\n  );\n};\n\nconst pinRegistrySaveEntries = (entries, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      let yamlText = yaml.safeDump(entries);\n      fileSystem.writeLines(pinRegistryConfig(board), yamlText.split('\\n'));\n    }\n  );\n};\n\nexport const pinStoragePath = (board, name) => {\n  var path = fileSystem.path(boardLocalStorage(board), name);\n\n  if (!fileSystem.dir.exists(path)) {\n    fileSystem.dir.create(path, { recursive: true });\n  }\n\n  return path;\n};\n\nexport const pinRegistryUpdate = (name, board, params = {}) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n      name = pinRegistryQualifyName(name, entries);\n\n      var path = pinStoragePath(board, name);\n\n      if (entries === null) entries = [];\n\n      var names = entries.map((e) => e.name);\n      var index = 0;\n      if (names.includes(name)) {\n        index = names.findIndex((e) => e === name);\n      } else {\n        index = entries.length;\n        entries[index] = {};\n      }\n\n      entries[index]['name'] = name;\n\n      for (var param in params) {\n        if (\n          (Array.isArray(params[param]) && !params[param].length) ||\n          typeof params[param] === 'undefined'\n        ) {\n          delete entries[index][param];\n        } else {\n          entries[index][param] = params[param];\n        }\n      }\n\n      pinRegistrySaveEntries(entries, board);\n\n      return path;\n    }\n  );\n};\n\nexport const pinRegistryFind = (text, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n      var results = pinResultsFromRows(entries);\n\n      if (typeof text === 'string' && text.length > 0) {\n        results = results.filter((x) => new RegExp(text, 'gi').test(x['name']));\n      }\n\n      return results;\n    }\n  );\n};\n\nexport const pinRegistryRetrieve = (name, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n      name = pinRegistryQualifyName(name, entries);\n\n      var names = entries.map((e) => e.name);\n      if (!names.includes(name)) {\n        pinLog(\n          `Pin not found, pins available in registry: ${names.join(', ')}`\n        );\n        throw new Error(`Pin '${name}' not found in '${board.name}' board.`);\n      }\n\n      return entries.find((e) => e.name === name);\n    }\n  );\n};\n\nexport const pinRegistryRetrievePath = (name, board) => {\n  var entry = pinRegistryRetrieve(name, board);\n\n  return entry['path'];\n};\n\nexport const pinRegistryRetrieveMaybe = (name, board) => {\n  return errors.tryCatchNull(() => pinRegistryRetrieve(name, board));\n};\n\nexport const pinRegistryRemove = (name, board, unlink = true) => {\n  var entries = pinRegistryLoadEntries(board);\n  name = pinRegistryQualifyName(name, entries);\n\n  var remove = entries.filter((x) => x['name'] == name);\n  if (remove.length > 0) remove = remove[0];\n  else return;\n\n  entries = entries.filter((x) => x['name'] != name);\n\n  var removePath = pinRegistryAbsolute(remove.path, board);\n  if (unlink) fileSystem.dir.remove(removePath, { recursive: true });\n\n  return pinRegistrySaveEntries(entries, board);\n};\n\nconst pinRegistryQualifyName = (name, entries) => {\n  var names = entries.map((e) => e['name']);\n\n  var namePattern = '';\n  if (/\\//g.test(name)) namePattern = paste0('^', name, '$');\n  else namePattern = '.*/' + name + '$';\n\n  var nameCandidate = names.filter((e) =>\n    new RegExp(namePattern, 'gi').test(e)\n  );\n\n  if (nameCandidate.length == 1) {\n    name = nameCandidate;\n  }\n\n  return name;\n};\n\nconst pinRegistryLock = (board) => {\n  var lockFile = pinRegistryConfig(board) + '.lock';\n  return fileSystem.lockFile(\n    lockFile,\n    options.getOption('pins.lock.timeout', Infinity)\n  );\n};\n\nconst pinRegistryUnlock = (lock) => {\n  return fileSystem.unlockFile(lock);\n};\n\nexport const pinRegistryRelative = (path, basePath) => {\n  path = fileSystem.normalizePath(path, { winslash: '/', mustWork: false });\n  basePath = fileSystem.normalizePath(basePath, {\n    winslash: '/',\n    mustWork: false,\n  });\n\n  if (path.startsWith(basePath)) {\n    path = path.substr(basePath.length + 1, path.length);\n  }\n\n  var relative = path.replace('^/', '');\n\n  return relative;\n};\n\nexport const pinRegistryAbsolute = (path, board) => {\n  var basePath = fileSystem.absolutePath(boardLocalStorage(board));\n\n  if (path.startsWith(basePath)) {\n    return path;\n  } else {\n    return fileSystem.normalizePath(fileSystem.path(basePath, path), {\n      mustWork: false,\n    });\n  }\n};\n\nexport const pinResetCache = (board, name) => {\n  // clean up name in case it's a full url\n  const sanitizedName = name.replace(/^https?:\\/\\//g, '');\n  const index = errors.tryCatchNull(\n    () => pinRegistryRetrieve(sanitizedName, board) || null\n  );\n\n  if (!checks.isNull(index)) {\n    index.cache = {};\n    pinRegistryUpdate(sanitizedName, board, { params: index });\n  }\n};\n","import * as checks from './checks';\n\nexport const names = (l) => {\n  if (checks.isNull(l)) return null;\n  else return Object.keys(l);\n};\n\nexport const namesArr = (l) => {\n  if (checks.isNull(l)) return [];\n  else return Object.keys(l);\n};\n\nexport const removeNulls = (obj) => {\n  for (var prop in obj) {\n    if (checks.isNull(obj[prop])) {\n      delete obj[prop];\n    }\n  }\n};\n","import * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport * as list from './utils/list';\nimport yaml from 'js-yaml';\n\nexport const pinManifestGet = (path) => {\n  var manifest = {};\n\n  var dataTxt = fileSystem.path(path, 'data.txt');\n  if (fileSystem.fileExists(dataTxt)) {\n    let yamlText = fileSystem.readLines(dataTxt).join('\\n');\n\n    manifest = yaml.safeLoad(yamlText);\n  }\n\n  if (checks.isNull(manifest['type'])) manifest['type'] = 'files';\n\n  return manifest;\n};\n\nexport const pinManifestUpdate = (path, manifest) => {\n  var dataTxt = fileSystem.path(path, 'data.txt');\n\n  let yamlText = yaml.safeDump(manifest);\n  fileSystem.writeLines(dataTxt, yamlText.split('\\n'));\n};\n\nexport const pinManifestExists = (path) => {\n  return fileSystem.fileExists(fileSystem.path(path, 'data.txt'));\n};\n\nexport const pinManifestCreate = (path, metadata, files) => {\n  var entries = Object.assign(\n    {\n      path: files,\n    },\n    metadata\n  );\n\n  list.removeNulls(entries);\n\n  let yamlText = yaml.safeDump(entries);\n  fileSystem.writeLines(\n    fileSystem.path(path, 'data.txt'),\n    yamlText.split('\\n')\n  );\n\n  return entries;\n};\n\n// retrieve a list of files to download\nexport const pinManifestDownload = (path) => {\n  var manifest = pinManifestGet(path);\n\n  if (checks.isNull(manifest['path'])) return null;\n  return pinFetch({\n    path: manifest['path'],\n    class: manifest['type'],\n  });\n};\n\nexport const pinManifestMerge = (baseManifest, resourceManifest) => {\n  // path requires special merge\n  if (\n    !checks.isNull(resourceManifest['path']) &&\n    !checks.isNull(baseManifest['path']) &&\n    !/https?:\\/\\//g.test(baseManifest['path'])\n  ) {\n    baseManifest['path'] = fileSystem.path(\n      baseManifest['path'],\n      resourceManifest['path']\n    );\n  }\n\n  baseManifest = Object.assign(baseManifest, resourceManifest);\n\n  return baseManifest;\n};\n","import * as options from './host/options';\nimport * as fileSystem from './host/file-system';\nimport * as signature from './host/signature';\nimport { dataFrame, dfFromColumns } from './utils/dataframe';\nimport { pinStoragePath, pinRegistryRelative } from './pin-registry';\nimport { pinManifestGet, pinManifestUpdate } from './pin-manifest';\n\nexport const pinVersionsPathName = () => {\n  return options.getOption('pins.versions.path', '_versions');\n};\n\nconst pinVersionSignature = (hashFiles) => {\n  var sign = hashFiles.map((f) => signature.md5(f));\n\n  if (sign.length > 1) {\n    sign = sign.join(',');\n    sign = signature.md5(sign);\n\n    return sign;\n  } else {\n    return sign[0];\n  }\n};\n\nconst pinVersionsPath = (storagePath) => {\n  var hashFiles = fileSystem.dir.list(storagePath, { fullNames: true });\n  hashFiles = hashFiles.filter((e) => !/(\\/|\\\\)_versions$/g.test(e));\n\n  var versionPath = fileSystem.path(\n    pinVersionsPathName(),\n    pinVersionSignature(hashFiles)\n  );\n\n  return fileSystem.normalizePath(\n    fileSystem.path(fileSystem.normalizePath(storagePath), versionPath),\n    { mustWork: false }\n  );\n};\n\nconst boardVersionsEnabled = (\n  board,\n  { defaultValue } = { defaultValue: false }\n) => {\n  if (defaultValue) {\n    return board['versions'] !== false;\n  } else {\n    return board['versions'] === true;\n  }\n};\n\nexport const boardVersionsCreate = (board, name, path) => {\n  var versions = null;\n\n  if (boardVersionsEnabled(board)) {\n    // read the versions from the non-versioned manifest\n    var componentPath = pinStoragePath(board, name);\n    var componentManifest = pinManifestGet(componentPath);\n\n    var versions = componentManifest['versions'] || [];\n\n    var versionPath = pinVersionsPath(path);\n    var versionRelative = pinRegistryRelative(versionPath, path);\n\n    if (versions.some((v) => v === versionRelative)) {\n      versions = versions.filter((v) => v !== versionRelative);\n    }\n\n    if (fileSystem.dir.exists(versionPath)) {\n      fileSystem.dir.remove(versionPath, { recursive: true });\n    }\n    fileSystem.dir.create(versionPath, { recursive: true });\n\n    var files = fileSystem.dir\n      .list(path, { fullNames: true })\n      .filter((e) => e != fileSystem.path(path, pinVersionsPathName()));\n\n    fileSystem.copy(files, versionPath, { recursive: true });\n\n    versions = [versionRelative].concat(versions);\n\n    var manifest = pinManifestGet(path);\n\n    manifest['versions'] = versions;\n\n    pinManifestUpdate(path, manifest);\n  }\n\n  return versions;\n};\n\nexport const boardVersionsGet = (board, name) => {\n  var versions = dataFrame(null, { versions: 'character' });\n\n  var componentPath = pinStoragePath(board, name);\n  var manifest = pinManifestGet(componentPath);\n\n  versions = manifest['versions'];\n  if (versions.length > 0) {\n    // TODO: what should dfFromColumns do?\n    // versions = dfFromColumns({ version: versions });\n    versions = { version: versions };\n  }\n\n  return versions;\n};\n\nexport const boardVersionsShorten = (versions) => {\n  var paths = versions.map((e) => e.replace('[^/\\\\\\\\]+$', ''));\n\n  if (paths.filter((v, i, arr) => arr.indexOf(v) === i).length > 0) {\n    versions = versions.map((e) => e.replace(/.*(\\/|\\\\)/g, ''));\n  }\n\n  var shortened = versions.map((e) => e.substr(0, 7));\n\n  if (\n    shortened.filter((v, i, arr) => arr.indexOf(v) === i).length ==\n    versions.length\n  ) {\n    versions = shortened;\n  }\n\n  return versions;\n};\n\nexport const boardVersionsExpand = (versions, version) => {\n  var shortened = boardVersionsShorten(versions);\n  var versionIndex = shortened.indexOf(version);\n\n  if (versionIndex === -1) {\n    throw new Error(\n      \"Version '\" +\n        version +\n        \"' is not valid, please select from pin_versions().\"\n    );\n  }\n\n  return versions[versionIndex];\n};\n","import * as fileSystem from './host/file-system';\nimport * as versions from './versions';\nimport * as registry from './pin-registry';\nimport { boardLocalStorage } from './board-storage';\nimport * as checks from './utils/checks';\nimport { pinManifestGet, pinManifestMerge } from './pin-manifest';\n\nexport const boardInitializeLocal = (board, { ...args }) => {\n  var cache = args['cache'];\n  if (!fileSystem.dir.exists(board['cache']))\n    fileSystem.dir.create(board['cache'], { recursive: true });\n\n  return board;\n};\n\nexport const guessExtensionFromPath = (path) => {\n  if (fileSystem.dir.exists(path)) {\n    var allFiles = fileSystem.dir.list(path, { recursive: true });\n    allFiles = allFiles.filter((x) => !/data\\\\.txt/gi.test(x));\n\n    path = allFiles[0];\n  }\n\n  fileSystem.tools.fileExt(path);\n};\n\nexport const boardPinCreateLocal = (board, path, name, metadata, ...args) => {\n  versions.boardVersionsCreate(board, name, path);\n\n  var finalPath = registry.pinStoragePath(board, name);\n\n  var toDelete = fileSystem.dir\n    .list(finalPath, { fullNames: true })\n    .filter((e) => /(\\/|\\\\)_versions/gi.test(e));\n\n  fileSystem.dir.remove(toDelete, { recursive: true });\n  if (!fileSystem.dir.exists(finalPath)) {\n    fileSystem.dir.create(finalPath);\n  }\n\n  fileSystem.copy(fileSystem.dir.list(path, { fullNames: true }), finalPath, {\n    recursive: true,\n  });\n\n  // reduce index size\n  metadata['columns'] = null;\n\n  var basePath = boardLocalStorage(board);\n\n  return registry.pinRegistryUpdate(\n    name,\n    board,\n    Object.assign(\n      {\n        path: registry.pinRegistryRelative(finalPath, { basePath: basePath }),\n      },\n      metadata\n    )\n  );\n};\n\nexport const boardPinFindLocal = (board, text, { ...args }) => {\n  var results = registry.pinRegistryFind(text, board);\n\n  if (results.length == 1) {\n    var metadata = results[0]['metadata'];\n    var path = registry.pinRegistryAbsolute(metadata['path'], board);\n    var extended = pinManifestGet(path);\n    var merged = pinManifestMerge(metadata, extended);\n\n    results[0]['metadata'] = merged;\n  }\n\n  return results;\n};\n\nexport const boardPinGetLocal = (board, name, { ...args }) => {\n  var version = args['version'];\n  var path = registry.pinRegistryRetrievePath(name, board);\n\n  if (!checks.isNull(version)) {\n    var manifest = pinManifestGet(registry.pinRegistryAbsolute(path, board));\n\n    if (!manifest['versions'].includes(version)) {\n      version = versions.boardVersionsExpand(manifest['versions'], version);\n    }\n\n    path = fileSystem.path(name, version);\n  }\n\n  return registry.pinRegistryAbsolute(path, board);\n};\n\nexport const boardPinRemoveLocal = (board, name) => {\n  return registry.pinRegistryRemove(name, board);\n};\n\nexport const boardPinVersionsLocal = (board, name) => {\n  return versions.boardVersionsGet(board, name);\n};\n","import { dfIsDataFrame } from './dataframe';\nimport { pinLog, pinDebug } from '../log';\n\nconst METHODS = {};\nconst DEFAULT_CLASS_NAME = 'default';\n\nconst initializeMethod = (methodName, object, ...args) => {\n  pinDebug('useMethod', Object.assign({ object: object }, ...args));\n\n  METHODS[methodName] = METHODS[methodName] || {};\n\n  var className = (object && object.class\n    ? object.class\n    : object.constructor && object.constructor.name\n    ? object.constructor.name\n    : DEFAULT_CLASS_NAME\n  ).toLowerCase();\n\n  if (dfIsDataFrame(object)) {\n    className = 'dataframe';\n  }\n\n  // support to construct objects by wrrapping object in content/class dictionary\n  if (typeof object['_content'] !== 'undefined') {\n    object = object['_content'];\n  }\n\n  return { className, object };\n};\n\nexport const registerMethod = (methodName, className, method) => {\n  METHODS[methodName] = METHODS[methodName] || {};\n  METHODS[methodName][className] = method;\n\n  return method;\n};\n\nexport const useMethodAsync = async (methodName, object, ...args) => {\n  const init = initializeMethod(methodName, object, ...args);\n  const className = init.className;\n\n  object = init.object;\n\n  if (METHODS[methodName] && METHODS[methodName][className]) {\n    const result = METHODS[methodName][className](object, ...args);\n\n    if (result && result.then) {\n      return await result;\n    }\n    return result;\n  }\n\n  if (METHODS[methodName] && METHODS[methodName]['default']) {\n    return METHODS[methodName]['default'](object, ...args);\n  }\n\n  throw new Error(\n    `no applicable method for '${methodName}' applied to an object of class '${className}'`\n  );\n};\n\nexport const useMethod = (methodName, object, ...args) => {\n  const init = initializeMethod(methodName, object, ...args);\n  const className = init.className;\n\n  object = init.object;\n\n  if (METHODS[methodName] && METHODS[methodName][className]) {\n    return METHODS[methodName][className](object, ...args);\n  }\n\n  if (METHODS[methodName] && METHODS[methodName]['default']) {\n    return METHODS[methodName]['default'](object, ...args);\n  }\n\n  throw new Error(\n    `no applicable method for '${methodName}' applied to an object of class '${className}'`\n  );\n};\n","import * as boardLocal from './board-local';\nimport * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport { useMethod, useMethodAsync } from './utils/inheritance';\nimport { boardDefault } from './board-default';\nimport { dataFrame } from './utils/dataframe';\n\nexport const boardPinCreate = (board, path, name, metadata, ...args) => {\n  return useMethod('boardPinCreate', board, path, name, metadata, ...args);\n};\n\nexport const boardInitialize = async (board, { ...args }) => {\n  return await useMethodAsync('boardInitialize', board, ...args);\n};\n\nexport const boardInitializeDefault = (board, ...args) => {\n  throw new Error(\"Board '\" + board['name'] + \"' is not a valid board.\");\n};\n\nexport const boardPinGet = async (board, name, ...args) => {\n  return useMethodAsync('boardPinGet', board, name, ...args);\n};\n\nexport const boardPinRemove = (board, name, ...args) => {\n  return useMethod('boardPinRemove', board, name, ...args);\n};\n\nexport const boardPinFind = async (board, text, ...args) => {\n  return useMethodAsync('boardPinFind', board, text, ...args);\n};\n\nexport const boardPinVersions = (board, name, ...args) => {\n  return useMethod('boardPinVersions', board, name, ...args);\n};\n\nexport const boardBrowse = (board, ...args) => {\n  return useMethod('boardBrowse', ...args);\n};\n\nexport const boardBrowseDefault = (board, ...args) => {\n  return null;\n};\n\nexport const boardEmptyResults = () => {\n  return dataFrame(null, {\n    name: 'character',\n    description: 'character',\n    rows: 'numeric',\n    cols: 'numeric',\n    class: 'numeric',\n  });\n};\n\nexport const boardPinVersionsDefault = (board, name, ...args) => {\n  return dataFrame(null, {\n    version: 'character',\n  });\n};\n","import * as options from './host/options';\nimport * as arrays from './utils/arrays';\nimport callbacks from './host/callbacks';\nimport * as ui from './ui-viewer';\nimport * as boardRegistry from './board-registry';\nimport { boardCachePath } from './board-registration';\nimport { boardInitialize } from './board-extensions';\nimport { pinLog, pinDebug } from './log';\nimport * as checks from './utils/checks';\nimport { boardDefault } from './board-default';\n\nconst newBoard = async (board, name, cache, versions, ...args) => {\n  if (cache == null) throw new Error(\"Please specify the 'cache' parameter.\");\n\n  board = {\n    board: board,\n    name: name,\n    cache: cache,\n    versions: versions,\n    class: board,\n  };\n\n  board = await boardInitialize(\n    board,\n    Object.assign({ cache, versions }, ...args)\n  );\n\n  return board;\n};\n\nconst boardInfer = (x, { name, board, registerCall, connect, url }) => {\n  var inferred = {\n    name: name,\n    board: board == null ? name : board,\n    connect: connect == null ? name !== 'packages' : connect,\n    url: url,\n    registerCall: registerCall,\n  };\n\n  // if boards starts with http:// or https:// assume this is a website board\n  if (/^http:\\/\\/|^https:\\/\\//g.test(x)) {\n    inferred['url'] = x;\n    inferred['board'] = 'datatxt';\n\n    // use only subdomain as friendly name which is also used as cache folder\n    if (name == null || x === name) {\n      // inferred$name <- gsub(\"https?://|\\\\..*\", \"\", inferred$url)\n      inferred['name'] = inferred['url']\n        .replace(/https?:\\/\\//g, '')\n        .replace(/\\..*$/g, '');\n    }\n\n    inferred['registerCall'] =\n      'pins::board_register(board = \"datatxt\", name = \"' +\n      inferred['name'] +\n      '\", url = \"' +\n      inferred['url'] +\n      '\")';\n  }\n\n  if (inferred['name'] == null) inferred['name'] = x;\n  if (inferred['board'] == null) inferred['board'] = x;\n\n  return inferred;\n};\n\nconst boardRegisterCode = (board, name) => {\n  return callbacks.get('boardRegisterCode')(board, name);\n};\n\nexport const boardConnect = (board, code, ...args) => {\n  var board = boardGet(board);\n\n  ui.uiViewerRegister(board, code);\n\n  return board;\n};\n\nexport const boardDisconnect = (name, args) => {\n  const board = boardGet(name);\n\n  ui.uiViewerClose(board);\n\n  return board;\n};\n\nexport const boardList = () => {\n  pinDebug('boardList', {});\n  // TODO: do we use packages board?\n  var defaults = arrays.concat(['local'], boardDefault());\n  var boards = arrays.concat(boardRegistry.list(), defaults);\n\n  return arrays.unique(boards);\n};\n\nexport const boardGet = (name) => {\n  if (checks.isNull(name)) {\n    name = boardDefault();\n  }\n\n  var registerCall = 'pins::board_register(board = \"' + name + '\")';\n\n  if (!boardRegistry.list().includes(name)) {\n    var boardInferred = boardInfer(name, {});\n\n    if (boardInferred['registerCall'] !== null) {\n      registerCall = boardInferred['registerCall'];\n    }\n\n    // attempt to automatically register board\n    name = boardInferred['name'];\n    try {\n      boardRegister(boardInferred['board'], {\n        name: boardInferred['name'],\n        connect: boardInferred['connect'],\n        registerCall: registerCall,\n        url: boardInferred['url'],\n      });\n    } catch (err) {\n      pinLog(`Failed to register board ${name}: ${err.toString()}`);\n    }\n\n    if (!boardRegistry.list().includes(name)) {\n      throw `Board '${name}' not a board, available boards: ${boardList().join(\n        ', '\n      )}`;\n    }\n  }\n\n  return boardRegistry.get(name);\n};\n\nexport const boardRegister = async (\n  board,\n  { name, cache, versions, ...args }\n) => {\n  if (name == null) name = board;\n  if (cache == null) cache = boardCachePath();\n\n  var inferred = boardInfer(board, {\n    board: board,\n    name: name,\n    registerCall: args['registerCall'],\n    connect: args['connect'],\n    url: args['url'],\n  });\n\n  args['url'] = inferred['url'];\n  board = await newBoard(\n    inferred['board'],\n    inferred['name'],\n    cache,\n    versions,\n    args\n  );\n\n  boardRegistry.set(inferred['name'], board);\n\n  if (inferred['registerCall'] == null)\n    inferred['registerCall'] = boardRegisterCode(\n      board['name'],\n      inferred['name']\n    );\n\n  if (inferred['connect'] !== false)\n    boardConnect(board['name'], inferred['registerCall']);\n\n  return inferred['name'];\n};\n\nexport const boardDeregister = (name, args = {}) => {\n  if (!boardRegistry.list().includes(name)) {\n    throw `Board '${name}' is not registered`;\n  }\n\n  const board = boardGet(name);\n\n  if (args.disconnect) {\n    boardDisconnect(name);\n  }\n\n  boardRegistry.remove(name);\n\n  return null;\n};\n","import { useMethod, useMethodAsync } from './utils/inheritance';\nimport * as checks from './utils/checks';\nimport { boardGet, boardList } from './board';\nimport { pinResetCache } from './pin-registry';\nimport {\n  boardPinGet,\n  boardPinFind,\n  boardPinRemove,\n  boardPinVersions,\n  boardEmptyResults,\n} from './board-extensions';\nimport { uiViewerUpdated } from './ui-viewer';\nimport { pinManifestGet } from './pin-manifest';\nimport * as arrays from './utils/arrays';\nimport { pinVersionsPathName, boardVersionsShorten } from './versions';\nimport * as fileSystem from './host/file-system';\nimport { pinContentName, pinResultsMerge } from './pin-tools';\nimport { dataFrame, dfCBind, dfColRemove } from './utils/dataframe';\nimport { pinLog, pinDebug } from './log';\n\nexport const pin = async (x, ...args) => {\n  pinDebug('pin', Object.assign({ x: x }, ...args));\n  return arrays.maybeOne(await useMethodAsync('pin', x, ...args));\n};\n\nexport const pinGet = async (\n  name,\n  { board, cache, extract, version, files, signature, ...args }\n) => {\n  if (checks.isNull(board)) {\n    var boardPinGetOrNull = async (...args) => {\n      try {\n        return await boardPinGet(...args);\n      } catch (err) {\n        return null;\n      }\n    };\n\n    var result = await boardPinGetOrNull(boardGet(null), name, {\n      version: version,\n    });\n\n    if (checks.isNull(result) && checks.isNull(board)) {\n      for (var boardName in boardList()) {\n        if (!cache) pinResetCache(boardName, name);\n        result = await boardPinGetOrNull(boardGet(boardName), name, {\n          extract: extract,\n          version: version,\n        });\n        if (!checks.isNull(result)) {\n          pinLog('Found pin ' + name + ' in board ' + boardName);\n          break;\n        }\n      }\n    }\n    if (checks.isNull(result))\n      throw new Error(\"Failed to retrieve '\" + name + \"' pin.\");\n  } else {\n    if (!cache) pinResetCache(board, name);\n    result = await boardPinGet(\n      boardGet(board),\n      name,\n      Object.assign({ extract: extract, version: version }, ...args)\n    );\n  }\n\n  var manifest = pinManifestGet(result);\n  if (checks.isNull(manifest['type'])) manifest['type'] = 'files';\n\n  var resultFiles = arrays\n    .ensure(result)\n    .filter((e) => !new RegExp('^' + pinVersionsPathName()).test(e));\n  resultFiles = fileSystem.dir.list(resultFiles, { fullNames: true });\n  if (manifest['type'] == 'files' && resultFiles.length > 1)\n    resultFiles = resultFiles.filter((e) => !/\\/data\\.txt$/g.test(e));\n\n  if (!checks.isNull(signature)) {\n    var pinSignature = pinVersionSignature(resultFiles);\n    if (signature !== pin_signature)\n      throw new Error(\n        \"Pin signature '\" + pin_signature + \"' does not match given signature.\"\n      );\n  }\n\n  if (files) {\n    return arrays.maybeOne(resultFiles);\n  } else {\n    return pinLoad({ _content: result, class: manifest['type'] });\n  }\n};\n\nexport const pinRemove = (name, board) => {\n  board = boardGet(board);\n\n  boardPinRemove(board, name);\n  uiViewerUpdated(board);\n\n  return null;\n};\n\nconst pinFindEmpty = () => {\n  return dataFrame(null, {\n    name: 'character',\n    description: 'character',\n    type: 'character',\n    metadata: 'character',\n    board: 'character',\n  });\n};\n\nexport const pinFind = async (\n  text,\n  { board, name, extended, metadata, ...args }\n) => {\n  if (checks.isNull(board) || board.length == 0) board = boardList();\n\n  text = pinContentName(text);\n  if (checks.isNull(text) && !checks.isNull(name)) text = name;\n\n  var allPins = pinFindEmpty();\n\n  board = arrays.ensure(board);\n  for (var boardIdx in board) {\n    var boardName = board[boardIdx];\n    var boardObject = boardGet(boardName);\n\n    var boardPins = null;\n    try {\n      boardPins = await boardPinFind(\n        boardObject,\n        text,\n        Object.assign({ name: name, extended: extended }, ...args)\n      );\n    } catch (error) {\n      pinLog(\"Error searching '\" + boardName + \"' board: \" + error);\n      boardPins = boardEmptyResults();\n    }\n\n    if (extended === true) {\n      boardPins = boardPins.map((row) => {\n        if (row.hasOwnProperty('metadata')) {\n          Object.assign(row, row['metadata']);\n          delete row['metadata'];\n        }\n        return row;\n      });\n    }\n\n    if (boardPins.length > 0) {\n      boardPins = dfCBind(\n        boardPins,\n        dataFrame(\n          boardPins.map((e) => Object.assign(e, { board: boardName })),\n          { board: 'character' }\n        )\n      );\n\n      allPins = pinResultsMerge(allPins, boardPins, extended === true);\n    }\n  }\n\n  if (!checks.isNull(text)) {\n    allPins = allPins.filter(\n      (e) =>\n        e.name === text ||\n        (checks.isNull(e.description)\n          ? false\n          : new RegExp(text, 'i').test(e.description))\n    );\n  }\n\n  if (!metadata) {\n    allPins = dfColRemove(allPins, 'metadata');\n  }\n\n  if (!checks.isNull(name)) {\n    allPins = allPins.filter((e) =>\n      new RegExp('(.*/)?' + name + '$').test(e.name)\n    );\n    if (allPins.length) allPins = allPins.filter((e, idx) => idx === 0);\n  }\n\n  // sort pin results by name\n  allPins = allPins.sort((a, b) => a.name < b.name);\n\n  return allPins;\n};\n\nexport const pinPreview = (x, ...args) => {\n  return useMethod('pinPreview', x, ...args);\n};\n\nexport const pinLoad = (path, ...args) => {\n  return useMethod('pinLoad', path, ...args);\n};\n\nconst pinFiles = async (name, { board, ...args }) => {\n  var entry = await pinFind({ name: name, board: board, metadata: true });\n\n  if (entry.length != 1) throw new Error(\"Pin '\" + name + \"' not found.\");\n  var metadata = entry[0]['metadata'];\n\n  return metadata[path];\n};\n\nconst pinGetOne = async (name, board, extended, metadata) => {\n  // first ensure there is always one pin since metadata with multiple entries can fail\n  var entry = await pinFind(null, {\n    name: name,\n    board: board,\n    metadata: false,\n    extended: false,\n  });\n\n  if (entry.length == 0) throw new Error(\"Pin '\" + name + \"' was not found.\");\n  if (entry.length > 1)\n    throw new Error(\n      \"Pin '\" +\n        name +\n        \"' was found in multiple boards: \" +\n        entry['board'].join(',') +\n        '.'\n    );\n\n  board = entry[0]['board'];\n  entry = await pinFind(null, {\n    name: name,\n    board: board,\n    metadata: metadata,\n    extended: extended,\n  });\n\n  return entry[0];\n};\n\nexport const pinInfo = async (\n  name,\n  { board, extended, metadata, signature, ...args }\n) => {\n  var entry = await pinGetOne(name, board, extended, metadata);\n\n  var board = entry['board'];\n\n  metadata = [];\n  if (\n    Object.keys(entry).includes('metadata') &&\n    entry.metadata.columns.length > 0\n  ) {\n    metadata = entry['metadata'];\n  }\n\n  if (signature) {\n    var files = await pinGet(name, { board: board, files: true });\n    entry['signature'] = pinVersionSignature(files);\n  }\n\n  var entryExt = Object.assign(entry);\n  delete entryExt['metadata'];\n\n  [...Object.keys(entryExt)].forEach((key) => {\n    const filtered =\n      !(entryExt[key] instanceof Array) ||\n      entryExt[key].length != 1 ||\n      !(entryExt[key][0] instanceof Array) ||\n      entryExt[key][0].length > 0;\n\n    if (!filtered) {\n      delete entryExt[key];\n    }\n  });\n\n  for (name in metadata) {\n    entryExt[name] = metadata[name];\n  }\n\n  return Object.assign(entryExt, { class: 'pin_info' });\n};\n\nexport const pinFetch = (...args) => {\n  return useMethod('pinFetch', ...args);\n};\n\nexport const pinVersions = (name, { board, full = false, ...args }) => {\n  var versions = boardPinVersions(boardGet(board), name);\n\n  if (!full) {\n    versions['version'] = boardVersionsShorten(versions['version']);\n  }\n\n  return versions;\n};\n","export const BoardName = Object.freeze({\n  kaggle: 'kaggle',\n});\n","import * as fileSystem from '../host/file-system';\nimport { BoardName } from './const';\n\nexport const pinDefaultName = (x, board) => {\n  const name = fileSystem.basename(x);\n  const error = new Error(\n    \"Can't auto-generate pin name from object, please specify the 'name' parameter.\"\n  );\n\n  if (!name) {\n    throw error;\n  }\n\n  const sanitized = name\n    .replace(/[^a-zA-Z0-9-]/g, '-')\n    .replace(/^-*|-*$/g, '')\n    .replace(/-+/g, '-');\n\n  if (!sanitized) {\n    throw error;\n  }\n\n  if (board === BoardName.kaggle && sanitized.length < 5) {\n    return `${sanitized}-pin`;\n  }\n\n  return sanitized;\n};\n","import * as list from './utils/list';\n\nexport const pinsMergeCustomMetadata = (metadata, customMetadata) => {\n  var fixedFields = ['rows', 'cols', 'name', 'description'];\n\n  list.namesArr(customMetadata).forEach((entry) => {\n    if (entry === 'columns') {\n      var fixedColumnnFields = ['name', 'type'];\n\n      // convert to list of columns\n      if (Array.isArray(metadata['columns'])) {\n        metadata['columns'] = metadata['columns'].map((x, i) => {\n          return {\n            name: Object.keys(metadata['columns'])[i],\n            type: metadata['columns'][i],\n          };\n        });\n      }\n\n      // TODO: Need to convert old-style yaml columns names to new format\n\n      customMetadata['columns'].forEach((column) => {\n        var foundIdx = metadata$columns.filter(\n          (e, i) => metadata['columns'][i]['name'] === column['name']\n        );\n\n        if (foundIdx.length == 1) {\n          Object.keys(column).forEach((fieldName) => {\n            if (!fixedColumnnFields.includes(fieldName)) {\n              metadata['columns'][foundIdx][fieldName] = column[fieldName];\n            }\n          });\n        }\n      });\n    } else if (!fixedFields.includes(entry)) {\n      metadata[entry] = customMetadata[entry];\n    }\n  });\n\n  return metadata;\n};\n","import * as fileSystem from './host/file-system';\nimport * as arrays from './utils/arrays';\nimport { boardGet } from './board';\nimport { pinResetCache } from './pin-registry';\nimport { pinLog } from './log';\nimport * as options from './host/options';\nimport { boardDefault } from './board-default';\nimport { onExit } from './utils/onexit.js';\nimport * as checks from './utils/checks';\nimport {\n  pinManifestExists,\n  pinManifestGet,\n  pinManifestCreate,\n} from './pin-manifest';\nimport { pinsMergeCustomMetadata } from './pins-metadata';\nimport { boardPinCreate } from './board-extensions';\nimport { uiViewerUpdated } from './ui-viewer';\nimport { pinGet } from './pin';\n\nconst pinNameFromPath = (pinPath) => {\n  const baseName = fileSystem.basename(pinPath);\n  const baseNameWithoutExt = fileSystem.tools.filePathSansExt(baseName);\n\n  return baseNameWithoutExt.replace(/[^a-zA-Z0-9]+/g, '_');\n};\n\nexport const boardPinStore = (board, opts) => {\n  var {\n    path: path,\n    description,\n    type,\n    metadata,\n    extract: extract,\n    retrieve: retrieve,\n    ...args\n  } = Object.assign({ retrieve: true }, opts);\n  path = arrays.ensure(path);\n\n  var customMetadata = args['customMetadata'];\n  var zip = args['zip'];\n\n  if (checks.isNull(extract)) extract = true;\n\n  const boardInstance = boardGet(board);\n  const name = opts.name || arrays.vectorize(pinNameFromPath)(pinPath);\n\n  pinLog(`Storing ${name} into board ${boardInstance.name} with type ${type}`);\n\n  if (!args.cache) pinResetCache(boardInstance, name);\n\n  path = path.filter((x) => !/data\\.txt/g.test(x));\n\n  const storePath = fileSystem.tempfile();\n  fileSystem.dir.create(storePath);\n  return onExit(\n    () => unlink(storePath, { recursive: true }),\n    () => {\n      if (\n        path.length == 1 &&\n        /^http/g.test(path) &&\n        !/\\\\.[a-z]{2,4}$/g.test(path) &&\n        options.getOption('pins.search.datatxt', true)\n      ) {\n        // attempt to download data.txt to enable public access to boards like rsconnect\n        datatxtPath = fileSystem.path(path, 'data.txt');\n        localPath = pinDownload(datatxtPath, name, boardDefault(), {\n          canFail: true,\n        });\n        if (!is.null(local_path)) {\n          manifest = pinManifestGet(localPath);\n          path = path + '/' + manifest[path];\n          extract = false;\n        }\n      }\n\n      var somethingChanged = false;\n      if (zip === true) {\n        var findCommonPath = function (path) {\n          var common = path[0];\n          if (\n            arrays.all(path, (common) => startsWith(common)) ||\n            common === fileSystem.dirname(common)\n          )\n            return common;\n          return findCommonPath(fileSystem.dirname(common[0]));\n        };\n\n        var commonPath = findCommonPath(path);\n        fileSystem.dir.zip(\n          commonPath.map((e) => e.replace(common_path + '/', '')),\n          fileSystem.path(storePath, 'data.zip'),\n          commonPath\n        );\n        somethingChanged = true;\n      } else {\n        for (var idxPath = 0; idxPath < path.length; idxPath++) {\n          var details = { somethingChanged: true };\n          var singlePath = path[idxPath];\n          if (/^http/g.test(singlePath)) {\n            singlePath = pin_download(\n              singlePath,\n              name,\n              boardDefault(),\n              Object.assign(\n                {\n                  extract: extract,\n                  details: details,\n                  canFail: true,\n                },\n                opt\n              )\n            );\n\n            if (!checks.isNull(details['error'])) {\n              var cachedResult = null;\n              try {\n                pinGet(name, { board: boardDefault() });\n              } catch (error) {}\n              if (checks.isNull(cachedResult)) {\n                throw new Error(details['error']);\n              } else {\n                pinLog(details['error']);\n              }\n              return cachedResult;\n            }\n          }\n\n          if (details['somethingChanged']) {\n            var copyOrLink = function (from, to) {\n              if (\n                fileSystem.fileExists(from) &&\n                fileSystem.fileSize(from) >=\n                  options.getOption('pins.link.size', 10 ^ 8)\n              )\n                fileSystem.createLink(\n                  from,\n                  fileSystem.path(to, fileSystem.basename(from))\n                );\n              else fileSystem.copy(from, to, { recursive: true });\n            };\n\n            if (fileSystem.dir.exists(singlePath)) {\n              for (entry in fileSystem.dir.list(singlePath, {\n                fullNames: true,\n              })) {\n                copyOrLink(entry, store_path);\n              }\n            } else {\n              copyOrLink(singlePath, storePath);\n            }\n\n            somethingChanged = true;\n          }\n        }\n      }\n\n      if (somethingChanged) {\n        if (!pinManifestExists(storePath)) {\n          metadata['description'] = description;\n          metadata['type'] = type;\n\n          metadata = pinsMergeCustomMetadata(metadata, customMetadata);\n\n          pinManifestCreate(\n            storePath,\n            metadata,\n            fileSystem.dir.list(storePath, { recursive: true })\n          );\n        }\n\n        boardPinCreate(boardInstance, storePath, name, metadata, ...args);\n\n        uiViewerUpdated(boardInstance);\n      }\n\n      if (retrieve) {\n        return pinGet(\n          name,\n          Object.assign({ board: boardInstance['name'] }, ...args)\n        );\n      } else {\n        return null;\n      }\n    }\n  );\n};\n","import * as fileSystem from './host/file-system';\nimport { pinDefaultName } from './utils/pin-utils';\nimport { boardPinStore } from './pin-extensions';\nimport { pinLog, pinDebug } from './log';\n\nexport const pinDefault = (x, opts = {}) => {\n  pinDebug('pinDefault', { x: x, opts: opts });\n\n  const { description, board, ...args } = opts;\n  const name = opts.name || pinDefaultName(x, board);\n  const path = fileSystem.tempfile();\n\n  fileSystem.dir.create(path);\n\n  fileSystem.write(JSON.stringify(x), fileSystem.path(path, 'data.json'));\n\n  return boardPinStore(\n    board,\n    Object.assign(\n      {},\n      {\n        name,\n        description,\n        path: path,\n        type: 'default',\n        metadata: [],\n      },\n      ...args\n    )\n  );\n};\n\nexport const pinPreviewDefault = (x, ...args) => x;\n\nexport const pinLoadDefault = (path, ...args) => {\n  return JSON.parse(fileSystem.read(fileSystem.path(path, 'data.json')));\n};\n\nexport const pinFetchDefault = (...args) => args['path'];\n","import callbacks from './callbacks';\n\nexport const fetch = () => callbacks.get('fetch');\n","export const boardDatatxtHeaders = (board, path, verb = 'GET', file) => {\n  if (board.url) {\n    // remove base url form path since S3 and others require relative paths when using custom domains\n    path = path.replace(`^${board.url}/?`, '');\n  }\n\n  if (typeof board.headers === 'function') {\n    return board.headers(board, verb, path, file);\n  } else if (\n    (board.headers &&\n      (board.headers.length ||\n        typeof board.headers === 'string' ||\n        board.headers['request'])) ||\n    !board.headers\n  ) {\n    return board.headers;\n  } else {\n    throw `Unsupported class for board headers: ${typeof board.headers}`;\n  }\n};\n","import yaml from 'js-yaml';\nimport * as fileSystem from './host/file-system';\n\nexport const boardManifestGet = (path, defaultEmpty = false) => {\n  if (!fileSystem.fileExists(path) && defaultEmpty) {\n    return [];\n  }\n\n  let yamlText = fileSystem.readLines(path).join('\\n');\n\n  return yaml.safeLoad(yamlText);\n};\n\nexport const boardManifestCreate = (index, file) => {\n  // yaml::write_yaml(index, file)\n};\n\nexport const boardManifestLoad = (manifest) => {\n  return yaml.safeLoad(manifest);\n};\n","import * as fileSystem from './host/file-system';\nimport * as arrays from './utils/arrays';\nimport { boardPinStore } from './pin-extensions';\n\nexport const pinString = (\n  x,\n  opts = { name: null, description: null, board: null }\n) => {\n  const { name, description, board, ...args } = opts;\n  var paths = arrays.ensure(x);\n  var extension = paths.length > 0 ? 'zip' : fileSystem.tools.fileExt(paths);\n  return boardPinStore(\n    board,\n    Object.assign(\n      {},\n      {\n        name,\n        description,\n        path: paths,\n        type: 'files',\n        metadata: {\n          extension: extension,\n        },\n      },\n      ...args\n    )\n  );\n};\n\nexport const pinFileCacheMaxAge = (cacheControl) => {\n  if (!cacheControl) return null;\n\n  let maxAge = new RegExp('max-age').test(cacheControl);\n\n  if (maxAge.length !== 1) return null;\n  maxAge = cacheControl.replace(/.*max-age=/, '');\n\n  return parseFloat(maxAge.replace(/,.*$/, ''));\n};\n","import * as fileSystem from './host/file-system';\nimport * as requests from './host/requests';\nimport { tryCatch } from './utils/errors';\nimport { pinLog } from './log';\nimport { pinFileCacheMaxAge } from './pin-file';\nimport {\n  pinStoragePath,\n  pinRegistryRetrieveMaybe,\n  pinRegistryUpdate,\n} from './pin-registry';\n\nexport const pinDownloadOne = async (\n  path,\n  {\n    name,\n    component,\n    extract,\n    customEtag = '',\n    removeQuery,\n    config,\n    headers,\n    canFail,\n    cache = true,\n    contentLength = 0,\n    subpath,\n    details = {},\n    download = true,\n  }\n) => {\n  if (!subpath) subpath = name;\n\n  const fetch = requests.fetch();\n  const mustDownload = !cache;\n\n  // clean up name in case it's a full url\n  name = name.replace('^https?://', '');\n\n  const localPath = pinStoragePath(component, subpath);\n\n  if (!download) {\n    return localPath;\n  }\n\n  // use a temp path to rollback if something fails\n  const tempfile = fileSystem.tempfile();\n  fileSystem.dir.create(tempfile);\n\n  const oldPin = pinRegistryRetrieveMaybe(name, component);\n  let oldCache = oldPin.cache;\n  let oldCacheMissing = true;\n  let cacheIndex = 0;\n\n  if (!oldCache) {\n    oldPin.cache = {};\n    oldCache = {};\n    cacheIndex = 1;\n  } else {\n    const cacheUrls = Object.keys(oldCache).map((k) => oldCache[k].url);\n\n    cacheIndex = cacheUrls.findIndex((u) => u === path);\n    if (cacheIndex === -1) {\n      oldCache = {};\n      cacheIndex = cacheUrls.length + 1;\n    } else {\n      oldCache = oldCache[cacheIndex];\n      oldCacheMissing = false;\n    }\n  }\n\n  let reportError = (e) => {\n    if (oldCacheMissing) {\n      throw new Error(e);\n    } else {\n      pinLog(e);\n    }\n  };\n  const catchLog = (func) =>\n    tryCatch(func, (e) => {\n      pinLog(e.message);\n    });\n  const catchError = oldCacheMissing\n    ? (func) => func\n    : (func) =>\n        tryCatch(func, (e) => {\n          reportError(e.message);\n        });\n\n  if (canFail) {\n    reportError = (e) => {\n      details.error = e;\n    };\n  }\n\n  cache = {};\n  cache.etag = oldCache.etag || '';\n  cache.maxAge = oldCache.maxAge || 0;\n  cache.changeAge = oldCache.changeAge || new Date().getTime() - cache.maxAge;\n  cache.url = path;\n\n  let error = null;\n  let extractType = null;\n\n  pinLog(\n    `Checking 'changeAge' header (time, change age, max age): ${new Date()}, ${\n      cache.changeAge\n    }, ${cache.maxAge}`\n  );\n\n  details.somethingChanged = false;\n\n  // skip downloading if maxAge still valid\n  if (new Date().getTime() >= cache.changeAge + cache.maxAge || mustDownload) {\n    const skipDownload = false;\n\n    if (customEtag && customEtag.length) {\n      pinLog(`Using custom 'etag' (old, new): ${oldCache.etag}, ${customEtag}`);\n      cache.etag = customEtag;\n    } else {\n      // TODO: use config parameter\n      const headResult = await fetch(path, { method: 'HEAD', headers });\n\n      if (headResult) {\n        cache.etag = headResult.headers.etag || '';\n        cache.changeAge = new Date().getTime();\n        cache.maxAge =\n          pinFileCacheMaxAge(headResult.headers['cache-control']) ||\n          cache.changeAge * 2;\n        contentLength = headResult.headers['content-length'];\n        pinLog(`Checking 'etag' (old, new):  ${oldCache.etag}, ${cache.etag}`);\n      }\n    }\n\n    const etagChanged = cache.etag || oldCache.etag !== cache.etag;\n\n    // skip downloading if etag has not changed\n    if (oldCacheMissing || etagChanged || mustDownload) {\n      let downloadName = fileSystem.basename(path);\n\n      if (removeQuery) {\n        // TODO\n        // downloadName = strsplit(download_name, \"\\\\?\")[[1]][1];\n      }\n\n      const destinationPath = fileSystem.path(tempfile, downloadName);\n\n      pinLog(`Downloading ${path} to ${destinationPath}`);\n      details.somethingChanged = true;\n\n      const result = await fetch(path).then((response) => {\n        if (!response.ok) {\n          pinLog(`Failed to download remote file: ${path}`);\n        }\n        return response;\n      });\n\n      if (result.ok) {\n        const contentType = result.headers['content-type'];\n        const text = await result.text();\n\n        fileSystem.write(text, destinationPath);\n\n        /*\n        // TODO\n        if (contentType) {\n          extractType = contentType.replace(/application\\/(x-)?/, '');\n          if (['application/octet-stream', 'application/zip'].includes(contentType)) {\n            if (fileSystem.fileSize(destinationPath) > 4 &&\n              readBin(destination_path, raw(), 4) === as.raw(c(0x50, 0x4b, 0x03, 0x04)))\n            extractType = 'zip'\n          }\n        }\n        */\n      }\n    }\n  }\n\n  if (error) return;\n\n  const newCache = oldPin.cache;\n  newCache[cacheIndex] = cache;\n\n  // allow to override extraction method, useful in pin() from URLs\n  if (extract) {\n    extractType = extract;\n    extract = true;\n  }\n\n  const files = fileSystem.dir.list(tempfile, { fullNames: true });\n  if (extractType && extract) {\n    /*\n    // TODO\n    pinExtract(\n      structure(files, { class: extractType }),\n      tempPath\n    )\n    */\n  }\n\n  files.forEach((file) => {\n    fileSystem.copy(file, localPath, { overwrite: true, recursive: true });\n  });\n\n  // use relative paths to match remote service downloads and allow moving pins folder, potentially\n  const relativePath = localPath.replace(pinStoragePath(component, ''), '');\n\n  pinRegistryUpdate(name, component, {\n    path: oldPin.path || relativePath,\n    cache: newCache,\n  });\n\n  return localPath;\n};\n\nexport const pinDownload = async (path, { ...args }) => {\n  // TODO: path can be an array\n  const localPath = await pinDownloadOne(path, args);\n\n  return localPath;\n};\n","import yaml from 'js-yaml';\nimport * as fileSystem from './host/file-system';\nimport * as requests from './host/requests';\nimport { boardDatatxtHeaders } from './board-datatxt-headers';\nimport { boardCachePath } from './board-registration';\nimport { boardLocalStorage } from './board-storage';\nimport { boardManifestGet, boardManifestLoad } from './board-manifest';\nimport { pinStoragePath } from './pin-registry';\nimport {\n  pinManifestGet,\n  pinManifestDownload,\n  pinManifestCreate,\n  pinManifestMerge,\n} from './pin-manifest';\nimport { pinDownload } from './pin-download';\nimport { boardVersionsExpand } from './versions';\n\nconst datatxtRefreshIndex = async (board) => {\n  if (!board.url) {\n    throw new Error(`Invalid 'url' in '${board.name}' board.`);\n  }\n\n  let indexFile = 'data.txt';\n\n  if (board.indexRandomize) {\n    indexFile += `?rand=${Math.round(Math.random() * 1e8)}`;\n  }\n\n  const indexUrl = fileSystem.path(board.url, indexFile);\n  const fetch = requests.fetch();\n\n  const headers = boardDatatxtHeaders(board, 'data.txt');\n\n  const data = await fetch(indexUrl, { headers }).then((response) => {\n    if (!response.ok) {\n      throw new Error(`Failed to retrieve data.txt file from ${board.url}.`);\n    } else {\n      return response.text();\n    }\n  });\n\n  const tempfile = fileSystem.tempfile();\n\n  fileSystem.dir.create(tempfile);\n  fileSystem.write(data, tempfile);\n\n  const localIndex = fileSystem.path(boardLocalStorage(board), 'data.txt');\n\n  let currentIndex = boardManifestGet(localIndex, true);\n  let newIndex = boardManifestGet(tempfile);\n\n  newIndex = newIndex.map((newEntry) => {\n    const currentEntry = currentIndex.filter((ci) => ci.path === newEntry.path);\n\n    if (currentEntry.length == 1) {\n      newEntry.cache = currentEntry[0].cache;\n    }\n\n    return newEntry;\n  });\n\n  currentIndex = newIndex;\n\n  const yamlText = yaml.safeDump(currentIndex);\n\n  fileSystem.writeLines(localIndex, yamlText.split('\\n'));\n};\n\nconst datatxtPinDownloadInfo = (board, name, args) => {\n  let index = boardManifestGet(\n    fileSystem.path(boardLocalStorage(board), 'data.txt')\n  );\n  index = index.filter((v) => v.name === name);\n\n  if (!index.length && board.needsIndex) {\n    throw new Error(`Could not find '${name}' pin in '${board.name}' board.`);\n  }\n\n  let indexEntry = null;\n\n  if (index.length) {\n    indexEntry = index[0];\n  } else {\n    // if there is no index, fallback to downloading data.txt for the pin,\n    // this can happen with incomplete indexes.\n    indexEntry = [{ path: name }];\n  }\n\n  // try to download index as well\n  let pathGuess = new RegExp('.*/.*\\\\.[a-zA-Z]+$').test(indexEntry.path)\n    ? fileSystem.dirname(indexEntry.path)\n    : indexEntry.path;\n\n  // if 'pathGuess' already has a scheme, don't prepend board URL\n  pathGuess = new RegExp('^https?://').test(pathGuess)\n    ? pathGuess\n    : fileSystem.path(board.url, pathGuess);\n\n  return { pathGuess, indexEntry };\n};\n\nconst datatxtRefreshManifest = async (board, name, download, args) => {\n  const { pathGuess, indexEntry } = datatxtPinDownloadInfo(board, name, args);\n\n  // TODO: fix pathGuess - there is no data.txt in iris/ folder\n  const downloadPath = fileSystem.path(pathGuess.slice(0, -6), 'data.txt');\n\n  await pinDownload(downloadPath, {\n    name,\n    component: board,\n    canFail: true,\n    download,\n    headers: boardDatatxtHeaders(board, downloadPath),\n  });\n\n  // TODO: should be array?\n  return { pathGuess, indexEntry, downloadPath };\n};\n\nexport const boardInitializeDatatxt = async (board, args) => {\n  const {\n    url,\n    browseUrl,\n    headers,\n    bucket,\n    indexUpdated,\n    indexRandomize = false,\n    needsIndex = true,\n    cache = boardCachePath(),\n    ...params\n  } = args;\n\n  if (!url) {\n    throw new Error(\"The 'datatxt' board requires a 'url' parameter.\");\n  }\n\n  board.url = url.replace(/(\\/)?data.txt$/g, '');\n  board.headers = headers;\n  board.needsIndex = needsIndex;\n  board.browseUrl = browseUrl || url;\n  board.indexUpdated = indexUpdated;\n  board.bucket = bucket;\n  board.indexRandomize = indexRandomize;\n\n  Object.keys(params).forEach((key) => {\n    board[key] = params[key];\n  });\n\n  await datatxtRefreshIndex(board);\n\n  return board;\n};\n\nexport const boardPinGetDatatxt = async (board, name, args) => {\n  const { extract, version, download = true, ...opts } = args;\n  const manifestPaths = await datatxtRefreshManifest(\n    board,\n    name,\n    download,\n    opts\n  );\n\n  const { indexEntry } = manifestPaths;\n  let pathGuess = manifestPaths.pathGuess;\n  let downloadPath = manifestPaths.downloadPath;\n  let localPath = pinStoragePath(board, name);\n  let manifest = pinManifestGet(localPath);\n\n  if (version) {\n    if (!manifest.versions.includes(version)) {\n      version = boardVersionsExpand(manifest.versions, version);\n    }\n\n    downloadPath = fileSystem.path(pathGuess, fileSystem.path(version, 'data.txt'));\n    localPath = fileSystem.path(localPath, version);\n\n    await pinDownload(downloadPath, {\n      name,\n      component: board,\n      canFail: true,\n      headers: boardDatatxtHeaders(board, downloadPath),\n      subpath: fileSystem.path(name, version),\n    });\n\n    manifest = pinManifestGet(localPath);\n    pathGuess = fileSystem.path(pathGuess, version);\n  }\n\n  if (manifest) {\n    downloadPath = indexEntry.path;\n\n    const pinManifest = pinManifestDownload(localPath);\n\n    if (pinManifest) {\n      // we find a data.txt file in subfolder with paths, we use those paths instead of the index paths\n      downloadPath = '';\n\n      if (new Regexp('^https?://').test(pinManifest)) {\n        downloadPath = pinManifest;\n      } else {\n        downloadPath = fileSystem.path(pathGuess, pinManifest);\n      }\n    } else {\n      indexEntry.path = null;\n      pinManifestCreate(localPath, indexEntry, indexEntry.path);\n    }\n  } else {\n    // attempt to download from path when index not available\n    downloadPath = fileSystem.path(board.url, name);\n  }\n\n  if (!new RegExp('https?://').test(downloadPath)) {\n    downloadPath = fileSystem.path(board.url, downloadPath);\n  }\n\n  localPath = await pinDownload(downloadPath, {\n    name,\n    component: board,\n    extract,\n    download,\n    headers: boardDatatxtHeaders(board, downloadPath),\n  });\n\n  return localPath;\n};\n\nexport const boardPinFindDatatxt = async (board, text, args) => {\n  await datatxtRefreshIndex(board);\n\n  const entries = boardManifestGet(\n    fileSystem.path(boardLocalStorage(board), 'data.txt')\n  );\n\n  if (args.extended) {\n    return entries;\n  }\n\n  let results = entries.map((e) => ({\n    name: e.name || fileSystem.basename(e.path),\n    description: e.description || '',\n    type: e.type || 'files',\n    metadata: e,\n    stringsAsFactors: false,\n  }));\n\n  if (args.name) {\n    results = results.filter((i) => i.name === agrs.name);\n  }\n\n  if (results.length === 1) {\n    let metadata = JSON.parse(results[0].metadata);\n    const pathGuess = new RegExp('\\\\.[a-zA-Z]+$').test(metadata.path)\n      ? fileSystem.dirname(metadata.path)\n      : metadata.path;\n    const datatxtPath = fileSystem.path(\n      board.url,\n      fileSystem.path(pathGuess, 'data.txt')\n    );\n\n    const response = await fetch(datatxtPath, {\n      headers: boardDatatxtHeaders(board, datatxtPath),\n    });\n\n    if (response.ok) {\n      const pinMetadata = boardManifestLoad(await response.text());\n      metadata = pinManifestMerge(metadata, pinMetadata);\n      results.metadata = metadata;\n    }\n  }\n\n  return results;\n};\n","import * as signature from './host/signature';\nimport * as fileSystem from './host/file-system';\nimport callbacks from './host/callbacks';\nimport { boardGet } from './board';\nimport { boardInitializeDatatxt } from './board-datatxt';\n\nexport const s3Headers = (board, verb, path, file) => {\n  const date = new Date().toUTCString();\n\n  // allow full urls to allow arbitrary file downloads\n  let bucket = board.bucket;\n\n  if (new RegExp('^https?://').test(path)) {\n    const pathNohttp = path.replace('^https?://', '');\n\n    path = pathNohttp.replace('^[^/]+/', '');\n    bucket = pathNohttp.replace('//..*', '');\n  }\n\n  const content = [\n    verb,\n    '',\n    'application/octet-stream',\n    date,\n    fileSystem.path(bucket, path),\n  ].join('\\n');\n\n  const sign = callbacks.get('btoa')(signature.md5(content, board.secret));\n  const headers = {\n    Host: `${bucket}.${board.host}`,\n    Date: date,\n    'Content-Type': 'application/octet-stream',\n    Authorization: `AWS ${board.key}:${sign}`,\n  };\n\n  return headers;\n};\n\nexport const boardInitializeS3 = async (board, args) => {\n  const {\n    bucket,\n    key,\n    secret,\n    cache,\n    host = 's3.amazonaws.com',\n    ...params\n  } = args;\n\n  board.bucket = bucket;\n\n  if (!bucket) throw new Error(\"The 's3' board requires a 'bucket' parameter.\");\n  if (!key) throw new Error(\"The 's3' board requires a 'key' parameter.\");\n  if (!secret) throw new Error(\"The 's3' board requires a 'secret' parameter.\");\n\n  const obj = Object.assign({}, params, {\n    name: board.name,\n    url: `http://${bucket}.${host}`,\n    cache,\n    headers: s3Headers,\n    needsIndex: false,\n    key,\n    secret,\n    bucket,\n    connect: false,\n    browseUrl: `https://s3.console.aws.amazon.com/s3/buckets/${bucket}/`,\n    host,\n  });\n\n  await boardInitializeDatatxt(board, obj);\n\n  return boardGet(board.name);\n};\n","import * as signature from './host/signature';\nimport * as fileSystem from './host/file-system';\nimport callbacks from './host/callbacks';\nimport { boardGet } from './board';\nimport { boardInitializeDatatxt } from './board-datatxt';\n\nexport const azureHeaders = (board, verb, path, file) => {\n  const date = new Date().toUTCString();\n  const azureVersion = '2015-04-05';\n\n  // allow full urls to allow arbitrary file downloads\n  let container = board.container;\n  let account = board.account;\n\n  if (new RegExp('^https?://').test(path)) {\n    const pathNohttp = path.replace('^https?://', '');\n    const subPath = pathNohttp.replace('^[^/]+/', '');\n\n    account = pathNohttp.replace('\\\\..*', '');\n    path = subPath.replace('^[^/]+/', '');\n    container = subPath.replace('/.*', '');\n  }\n\n  let contentLength = '';\n  let contentType = '';\n\n  if (file) {\n    contentLength = fileSystem.fileSize(file);\n    // TODO\n    // contentType = mime::guess_type(file)\n  }\n\n  const content = [\n    verb,\n    '\\n',\n    contentLength,\n    '',\n    contentType,\n    '\\n\\n\\n\\n\\n',\n    'x-ms-blob-type:BlockBlob',\n    `x-ms-date:${date}`,\n    `x-ms-version:${azureVersion}`,\n    `/${account}/${container}/${path}`,\n  ].join('\\n');\n\n  const sign = callbacks.get('btoa')(\n    signature.md5(content, callbacks.get('btoa')(board.key))\n  );\n  const headers = {\n    'x-ms-date': date,\n    'x-ms-version': azureVersion,\n    'x-ms-blob-type': 'BlockBlob',\n    Authorization: `SharedKey ${account}:${signature}`,\n  };\n\n  return headers;\n};\n\nexport const boardInitializeAzure = async (board, args) => {\n  const { container, account, key, cache, ...params } = args;\n\n  if (!container)\n    throw new Error(\"The 'azure' board requires a 'container' parameter.\");\n  if (!account)\n    throw new Error(\"The 'azure' board requires an 'account' parameter.\");\n  if (!key) throw new Error(\"The 'azure' board requires a 'key' parameter.\");\n\n  const azureUrl = `https://${account}.blob.core.windows.net/${container}`;\n  const obj = Object.assign({}, params, {\n    name: board.name,\n    url: azureUrl,\n    cache,\n    headers: azureHeaders,\n    needsIndex: false,\n    container,\n    account,\n    key,\n    connect: false,\n    browseUrl: 'https://portal.azure.com',\n  });\n\n  await boardInitializeDatatxt(board, obj);\n\n  return boardGet(board.name);\n};\n","import * as fileSystem from './host/file-system';\n\nexport const pinLoadFiles = function (path, { ...args }) {\n  var files = fileSystem.dir.list(path, { recursive: true, fullNames: true });\n\n  var result = files.filter((e) => !/data\\.txt$/g.test(e));\n\n  return result;\n};\n\nexport const pinPreviewFiles = function (x, { board = null, ...args }) {\n  dataFrame(x, { files: 'character' });\n};\n","// This will parse a delimited string into an array of\n// arrays. The default delimiter is the comma, but this\n// can be overriden in the second argument.\nexport function readCsv(strData, strDelimiter) {\n  // Check to see if the delimiter is defined. If not,\n  // then default to comma.\n  strDelimiter = strDelimiter || ',';\n\n  // Create a regular expression to parse the CSV values.\n  var objPattern = new RegExp(\n    // Delimiters.\n    '(\\\\' +\n      strDelimiter +\n      '|\\\\r?\\\\n|\\\\r|^)' +\n      // Quoted fields.\n      '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' +\n      // Standard fields.\n      '([^\"\\\\' +\n      strDelimiter +\n      '\\\\r\\\\n]*))',\n    'gi'\n  );\n\n  // Create an array to hold our data. Give the array\n  // a default empty first row.\n  var arrData = [[]];\n\n  // Create an array to hold our individual pattern\n  // matching groups.\n  var arrMatches = null;\n\n  // Keep looping over the regular expression matches\n  // until we can no longer find a match.\n  while ((arrMatches = objPattern.exec(strData))) {\n    // Get the delimiter that was found.\n    var strMatchedDelimiter = arrMatches[1];\n\n    // Check to see if the given delimiter has a length\n    // (is not the start of string) and if it matches\n    // field delimiter. If id does not, then we know\n    // that this delimiter is a row delimiter.\n    if (strMatchedDelimiter.length && strMatchedDelimiter != strDelimiter) {\n      // Since we have reached a new row of data,\n      // add an empty row to our data array.\n      arrData.push([]);\n    }\n\n    // Now that we have our delimiter out of the way,\n    // let's check to see which kind of value we\n    // captured (quoted or unquoted).\n    if (arrMatches[2]) {\n      // We found a quoted value. When we capture\n      // this value, unescape any double quotes.\n      var strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"');\n    } else {\n      // We found a non-quoted value.\n      var strMatchedValue = arrMatches[3];\n    }\n\n    // Now that we have our value string, let's add\n    // it to the data array.\n    arrData[arrData.length - 1].push(strMatchedValue);\n  }\n\n  // Return the parsed data.\n  return arrData;\n}\n","import * as fileSystem from './host/file-system';\nimport { pinLog } from './log';\n\nexport const pinsShowProgress = (opts = { size: 0 }) => {\n  var { size } = opts;\n  if (typeof size === 'string') size = parseInt(size);\n\n  var largeFile = getOption('pins.progress.size', 10 ^ 7);\n  identical(getOption('pins.progress', size > largeFile), true) &&\n    interactive();\n};\n\nexport const pinsSaveCsv = (x, name) => {\n  if (x.length > 0) {\n    const columns = Object.keys(x[0]).join(',');\n    fileSystem.writeLines(name, columns);\n  }\n\n  const rows = x.map((row) => {\n    return Object.keys(row)\n      .map((key) => row[key])\n      .join(',');\n  });\n\n  fileSystem.writeLines(name, rows);\n};\n\nexport const pinsSafeCsv = (x, name) => {\n  try {\n    return pinsSaveCsv(x, name);\n  } catch (e) {\n    pinLog('Failed to save data frame as CSV file: ' + e);\n  }\n};\n","import * as checks from './utils/checks';\nimport { pinDefaultName } from './utils/pin-utils';\nimport { readCsv } from './utils/csv';\nimport * as fileSystem from './host/file-system';\nimport { onExit } from './utils/onexit';\nimport { pinsSafeCsv } from './utils';\nimport { dfColNames } from './utils/dataframe';\nimport { boardPinStore } from './pin-extensions';\n\nexport const pinDataFrame = (\n  x,\n  opts = { name: null, description: null, board: null }\n) => {\n  var { name, description, board, ...args } = opts;\n  if (checks.isNull(name)) name = pinDefaultName(x, board);\n\n  var path = fileSystem.tempfile();\n  fileSystem.dir.create(path);\n\n  fileSystem.write(JSON.stringify(x), fileSystem.path(path, 'data.json'));\n\n  pinsSafeCsv(x, fileSystem.path(path, 'data.csv'));\n\n  return onExit(\n    () => unlink(path),\n    () => {\n      const columns = dfColNames(x);\n      const metadata = {\n        rows: x.length,\n        cols: columns.length,\n        columns: columns,\n      };\n\n      return boardPinStore(\n        board,\n        Object.assign(\n          {},\n          {\n            name,\n            description,\n            path: path,\n            type: 'table',\n            metadata: [],\n          },\n          ...args\n        )\n      );\n    }\n  );\n};\n\nexport const pinLoadTable = (path, ...args) => {\n  var json = fileSystem.path(path, 'data.json');\n  var csv = fileSystem.path(path, 'data.csv');\n  var result = null;\n\n  if (fileSystem.fileExists(json)) {\n    result = JSON.parse(fileSystem.readLines(json).join('\\n\\r'));\n  } else if (fileSystem.fileExists(csv)) {\n    result = readCsv(\n      fileSystem\n        .readLines(csv)\n        .filter((l) => l)\n        .join('\\n')\n    );\n  } else {\n    throw new Error(\"A 'table' pin requires CSV or JSON files.\");\n  }\n\n  return result;\n};\n\nexport const pinFetchTable = (path, ...args) => {\n  rds_match = grepl('.*.rds', path);\n  fetch_all = identical(getOption('pins.fetch', 'auto'), 'all');\n  if (any(rds_match) && !fetch_all) return path[rds_match];\n  else return path;\n};\n\nexport const pinPreviewDataFrame = (x, opts = { board: null }) => {\n  const { board, ...args } = opts;\n  utils.head(x, (n = getOption('pins.preview', 10 ^ 3)));\n};\n","export * from './board';\nexport * from './pin';\n\nimport callbacks from './host/callbacks';\nexport { callbacks };\n\nimport * as pinDefault from './pin-default';\nimport * as inheritance from './utils/inheritance';\n\nimport * as boardExtensions from './board-extensions';\nimport * as boardLocal from './board-local';\nimport * as boardDatatxt from './board-datatxt';\nimport * as boardS3 from './board-s3';\nimport * as boardAzure from './board-azure';\n\nexport * from './board-s3';\nexport * from './board-azure';\n\nimport { pinString } from './pin-file';\nimport { pinLoadFiles } from './pin-files';\nimport { pinDataFrame, pinLoadTable } from './pin-dataframe';\n\ninheritance.registerMethod('pin', 'default', pinDefault.pinDefault);\ninheritance.registerMethod('pin', 'string', pinString);\ninheritance.registerMethod('pin', 'dataframe', pinDataFrame);\n\ninheritance.registerMethod('pinPreview', 'default', pinDefault.pinPreviewDefault);\ninheritance.registerMethod('pinLoad', 'default', pinDefault.pinLoadDefault);\ninheritance.registerMethod('pinFetch', 'default', pinDefault.pinFetchDefault);\n\ninheritance.registerMethod('pinLoad', 'files', pinLoadFiles);\ninheritance.registerMethod('pinLoad', 'table', pinLoadTable);\n\ninheritance.registerMethod('boardBrowse', 'default', boardExtensions.boardBrowseDefault);\ninheritance.registerMethod('boardPinVersions', 'default', boardExtensions.boardPinVersionsDefault);\ninheritance.registerMethod('boardInitialize', 'default', boardExtensions.boardInitializeDefault);\n\ninheritance.registerMethod('boardInitialize', 'local', boardLocal.boardInitializeLocal);\ninheritance.registerMethod('boardPinCreate', 'local', boardLocal.boardPinCreateLocal);\ninheritance.registerMethod('boardPinFind', 'local', boardLocal.boardPinFindLocal);\ninheritance.registerMethod('boardPinGet', 'local', boardLocal.boardPinGetLocal);\ninheritance.registerMethod('boardPinRemove', 'local', boardLocal.boardPinRemoveLocal);\ninheritance.registerMethod('boardPinVersions', 'local', boardLocal.boardPinVersionsLocal);\n\ninheritance.registerMethod('boardInitialize', 'datatxt', boardDatatxt.boardInitializeDatatxt);\ninheritance.registerMethod('boardPinGet', 'datatxt', boardDatatxt.boardPinGetDatatxt);\ninheritance.registerMethod('boardPinFind', 'datatxt', boardDatatxt.boardPinFindDatatxt);\n\ninheritance.registerMethod('boardInitialize', 's3', boardS3.boardInitializeS3);\ninheritance.registerMethod('boardInitialize', 'azure', boardAzure.boardInitializeAzure);\n"],"names":["const","callbacks.get","checks.isNull","get","set","options.getOption","appdirs.userCacheDir","arrays.getOnly","arrays.ensure","path","fileSystem.path","fileSystem.dir","fileSystem.normalizePath","YAMLException","arguments","type","Type","Schema","require$$0","require$$1","require$$2","isNull","require$$3","require$$4","require","__","_toString","_hasOwnProperty","require$$5","require$$6","_require","i","DEFAULT_FULL_SCHEMA","Mark","DEFAULT_SAFE_SCHEMA","State","require$$7","yaml","fileSystem.basename","fileSystem.fileExists","let","fileSystem.readLines","fileSystem.writeLines","errors.tryCatchNull","lockFile","fileSystem.lockFile","fileSystem.unlockFile","fileSystem.absolutePath","list.removeNulls","pinVersionSignature","signature.md5","fileSystem.copy","versions.boardVersionsCreate","registry.pinStoragePath","registry.pinRegistryUpdate","registry.pinRegistryRelative","registry.pinRegistryFind","registry.pinRegistryAbsolute","registry.pinRegistryRetrievePath","versions.boardVersionsExpand","registry.pinRegistryRemove","versions.boardVersionsGet","ui.uiViewerRegister","ui.uiViewerClose","arrays.concat","boardRegistry.list","arrays.unique","boardRegistry.get","boardRegistry.set","boardRegistry.remove","arrays.maybeOne","pinFetch","list.namesArr","arrays.vectorize","fileSystem.tempfile","arrays.all","fileSystem.dirname","fileSystem.fileSize","fileSystem.createLink","fileSystem.write","fileSystem.read","fetch","fileSystem.tools","requests.fetch","tempfile","pinDownload","inheritance.registerMethod","pinDefault.pinDefault","pinDefault.pinPreviewDefault","pinDefault.pinLoadDefault","pinDefault.pinFetchDefault","boardExtensions.boardBrowseDefault","boardExtensions.boardPinVersionsDefault","boardExtensions.boardInitializeDefault","boardLocal.boardInitializeLocal","boardLocal.boardPinCreateLocal","boardLocal.boardPinFindLocal","boardLocal.boardPinGetLocal","boardLocal.boardPinRemoveLocal","boardLocal.boardPinVersionsLocal","boardDatatxt.boardInitializeDatatxt","boardDatatxt.boardPinGetDatatxt","boardDatatxt.boardPinFindDatatxt","boardS3.boardInitializeS3","boardAzure.boardInitializeAzure"],"mappings":"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"}