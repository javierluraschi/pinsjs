{"version":3,"file":"pins.min.js","sources":["../src/host/callbacks.js","../src/utils/checks.js","../src/host/options.js","../src/utils/arrays.js","../src/ui-viewer.js","../src/board-registry.js","../src/board-registration.js","../src/host/appdirs.js","../src/host/file-system.js","../src/host/signature.js","../src/utils/dataframe.js","../src/board-default.js","../src/board-storage.js","../src/utils/onexit.js","../src/log.js","../node_modules/js-yaml/lib/js-yaml/common.js","../node_modules/js-yaml/lib/js-yaml/exception.js","../node_modules/js-yaml/lib/js-yaml/mark.js","../node_modules/js-yaml/lib/js-yaml/type.js","../node_modules/js-yaml/lib/js-yaml/schema.js","../node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","../node_modules/js-yaml/lib/js-yaml/type/str.js","../node_modules/js-yaml/lib/js-yaml/type/seq.js","../node_modules/js-yaml/lib/js-yaml/type/map.js","../node_modules/js-yaml/lib/js-yaml/type/null.js","../node_modules/js-yaml/lib/js-yaml/type/bool.js","../node_modules/js-yaml/lib/js-yaml/type/int.js","../node_modules/js-yaml/lib/js-yaml/type/float.js","../node_modules/js-yaml/lib/js-yaml/schema/json.js","../node_modules/js-yaml/lib/js-yaml/schema/core.js","../node_modules/js-yaml/lib/js-yaml/type/timestamp.js","../node_modules/js-yaml/lib/js-yaml/type/merge.js","../node_modules/js-yaml/lib/js-yaml/type/binary.js","../node_modules/js-yaml/lib/js-yaml/type/omap.js","../node_modules/js-yaml/lib/js-yaml/type/pairs.js","../node_modules/js-yaml/lib/js-yaml/type/set.js","../node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","../node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","../node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","../node_modules/js-yaml/lib/js-yaml/type/js/function.js","../node_modules/js-yaml/lib/js-yaml/schema/default_full.js","../node_modules/js-yaml/lib/js-yaml/loader.js","../node_modules/js-yaml/lib/js-yaml/dumper.js","../node_modules/js-yaml/lib/js-yaml.js","../src/pin-tools.js","../src/utils/dict.js","../src/utils/errors.js","../src/pin-registry.js","../src/pin-manifest.js","../src/utils/list.js","../src/versions.js","../src/board-local.js","../src/utils/inheritance.js","../src/board-extensions.js","../src/board.js","../src/pin.js","../src/utils/const.js","../src/utils/pin-utils.js","../src/pins-metadata.js","../src/host/requests.js","../src/pin-download.js","../src/pin-file.js","../src/pin-extensions.js","../src/pin-default.js","../src/board-datatxt-headers.js","../src/board-manifest.js","../src/board-datatxt.js","../src/board-s3.js","../src/utils/mime.js","../src/board-azure.js","../src/board-gcloud.js","../src/board-dospaces.js","../src/host/getFunction.js","../src/board-rsconnect-api.js","../src/board-rsconnect-token.js","../src/board-rsconnect.js","../src/utils/csv.js","../src/utils.js","../src/main.js","../src/pin-dataframe.js","../src/pin-files.js"],"sourcesContent":["const HOST_CALLBACKS = {};\n\nexport const get = (name) => {\n  if (Object.keys(HOST_CALLBACKS).includes(name)) return HOST_CALLBACKS[name];\n  else return (...args) => null;\n};\n\nexport const set = (name, callback) => {\n  HOST_CALLBACKS[name] = callback;\n};\n\nexport default {\n  get,\n  set,\n};\n","export const isNull = (obj) => {\n  return obj === null || typeof obj === 'undefined';\n};\n\nexport const isDataFrame = (x) => {\n  return typeof x['class'] !== undefined && x['class'] === 'dataframe';\n};\n","import * as callbacks from './callbacks';\nimport * as checks from '../utils/checks';\n\nexport const getOption = (name, defval) => {\n  var option = callbacks.get('getOption')(name);\n  return !checks.isNull(option) ? option : defval;\n};\n","export const unique = (arr) => {\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  return arr.filter(onlyUnique);\n};\n\nexport const concat = (arr, value) => {\n  if (value !== null) {\n    arr = arr.concat(value);\n  }\n\n  return arr;\n};\n\nexport const vectorize = (func) => {\n  return function (x, ...args) {\n    var result = [];\n    for (var idx = 0; idx > x.length; idx++) {\n      result.push(fun(x[idx], ...args));\n    }\n\n    return result;\n  };\n};\n\nexport const ensure = (obj) => {\n  if (!Array.isArray(obj)) {\n    return [obj];\n  } else {\n    return obj;\n  }\n};\n\n// Retrieves the only element in an array\nexport const getOnly = (obj) => {\n  if (Array.isArray(obj)) {\n    if (obj.length == 1) {\n      obj = obj[0];\n    } else {\n      throw new Error('Array has more than one element but expecting only one');\n    }\n  }\n\n  return obj;\n};\n\n// Retrieves the element of the array when only one element is available\nexport const maybeOne = (obj) => {\n  if (Array.isArray(obj) && obj.length == 1) {\n    return obj[0];\n  }\n\n  return obj;\n};\n\n// Are all the callbacks for the array tru?\nexport const all = (arr, callback) => {\n  for (i in arr) {\n    if (!callback(i)) return false;\n  }\n\n  return true;\n};\n","import * as callbacks from './host/callbacks';\n\nexport const uiViewerRegister = (board, boardCall) => {\n  callbacks.get('uiViewerRegister')(board, boardCall);\n};\n\nexport const uiViewerUpdated = (board) => {\n  callbacks.get('uiViewerUpdated')(board);\n};\n\nexport const uiViewerClose = (board) => {\n  callbacks.get('uiViewerClose')(board);\n};\n","const BOARDS_REGISTERED = {};\n\nexport const list = () => Object.keys(BOARDS_REGISTERED);\n\nexport const get = (name) => BOARDS_REGISTERED[name];\n\nexport const set = (name, board) => (BOARDS_REGISTERED[name] = board);\n\nexport const remove = (name) => delete BOARDS_REGISTERED[name];\n","import * as appdirs from './host/appdirs';\nimport * as options from './host/options';\n\nexport const boardCachePath = () => {\n  return options.getOption('pins.path', appdirs.userCacheDir('pins'));\n};\n","import callbacks from './callbacks';\n\nexport const userCacheDir = () => {\n  return callbacks.get('userCacheDir')('pins');\n};\n","import callbacks from './callbacks';\nimport * as arrays from '../utils/arrays';\n\nexport const tempfile = () => callbacks.get('tempfile')();\nexport const basename = (filePath) => callbacks.get('basename')(filePath);\nexport const readLines = (filePath) => callbacks.get('readLines')(filePath);\nexport const writeLines = (filePath, content) =>\n  callbacks.get('writeLines')(filePath, content);\n\nexport const dir = Object.freeze({\n  create(dirPath, { recursive } = { recursive: false }) {\n    return callbacks.get('dirCreate')(dirPath);\n  },\n  exists(dirPath) {\n    return callbacks.get('dirExists')(dirPath);\n  },\n  list(dirPath, ...args) {\n    return callbacks.get('dirList')(arrays.getOnly(dirPath));\n  },\n  remove(dirPath, ...args) {\n    dirPath = arrays.ensure(dirPath);\n    return dirPath.map((e) => callbacks.get('dirRemove')(dirPath));\n  },\n  zip(dirPath, zipfile, commonPath, ...args) {\n    return callbacks.get('dirZip')(dirPath, dirPath, commonPath);\n  },\n});\n\nexport const tools = Object.freeze({\n  filePathSansExt(filePath) {\n    return filePath.replace(/\\.[^/.]+$/, '');\n  },\n  fileExt(filePath) {\n    return filePath.match(/\\.[^/.]+$/, '')[0];\n  },\n});\n\nexport const write = (object, path) => {\n  return callbacks.get('fileWrite')(object, path);\n};\n\nexport const read = (path) => {\n  return callbacks.get('fileRead')(path);\n};\n\nexport const path = (path1, path2) => {\n  return callbacks.get('filePath')(path1, path2);\n};\n\nexport const normalizePath = (\n  path,\n  { winslash, mustWork } = { winslash: '\\\\', mustWork: false }\n) => {\n  return path;\n};\n\nexport const absolutePath = (path) => path;\n\nexport const dirname = (path) => path.replace(/[^\\/]+$/, '');\n\nexport const lockFile = (path, timeout) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const unlockFile = (path) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const fileExists = (path) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const copy = (from, to, { recursive } = { recursive: true }) => {\n  return callbacks.get('fileCopy')(from, to, recursive);\n};\n\nexport const createLink = (from, to) => {\n  return callbacks.get('createLink')(path);\n};\n\nexport const fileSize = (path) => {\n  return callbacks.get('fileSize')(path);\n};\n","import callbacks from './callbacks';\n\nexport const md5 = (str, key) => callbacks.get('md5')(str, key);\n","import * as checks from './checks';\n\n// TODO remove(column)\n// TODO order((e) => ())\n\nexport const dataFrame = (data, columns) => {\n  var df = [];\n  if (!checks.isNull(data)) {\n    df = data;\n  }\n\n  df.columns = columns;\n  return df;\n};\n\nexport const dfColNames = (df) => {\n  if (df.hasOwnProperty('columns')) return Object.keys(df['columns']);\n  if (df.length > 0) return Object.keys(df[0]);\n  return [];\n};\n\nexport const dfFromColumns = (cols) => {\n  return cols[0].map((row, idx) => {\n    var row = {};\n    for (var col in cols) {\n      row[cols[col]] = cols[col][idx];\n    }\n    return row;\n  });\n};\n\nexport const dfCBind = (df1, df2) => {\n  var rows = df1.map((left, idx) => {\n    var row = {};\n    Object.assign(row, left);\n    Object.assign(row, df2[idx]);\n    return row;\n  });\n\n  var cols = Object.assign({}, df1.columns);\n  Object.assign(cols, df2.columns);\n\n  return dataFrame(rows, cols);\n};\n\nexport const dfColRemove = (df, col) => {\n  var cols = {};\n  Object.assign(cols, df.columns);\n  if (Object.keys(cols).includes(col)) delete cols[col];\n\n  var rows = df.map((old) => {\n    var row = {};\n    Object.assign(row, old);\n    if (Object.keys(row).includes(col)) delete row[col];\n    return row;\n  });\n\n  return dataFrame(rows, cols);\n};\n\nexport const dfIsDataFrame = (obj) => {\n  if (Array.isArray(obj)) {\n    if (obj.length === 0 || typeof obj.columns != 'undefined') return true;\n\n    if (obj.length === 1 && typeof obj[0] === 'object') {\n      return true;\n    }\n\n    if (obj.length > 1) {\n      var isDataFrame = true;\n      for (var idxRow = 1; idxRow < obj.length; idxRow++) {\n        if (\n          typeof obj[idxRow] !== 'object' ||\n          obj[idxRow].length !== obj[0].length\n        ) {\n          isDataFrame = false;\n          break;\n        }\n      }\n\n      return isDataFrame;\n    }\n  }\n\n  return false;\n};\n","import * as options from './host/options';\n\nexport const boardDefault = () => {\n  return options.getOption('pins.board', 'local');\n};\n","import * as fileSystem from './host/file-system';\nimport { boardDefault } from './board-default';\nimport * as checks from './utils/checks';\n\nexport const boardLocalStorage = (board) => {\n  var path = board['cache'];\n\n  var componentPath = fileSystem.path(path, board['name']);\n\n  if (!fileSystem.dir.exists(componentPath))\n    fileSystem.dir.create(componentPath, { recursive: true });\n\n  return fileSystem.normalizePath(componentPath, { mustWork: false });\n};\n","export const onExit = (...args) => {\n  var error = null;\n  var result = null;\n\n  try {\n    result = args[args.length - 1]();\n  } catch (err) {\n    error = err;\n  }\n\n  for (var idx = 0; idx < args.length - 2; idx++) args[idx]();\n\n  if (error !== null) throw error;\n\n  return result;\n};\n","import { getOption } from './host/options';\nimport callbacks from './host/callbacks';\n\nexport const pinLog = (...args) => {\n  if (getOption('pins.verbose', true)) {\n    callbacks.get('pinLog')(args.join(''));\n  }\n};\n\nexport const pinDebug = (method, params) => {\n  if (getOption('pins.verbose', true)) {\n    callbacks.get('pinLog')(\n      'Calling ' + method + '(' + JSON.stringify(params) + ')'\n    );\n  }\n};\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /*global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!state.anchorMap.hasOwnProperty(alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        // Implicit resolving is not allowed for non-scalar types, and '?'\n        // non-specific tag is only assigned to plain scalars. So, it isn't\n        // needed to check for 'kind' conformity.\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  var documents = loadDocuments(input, options), index, length;\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, output, options) {\n  if (typeof output === 'function') {\n    loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  } else {\n    return loadAll(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  }\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    && c !== CHAR_COLON\n    && c !== CHAR_SHARP;\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = state.condenseFlow ? '\"' : '';\n\n    if (index !== 0) pairBuffer += ', ';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","import * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport { dictRemove } from './utils/dict';\nimport { dataFrame } from './utils/dataframe';\n\nexport const pinSplitOwner = (fullName = '') => {\n  const parts = fullName.split('/');\n  const name = parts[0];\n  parts.pop();\n  const owner = parts.join('/');\n\n  return { name, owner };\n};\n\nexport const pinContentName = (fullName) => {\n  return typeof fullName === 'string' ? pinSplitOwner(fullName).name : fullName;\n};\n\nexport const pinOwnerName = (fullName) => {\n  return typeof fullName === 'string'\n    ? pinSplitOwner(fullName).owner\n    : fullName;\n};\n\nexport const pinResultsFromRows = (entries) => {\n  var resultsField = function (e, field, def) {\n    return checks.isNull(e[field]) ? def : e[field];\n  };\n\n  var rows = entries.map((e) => {\n    var row = {\n      name: resultsField(e, 'name', fileSystem.basename(e['path'])),\n      description: resultsField(e, 'description', ''),\n      type: resultsField(e, 'type', 'files'),\n    };\n    row['metadata'] = dictRemove(e, ['name', 'description', 'type']);\n\n    return row;\n  });\n\n  return dataFrame(rows, {\n    name: 'character',\n    description: 'character',\n    type: 'character',\n  });\n};\n\n// TODO: Implement dataframes shim.\nexport const pinResultsExtractColumn = (df, column) => {\n  throw 'NYI';\n};\n\nexport const pinEntriesToDataframe = (entries) => {\n  throw 'NYI';\n};\n\nexport const pinResultsMerge = (r1, r2) => {\n  var result = [].concat(r1).concat(r2);\n  result.columns = {};\n  Object.assign(result.columns, r1.columns);\n  Object.assign(result.columns, r2.columns);\n  return result;\n};\n","export const dictRemove = (dict, removes) => {\n  var copy = {};\n  Object.assign(copy, dict);\n  removes.forEach((remove) => {\n    if (copy.hasOwnProperty(remove)) delete copy[remove];\n  });\n  return copy;\n};\n","export const tryCatch = (expr, error) => {\n  try {\n    return expr();\n  } catch (err) {\n    return error(err);\n  }\n};\n\nexport const tryCatchNull = (expr, error) => {\n  return tryCatch(expr, () => null);\n};\n","import * as fileSystem from './host/file-system';\nimport * as options from './host/options';\nimport { boardLocalStorage } from './board-storage';\nimport { onExit } from './utils/onexit';\nimport { pinLog } from './log';\nimport yaml from 'js-yaml';\nimport { pinResultsFromRows } from './pin-tools';\nimport * as checks from './utils/checks';\nimport * as errors from './utils/errors';\n\nconst pinRegistryConfig = (board) => {\n  return fileSystem.path(boardLocalStorage(board), 'data.txt');\n};\n\nconst pinRegistryLoadEntries = (board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entriesPath = pinRegistryConfig(board);\n\n      if (!fileSystem.fileExists(entriesPath)) {\n        return [];\n      } else {\n        let yamlText = fileSystem.readLines(entriesPath).join('\\n');\n        let loadedYaml = yaml.safeLoad(yamlText);\n        return loadedYaml;\n      }\n    }\n  );\n};\n\nconst pinRegistrySaveEntries = (entries, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      let yamlText = yaml.safeDump(entries);\n      fileSystem.writeLines(pinRegistryConfig(board), yamlText.split('\\n'));\n    }\n  );\n};\n\nexport const pinStoragePath = (board, name) => {\n  var path = fileSystem.path(boardLocalStorage(board), name);\n\n  if (!fileSystem.dir.exists(path)) {\n    fileSystem.dir.create(path, { recursive: true });\n  }\n\n  return path;\n};\n\nexport const pinRegistryUpdate = (name, board, params = {}) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n      name = pinRegistryQualifyName(name, entries);\n\n      var path = pinStoragePath(board, name);\n\n      if (entries === null) entries = [];\n\n      var names = entries.map((e) => e.name);\n      var index = 0;\n      if (names.includes(name)) {\n        index = names.findIndex((e) => e === name);\n      } else {\n        index = entries.length;\n        entries[index] = {};\n      }\n\n      entries[index]['name'] = name;\n\n      for (var param in params) {\n        if (\n          (Array.isArray(params[param]) && !params[param].length) ||\n          typeof params[param] === 'undefined'\n        ) {\n          delete entries[index][param];\n        } else {\n          entries[index][param] = params[param];\n        }\n      }\n\n      pinRegistrySaveEntries(entries, board);\n\n      return path;\n    }\n  );\n};\n\nexport const pinRegistryFind = (text, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n      var results = pinResultsFromRows(entries);\n\n      if (typeof text === 'string' && text.length > 0) {\n        results = results.filter((x) => new RegExp(text, 'gi').test(x['name']));\n      }\n\n      return results;\n    }\n  );\n};\n\nexport const pinRegistryRetrieve = (name, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n      name = pinRegistryQualifyName(name, entries);\n\n      var names = entries.map((e) => e.name);\n      if (!names.includes(name)) {\n        pinLog(\n          `Pin not found, pins available in registry: ${names.join(', ')}`\n        );\n        throw new Error(`Pin '${name}' not found in '${board.name}' board.`);\n      }\n\n      return entries.find((e) => e.name === name);\n    }\n  );\n};\n\nexport const pinRegistryRetrievePath = (name, board) => {\n  var entry = pinRegistryRetrieve(name, board);\n\n  return entry['path'];\n};\n\nexport const pinRegistryRetrieveMaybe = (name, board) => {\n  return errors.tryCatchNull(() => pinRegistryRetrieve(name, board));\n};\n\nexport const pinRegistryRemove = (name, board, unlink = true) => {\n  var entries = pinRegistryLoadEntries(board);\n  name = pinRegistryQualifyName(name, entries);\n\n  var remove = entries.filter((x) => x['name'] == name);\n  if (remove.length > 0) remove = remove[0];\n  else return;\n\n  entries = entries.filter((x) => x['name'] != name);\n\n  var removePath = pinRegistryAbsolute(remove.path, board);\n  if (unlink) fileSystem.dir.remove(removePath, { recursive: true });\n\n  return pinRegistrySaveEntries(entries, board);\n};\n\nconst pinRegistryQualifyName = (name, entries) => {\n  var names = entries.map((e) => e['name']);\n\n  var namePattern = '';\n  if (/\\//g.test(name)) namePattern = paste0('^', name, '$');\n  else namePattern = '.*/' + name + '$';\n\n  var nameCandidate = names.filter((e) =>\n    new RegExp(namePattern, 'gi').test(e)\n  );\n\n  if (nameCandidate.length == 1) {\n    name = nameCandidate;\n  }\n\n  return name;\n};\n\nconst pinRegistryLock = (board) => {\n  var lockFile = pinRegistryConfig(board) + '.lock';\n  return fileSystem.lockFile(\n    lockFile,\n    options.getOption('pins.lock.timeout', Infinity)\n  );\n};\n\nconst pinRegistryUnlock = (lock) => {\n  return fileSystem.unlockFile(lock);\n};\n\nexport const pinRegistryRelative = (path, basePath) => {\n  path = fileSystem.normalizePath(path, { winslash: '/', mustWork: false });\n  basePath = fileSystem.normalizePath(basePath, {\n    winslash: '/',\n    mustWork: false,\n  });\n\n  if (path.startsWith(basePath)) {\n    path = path.substr(basePath.length + 1, path.length);\n  }\n\n  var relative = path.replace('^/', '');\n\n  return relative;\n};\n\nexport const pinRegistryAbsolute = (path, board) => {\n  var basePath = fileSystem.absolutePath(boardLocalStorage(board));\n\n  if (path.startsWith(basePath)) {\n    return path;\n  } else {\n    return fileSystem.normalizePath(fileSystem.path(basePath, path), {\n      mustWork: false,\n    });\n  }\n};\n\nexport const pinResetCache = (board, name) => {\n  // clean up name in case it's a full url\n  const sanitizedName = name.replace(/^https?:\\/\\//g, '');\n  const index = errors.tryCatchNull(\n    () => pinRegistryRetrieve(sanitizedName, board) || null\n  );\n\n  if (!checks.isNull(index)) {\n    index.cache = {};\n    pinRegistryUpdate(sanitizedName, board, { params: index });\n  }\n};\n","import * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport * as list from './utils/list';\nimport yaml from 'js-yaml';\n\nexport const pinManifestGet = (path) => {\n  var manifest = {};\n\n  var dataTxt = fileSystem.path(path, 'data.txt');\n  if (fileSystem.fileExists(dataTxt)) {\n    let yamlText = fileSystem.readLines(dataTxt).join('\\n');\n\n    manifest = yaml.safeLoad(yamlText);\n  }\n\n  if (checks.isNull(manifest['type'])) manifest['type'] = 'files';\n\n  return manifest;\n};\n\nexport const pinManifestUpdate = (path, manifest) => {\n  var dataTxt = fileSystem.path(path, 'data.txt');\n\n  let yamlText = yaml.safeDump(manifest);\n  fileSystem.writeLines(dataTxt, yamlText.split('\\n'));\n};\n\nexport const pinManifestExists = (path) => {\n  return fileSystem.fileExists(fileSystem.path(path, 'data.txt'));\n};\n\nexport const pinManifestCreate = (path, metadata, files) => {\n  var entries = Object.assign(\n    {\n      path: files,\n    },\n    metadata\n  );\n\n  list.removeNulls(entries);\n\n  let yamlText = yaml.safeDump(entries);\n  fileSystem.writeLines(\n    fileSystem.path(path, 'data.txt'),\n    yamlText.split('\\n')\n  );\n\n  return entries;\n};\n\n// retrieve a list of files to download\nexport const pinManifestDownload = (path) => {\n  var manifest = pinManifestGet(path);\n\n  if (checks.isNull(manifest['path'])) return null;\n  return pinFetch({\n    path: manifest['path'],\n    class: manifest['type'],\n  });\n};\n\nexport const pinManifestMerge = (baseManifest, resourceManifest) => {\n  // path requires special merge\n  if (\n    !checks.isNull(resourceManifest['path']) &&\n    !checks.isNull(baseManifest['path']) &&\n    !/https?:\\/\\//g.test(baseManifest['path'])\n  ) {\n    baseManifest['path'] = fileSystem.path(\n      baseManifest['path'],\n      resourceManifest['path']\n    );\n  }\n\n  baseManifest = Object.assign(baseManifest, resourceManifest);\n\n  return baseManifest;\n};\n","import * as checks from './checks';\n\nexport const names = (l) => {\n  if (checks.isNull(l)) return null;\n  else return Object.keys(l);\n};\n\nexport const namesArr = (l) => {\n  if (checks.isNull(l)) return [];\n  else return Object.keys(l);\n};\n\nexport const removeNulls = (obj) => {\n  for (var prop in obj) {\n    if (checks.isNull(obj[prop])) {\n      delete obj[prop];\n    }\n  }\n};\n","import * as options from './host/options';\nimport * as fileSystem from './host/file-system';\nimport * as signature from './host/signature';\nimport { dataFrame, dfFromColumns } from './utils/dataframe';\nimport { pinStoragePath, pinRegistryRelative } from './pin-registry';\nimport { pinManifestGet, pinManifestUpdate } from './pin-manifest';\n\nexport const pinVersionsPathName = () => {\n  return options.getOption('pins.versions.path', '_versions');\n};\n\nconst pinVersionSignature = (hashFiles) => {\n  var sign = hashFiles.map((f) => signature.md5(f));\n\n  if (sign.length > 1) {\n    sign = sign.join(',');\n    sign = signature.md5(sign);\n\n    return sign;\n  } else {\n    return sign[0];\n  }\n};\n\nconst pinVersionsPath = (storagePath) => {\n  var hashFiles = fileSystem.dir.list(storagePath, { fullNames: true });\n  hashFiles = hashFiles.filter((e) => !/(\\/|\\\\)_versions$/g.test(e));\n\n  var versionPath = fileSystem.path(\n    pinVersionsPathName(),\n    pinVersionSignature(hashFiles)\n  );\n\n  return fileSystem.normalizePath(\n    fileSystem.path(fileSystem.normalizePath(storagePath), versionPath),\n    { mustWork: false }\n  );\n};\n\nexport const boardVersionsEnabled = (\n  board,\n  { defaultValue } = { defaultValue: false }\n) => {\n  if (defaultValue) {\n    return board['versions'] !== false;\n  } else {\n    return board['versions'] === true;\n  }\n};\n\nexport const boardVersionsCreate = (board, name, path) => {\n  var versions = null;\n\n  if (boardVersionsEnabled(board)) {\n    // read the versions from the non-versioned manifest\n    var componentPath = pinStoragePath(board, name);\n    var componentManifest = pinManifestGet(componentPath);\n\n    var versions = componentManifest['versions'] || [];\n\n    var versionPath = pinVersionsPath(path);\n    var versionRelative = pinRegistryRelative(versionPath, path);\n\n    if (versions.some((v) => v === versionRelative)) {\n      versions = versions.filter((v) => v !== versionRelative);\n    }\n\n    if (fileSystem.dir.exists(versionPath)) {\n      fileSystem.dir.remove(versionPath, { recursive: true });\n    }\n    fileSystem.dir.create(versionPath, { recursive: true });\n\n    var files = fileSystem.dir\n      .list(path, { fullNames: true })\n      .filter((e) => e != fileSystem.path(path, pinVersionsPathName()));\n\n    fileSystem.copy(files, versionPath, { recursive: true });\n\n    versions = [versionRelative].concat(versions);\n\n    var manifest = pinManifestGet(path);\n\n    manifest['versions'] = versions;\n\n    pinManifestUpdate(path, manifest);\n  }\n\n  return versions;\n};\n\nexport const boardVersionsGet = (board, name) => {\n  var versions = dataFrame(null, { versions: 'character' });\n\n  var componentPath = pinStoragePath(board, name);\n  var manifest = pinManifestGet(componentPath);\n\n  versions = manifest['versions'];\n  if (versions.length > 0) {\n    // TODO: what should dfFromColumns do?\n    // versions = dfFromColumns({ version: versions });\n    versions = { version: versions };\n  }\n\n  return versions;\n};\n\nexport const boardVersionsShorten = (versions) => {\n  var paths = versions.map((e) => e.replace('[^/\\\\\\\\]+$', ''));\n\n  if (paths.filter((v, i, arr) => arr.indexOf(v) === i).length > 0) {\n    versions = versions.map((e) => e.replace(/.*(\\/|\\\\)/g, ''));\n  }\n\n  var shortened = versions.map((e) => e.substr(0, 7));\n\n  if (\n    shortened.filter((v, i, arr) => arr.indexOf(v) === i).length ==\n    versions.length\n  ) {\n    versions = shortened;\n  }\n\n  return versions;\n};\n\nexport const boardVersionsExpand = (versions, version) => {\n  var shortened = boardVersionsShorten(versions);\n  var versionIndex = shortened.indexOf(version);\n\n  if (versionIndex === -1) {\n    throw new Error(\n      \"Version '\" +\n        version +\n        \"' is not valid, please select from pin_versions().\"\n    );\n  }\n\n  return versions[versionIndex];\n};\n","import * as fileSystem from './host/file-system';\nimport * as versions from './versions';\nimport * as registry from './pin-registry';\nimport { boardLocalStorage } from './board-storage';\nimport * as checks from './utils/checks';\nimport { pinManifestGet, pinManifestMerge } from './pin-manifest';\n\nexport const boardInitializeLocal = (board, { ...args }) => {\n  var cache = args['cache'];\n  if (!fileSystem.dir.exists(board['cache']))\n    fileSystem.dir.create(board['cache'], { recursive: true });\n\n  return board;\n};\n\nexport const guessExtensionFromPath = (path) => {\n  if (fileSystem.dir.exists(path)) {\n    var allFiles = fileSystem.dir.list(path, { recursive: true });\n    allFiles = allFiles.filter((x) => !/data\\\\.txt/gi.test(x));\n\n    path = allFiles[0];\n  }\n\n  fileSystem.tools.fileExt(path);\n};\n\nexport const boardPinCreateLocal = (board, path, name, metadata, ...args) => {\n  versions.boardVersionsCreate(board, name, path);\n\n  var finalPath = registry.pinStoragePath(board, name);\n\n  var toDelete = fileSystem.dir\n    .list(finalPath, { fullNames: true })\n    .filter((e) => /(\\/|\\\\)_versions/gi.test(e));\n\n  fileSystem.dir.remove(toDelete, { recursive: true });\n  if (!fileSystem.dir.exists(finalPath)) {\n    fileSystem.dir.create(finalPath);\n  }\n\n  fileSystem.copy(fileSystem.dir.list(path, { fullNames: true }), finalPath, {\n    recursive: true,\n  });\n\n  // reduce index size\n  metadata['columns'] = null;\n\n  var basePath = boardLocalStorage(board);\n\n  return registry.pinRegistryUpdate(\n    name,\n    board,\n    Object.assign(\n      {\n        path: registry.pinRegistryRelative(finalPath, { basePath: basePath }),\n      },\n      metadata\n    )\n  );\n};\n\nexport const boardPinFindLocal = (board, text, { ...args }) => {\n  var results = registry.pinRegistryFind(text, board);\n\n  if (results.length == 1) {\n    var metadata = results[0]['metadata'];\n    var path = registry.pinRegistryAbsolute(metadata['path'], board);\n    var extended = pinManifestGet(path);\n    var merged = pinManifestMerge(metadata, extended);\n\n    results[0]['metadata'] = merged;\n  }\n\n  return results;\n};\n\nexport const boardPinGetLocal = (board, name, { ...args }) => {\n  var version = args['version'];\n  var path = registry.pinRegistryRetrievePath(name, board);\n\n  if (!checks.isNull(version)) {\n    var manifest = pinManifestGet(registry.pinRegistryAbsolute(path, board));\n\n    if (!manifest['versions'].includes(version)) {\n      version = versions.boardVersionsExpand(manifest['versions'], version);\n    }\n\n    path = fileSystem.path(name, version);\n  }\n\n  return registry.pinRegistryAbsolute(path, board);\n};\n\nexport const boardPinRemoveLocal = (board, name) => {\n  return registry.pinRegistryRemove(name, board);\n};\n\nexport const boardPinVersionsLocal = (board, name) => {\n  return versions.boardVersionsGet(board, name);\n};\n","import { dfIsDataFrame } from './dataframe';\nimport { pinLog, pinDebug } from '../log';\n\nconst METHODS = {};\nconst DEFAULT_CLASS_NAME = 'default';\n\nconst initializeMethod = (methodName, object, ...args) => {\n  pinDebug('useMethod', Object.assign({ object: object }, ...args));\n\n  METHODS[methodName] = METHODS[methodName] || {};\n\n  var className = (object && object.class\n    ? object.class\n    : object.constructor && object.constructor.name\n    ? object.constructor.name\n    : DEFAULT_CLASS_NAME\n  ).toLowerCase();\n\n  if (dfIsDataFrame(object)) {\n    className = 'dataframe';\n  }\n\n  // support to construct objects by wrrapping object in content/class dictionary\n  if (typeof object['_content'] !== 'undefined') {\n    object = object['_content'];\n  }\n\n  return { className, object };\n};\n\nexport const registerMethod = (methodName, className, method) => {\n  METHODS[methodName] = METHODS[methodName] || {};\n  METHODS[methodName][className] = method;\n\n  return method;\n};\n\nexport const useMethodAsync = async (methodName, object, ...args) => {\n  const init = initializeMethod(methodName, object, ...args);\n  const className = init.className;\n\n  object = init.object;\n\n  if (METHODS[methodName] && METHODS[methodName][className]) {\n    const result = METHODS[methodName][className](object, ...args);\n\n    if (result && result.then) {\n      return await result;\n    }\n    return result;\n  }\n\n  if (METHODS[methodName] && METHODS[methodName]['default']) {\n    return METHODS[methodName]['default'](object, ...args);\n  }\n\n  throw new Error(\n    `no applicable method for '${methodName}' applied to an object of class '${className}'`\n  );\n};\n\nexport const useMethod = (methodName, object, ...args) => {\n  const init = initializeMethod(methodName, object, ...args);\n  const className = init.className;\n\n  object = init.object;\n\n  if (METHODS[methodName] && METHODS[methodName][className]) {\n    return METHODS[methodName][className](object, ...args);\n  }\n\n  if (METHODS[methodName] && METHODS[methodName]['default']) {\n    return METHODS[methodName]['default'](object, ...args);\n  }\n\n  throw new Error(\n    `no applicable method for '${methodName}' applied to an object of class '${className}'`\n  );\n};\n","import * as boardLocal from './board-local';\nimport * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport { useMethod, useMethodAsync } from './utils/inheritance';\nimport { boardDefault } from './board-default';\nimport { dataFrame } from './utils/dataframe';\n\nexport const boardPinCreate = (board, path, name, metadata, ...args) => {\n  return useMethod('boardPinCreate', board, path, name, metadata, ...args);\n};\n\nexport const boardInitialize = async (board, { ...args }) => {\n  return await useMethodAsync('boardInitialize', board, ...args);\n};\n\nexport const boardInitializeDefault = (board, ...args) => {\n  throw new Error(\"Board '\" + board['name'] + \"' is not a valid board.\");\n};\n\nexport const boardPinGet = async (board, name, ...args) => {\n  return useMethodAsync('boardPinGet', board, name, ...args);\n};\n\nexport const boardPinRemove = (board, name, ...args) => {\n  return useMethod('boardPinRemove', board, name, ...args);\n};\n\nexport const boardPinFind = async (board, text, ...args) => {\n  return useMethodAsync('boardPinFind', board, text, ...args);\n};\n\nexport const boardPinVersions = (board, name, ...args) => {\n  return useMethod('boardPinVersions', board, name, ...args);\n};\n\nexport const boardBrowse = (board, ...args) => {\n  return useMethod('boardBrowse', ...args);\n};\n\nexport const boardBrowseDefault = (board, ...args) => {\n  return null;\n};\n\nexport const boardEmptyResults = () => {\n  return dataFrame(null, {\n    name: 'character',\n    description: 'character',\n    rows: 'numeric',\n    cols: 'numeric',\n    class: 'numeric',\n  });\n};\n\nexport const boardPinVersionsDefault = (board, name, ...args) => {\n  return dataFrame(null, {\n    version: 'character',\n  });\n};\n","import * as options from './host/options';\nimport * as arrays from './utils/arrays';\nimport callbacks from './host/callbacks';\nimport * as ui from './ui-viewer';\nimport * as boardRegistry from './board-registry';\nimport { boardCachePath } from './board-registration';\nimport { boardInitialize } from './board-extensions';\nimport { pinLog, pinDebug } from './log';\nimport * as checks from './utils/checks';\nimport { boardDefault } from './board-default';\n\nconst newBoard = async (board, name, cache, versions, ...args) => {\n  if (cache == null) throw new Error(\"Please specify the 'cache' parameter.\");\n\n  board = {\n    board: board,\n    name: name,\n    cache: cache,\n    versions: versions,\n    class: board,\n  };\n\n  board = await boardInitialize(\n    board,\n    Object.assign({ cache, versions }, ...args)\n  );\n\n  return board;\n};\n\nconst boardInfer = (x, { name, board, registerCall, connect, url }) => {\n  var inferred = {\n    name: name,\n    board: board == null ? name : board,\n    connect: connect == null ? name !== 'packages' : connect,\n    url: url,\n    registerCall: registerCall,\n  };\n\n  // if boards starts with http:// or https:// assume this is a website board\n  if (/^http:\\/\\/|^https:\\/\\//g.test(x)) {\n    inferred['url'] = x;\n    inferred['board'] = 'datatxt';\n\n    // use only subdomain as friendly name which is also used as cache folder\n    if (name == null || x === name) {\n      // inferred$name <- gsub(\"https?://|\\\\..*\", \"\", inferred$url)\n      inferred['name'] = inferred['url']\n        .replace(/https?:\\/\\//g, '')\n        .replace(/\\..*$/g, '');\n    }\n\n    inferred['registerCall'] =\n      'pins::board_register(board = \"datatxt\", name = \"' +\n      inferred['name'] +\n      '\", url = \"' +\n      inferred['url'] +\n      '\")';\n  }\n\n  if (inferred['name'] == null) inferred['name'] = x;\n  if (inferred['board'] == null) inferred['board'] = x;\n\n  return inferred;\n};\n\nconst boardRegisterCode = (board, name) => {\n  return callbacks.get('boardRegisterCode')(board, name);\n};\n\nexport const boardConnect = (board, code, ...args) => {\n  var board = boardGet(board);\n\n  ui.uiViewerRegister(board, code);\n\n  return board;\n};\n\nexport const boardDisconnect = (name, args) => {\n  const board = boardGet(name);\n\n  ui.uiViewerClose(board);\n\n  return board;\n};\n\nexport const boardList = () => {\n  pinDebug('boardList', {});\n  // TODO: do we use packages board?\n  var defaults = arrays.concat(['local'], boardDefault());\n  var boards = arrays.concat(boardRegistry.list(), defaults);\n\n  return arrays.unique(boards);\n};\n\nexport const boardGet = (name) => {\n  if (checks.isNull(name)) {\n    name = boardDefault();\n  }\n\n  var registerCall = 'pins::board_register(board = \"' + name + '\")';\n\n  if (!boardRegistry.list().includes(name)) {\n    var boardInferred = boardInfer(name, {});\n\n    if (boardInferred['registerCall'] !== null) {\n      registerCall = boardInferred['registerCall'];\n    }\n\n    // attempt to automatically register board\n    name = boardInferred['name'];\n    try {\n      boardRegister(boardInferred['board'], {\n        name: boardInferred['name'],\n        connect: boardInferred['connect'],\n        registerCall: registerCall,\n        url: boardInferred['url'],\n      });\n    } catch (err) {\n      pinLog(`Failed to register board ${name}: ${err.toString()}`);\n    }\n\n    if (!boardRegistry.list().includes(name)) {\n      throw `Board '${name}' not a board, available boards: ${boardList().join(\n        ', '\n      )}`;\n    }\n  }\n\n  return boardRegistry.get(name);\n};\n\nexport const boardRegister = async (\n  board,\n  { name, cache, versions, ...args }\n) => {\n  if (name == null) name = board;\n  if (cache == null) cache = boardCachePath();\n\n  var inferred = boardInfer(board, {\n    board: board,\n    name: name,\n    registerCall: args['registerCall'],\n    connect: args['connect'],\n    url: args['url'],\n  });\n\n  args['url'] = inferred['url'];\n  board = await newBoard(\n    inferred['board'],\n    inferred['name'],\n    cache,\n    versions,\n    args\n  );\n\n  boardRegistry.set(inferred['name'], board);\n\n  if (inferred['registerCall'] == null)\n    inferred['registerCall'] = boardRegisterCode(\n      board['name'],\n      inferred['name']\n    );\n\n  if (inferred['connect'] !== false)\n    boardConnect(board['name'], inferred['registerCall']);\n\n  return inferred['name'];\n};\n\nexport const boardDeregister = (name, args = {}) => {\n  if (!boardRegistry.list().includes(name)) {\n    throw `Board '${name}' is not registered`;\n  }\n\n  const board = boardGet(name);\n\n  if (args.disconnect) {\n    boardDisconnect(name);\n  }\n\n  boardRegistry.remove(name);\n\n  return null;\n};\n","import { useMethod, useMethodAsync } from './utils/inheritance';\nimport * as checks from './utils/checks';\nimport { boardGet, boardList } from './board';\nimport { pinResetCache } from './pin-registry';\nimport {\n  boardPinGet,\n  boardPinFind,\n  boardPinRemove,\n  boardPinVersions,\n  boardEmptyResults,\n} from './board-extensions';\nimport { uiViewerUpdated } from './ui-viewer';\nimport { pinManifestGet } from './pin-manifest';\nimport * as arrays from './utils/arrays';\nimport { pinVersionsPathName, boardVersionsShorten } from './versions';\nimport * as fileSystem from './host/file-system';\nimport { pinContentName, pinResultsMerge } from './pin-tools';\nimport { dataFrame, dfCBind, dfColRemove } from './utils/dataframe';\nimport { pinLog, pinDebug } from './log';\n\nexport const pin = async (x, ...args) => {\n  pinDebug('pin', Object.assign({ x: x }, ...args));\n  return arrays.maybeOne(await useMethodAsync('pin', x, ...args));\n};\n\nexport const pinGet = async (\n  name,\n  { board, cache, extract, version, files, signature, ...args }\n) => {\n  if (checks.isNull(board)) {\n    var boardPinGetOrNull = async (...args) => {\n      try {\n        return await boardPinGet(...args);\n      } catch (err) {\n        return null;\n      }\n    };\n\n    var result = await boardPinGetOrNull(boardGet(null), name, {\n      version: version,\n    });\n\n    if (checks.isNull(result) && checks.isNull(board)) {\n      for (var boardName in boardList()) {\n        if (!cache) pinResetCache(boardName, name);\n        result = await boardPinGetOrNull(boardGet(boardName), name, {\n          extract: extract,\n          version: version,\n        });\n        if (!checks.isNull(result)) {\n          pinLog('Found pin ' + name + ' in board ' + boardName);\n          break;\n        }\n      }\n    }\n    if (checks.isNull(result))\n      throw new Error(\"Failed to retrieve '\" + name + \"' pin.\");\n  } else {\n    if (!cache) pinResetCache(board, name);\n    result = await boardPinGet(\n      boardGet(board),\n      name,\n      Object.assign({ extract: extract, version: version }, ...args)\n    );\n  }\n\n  var manifest = pinManifestGet(result);\n  if (checks.isNull(manifest['type'])) manifest['type'] = 'files';\n\n  var resultFiles = arrays\n    .ensure(result)\n    .filter((e) => !new RegExp('^' + pinVersionsPathName()).test(e));\n  resultFiles = fileSystem.dir.list(resultFiles, { fullNames: true });\n  if (manifest['type'] == 'files' && resultFiles.length > 1)\n    resultFiles = resultFiles.filter((e) => !/\\/data\\.txt$/g.test(e));\n\n  if (!checks.isNull(signature)) {\n    var pinSignature = pinVersionSignature(resultFiles);\n    if (signature !== pin_signature)\n      throw new Error(\n        \"Pin signature '\" + pin_signature + \"' does not match given signature.\"\n      );\n  }\n\n  if (files) {\n    return arrays.maybeOne(resultFiles);\n  } else {\n    return pinLoad({ _content: result, class: manifest['type'] });\n  }\n};\n\nexport const pinRemove = (name, board) => {\n  board = boardGet(board);\n\n  boardPinRemove(board, name);\n  uiViewerUpdated(board);\n\n  return null;\n};\n\nconst pinFindEmpty = () => {\n  return dataFrame(null, {\n    name: 'character',\n    description: 'character',\n    type: 'character',\n    metadata: 'character',\n    board: 'character',\n  });\n};\n\nexport const pinFind = async (\n  text,\n  { board, name, extended, metadata, ...args }\n) => {\n  if (checks.isNull(board) || board.length == 0) board = boardList();\n\n  text = pinContentName(text);\n  if (checks.isNull(text) && !checks.isNull(name)) text = name;\n\n  var allPins = pinFindEmpty();\n\n  board = arrays.ensure(board);\n  for (var boardIdx in board) {\n    var boardName = board[boardIdx];\n    var boardObject = boardGet(boardName);\n\n    var boardPins = null;\n    try {\n      boardPins = await boardPinFind(\n        boardObject,\n        text,\n        Object.assign({ name: name, extended: extended }, ...args)\n      );\n    } catch (error) {\n      pinLog(\"Error searching '\" + boardName + \"' board: \" + error);\n      boardPins = boardEmptyResults();\n    }\n\n    if (extended === true) {\n      boardPins = boardPins.map((row) => {\n        if (row.hasOwnProperty('metadata')) {\n          Object.assign(row, row['metadata']);\n          delete row['metadata'];\n        }\n        return row;\n      });\n    }\n\n    if (boardPins.length > 0) {\n      boardPins = dfCBind(\n        boardPins,\n        dataFrame(\n          boardPins.map((e) => Object.assign(e, { board: boardName })),\n          { board: 'character' }\n        )\n      );\n\n      allPins = pinResultsMerge(allPins, boardPins, extended === true);\n    }\n  }\n\n  if (!checks.isNull(text)) {\n    allPins = allPins.filter(\n      (e) =>\n        e.name === text ||\n        (checks.isNull(e.description)\n          ? false\n          : new RegExp(text, 'i').test(e.description))\n    );\n  }\n\n  if (!metadata) {\n    allPins = dfColRemove(allPins, 'metadata');\n  }\n\n  if (!checks.isNull(name)) {\n    allPins = allPins.filter((e) =>\n      new RegExp('(.*/)?' + name + '$').test(e.name)\n    );\n    if (allPins.length) allPins = allPins.filter((e, idx) => idx === 0);\n  }\n\n  // sort pin results by name\n  allPins = allPins.sort((a, b) => a.name < b.name);\n\n  return allPins;\n};\n\nexport const pinPreview = (x, ...args) => {\n  return useMethod('pinPreview', x, ...args);\n};\n\nexport const pinLoad = (path, ...args) => {\n  return useMethod('pinLoad', path, ...args);\n};\n\nconst pinFiles = async (name, { board, ...args }) => {\n  var entry = await pinFind({ name: name, board: board, metadata: true });\n\n  if (entry.length != 1) throw new Error(\"Pin '\" + name + \"' not found.\");\n  var metadata = entry[0]['metadata'];\n\n  return metadata[path];\n};\n\nconst pinGetOne = async (name, board, extended, metadata) => {\n  // first ensure there is always one pin since metadata with multiple entries can fail\n  var entry = await pinFind(null, {\n    name: name,\n    board: board,\n    metadata: false,\n    extended: false,\n  });\n\n  if (entry.length == 0) throw new Error(\"Pin '\" + name + \"' was not found.\");\n  if (entry.length > 1)\n    throw new Error(\n      \"Pin '\" +\n        name +\n        \"' was found in multiple boards: \" +\n        entry['board'].join(',') +\n        '.'\n    );\n\n  board = entry[0]['board'];\n  entry = await pinFind(null, {\n    name: name,\n    board: board,\n    metadata: metadata,\n    extended: extended,\n  });\n\n  return entry[0];\n};\n\nexport const pinInfo = async (\n  name,\n  { board, extended, metadata, signature, ...args }\n) => {\n  var entry = await pinGetOne(name, board, extended, metadata);\n\n  var board = entry['board'];\n\n  metadata = [];\n  if (\n    Object.keys(entry).includes('metadata') &&\n    entry.metadata.columns.length > 0\n  ) {\n    metadata = entry['metadata'];\n  }\n\n  if (signature) {\n    var files = await pinGet(name, { board: board, files: true });\n    entry['signature'] = pinVersionSignature(files);\n  }\n\n  var entryExt = Object.assign(entry);\n  delete entryExt['metadata'];\n\n  [...Object.keys(entryExt)].forEach((key) => {\n    const filtered =\n      !(entryExt[key] instanceof Array) ||\n      entryExt[key].length != 1 ||\n      !(entryExt[key][0] instanceof Array) ||\n      entryExt[key][0].length > 0;\n\n    if (!filtered) {\n      delete entryExt[key];\n    }\n  });\n\n  for (name in metadata) {\n    entryExt[name] = metadata[name];\n  }\n\n  return Object.assign(entryExt, { class: 'pin_info' });\n};\n\nexport const pinFetch = (...args) => {\n  return useMethod('pinFetch', ...args);\n};\n\nexport const pinVersions = (name, { board, full = false, ...args }) => {\n  var versions = boardPinVersions(boardGet(board), name);\n\n  if (!full) {\n    versions['version'] = boardVersionsShorten(versions['version']);\n  }\n\n  return versions;\n};\n","export const BoardName = Object.freeze({\n  kaggle: 'kaggle',\n});\n","import * as fileSystem from '../host/file-system';\nimport { BoardName } from './const';\n\nexport const pinDefaultName = (x, board) => {\n  const name = fileSystem.basename(x);\n  const error = new Error(\n    \"Can't auto-generate pin name from object, please specify the 'name' parameter.\"\n  );\n\n  if (!name) {\n    throw error;\n  }\n\n  const sanitized = name\n    .replace(/[^a-zA-Z0-9-]/g, '-')\n    .replace(/^-*|-*$/g, '')\n    .replace(/-+/g, '-');\n\n  if (!sanitized) {\n    throw error;\n  }\n\n  if (board === BoardName.kaggle && sanitized.length < 5) {\n    return `${sanitized}-pin`;\n  }\n\n  return sanitized;\n};\n","import * as list from './utils/list';\n\nexport const pinsMergeCustomMetadata = (metadata, customMetadata) => {\n  var fixedFields = ['rows', 'cols', 'name', 'description'];\n\n  list.namesArr(customMetadata).forEach((entry) => {\n    if (entry === 'columns') {\n      var fixedColumnnFields = ['name', 'type'];\n\n      // convert to list of columns\n      if (Array.isArray(metadata['columns'])) {\n        metadata['columns'] = metadata['columns'].map((x, i) => {\n          return {\n            name: Object.keys(metadata['columns'])[i],\n            type: metadata['columns'][i],\n          };\n        });\n      }\n\n      // TODO: Need to convert old-style yaml columns names to new format\n\n      customMetadata['columns'].forEach((column) => {\n        var foundIdx = metadata$columns.filter(\n          (e, i) => metadata['columns'][i]['name'] === column['name']\n        );\n\n        if (foundIdx.length == 1) {\n          Object.keys(column).forEach((fieldName) => {\n            if (!fixedColumnnFields.includes(fieldName)) {\n              metadata['columns'][foundIdx][fieldName] = column[fieldName];\n            }\n          });\n        }\n      });\n    } else if (!fixedFields.includes(entry)) {\n      metadata[entry] = customMetadata[entry];\n    }\n  });\n\n  return metadata;\n};\n","import callbacks from './callbacks';\n\nexport const fetch = () => callbacks.get('fetch');\n","import * as fileSystem from './host/file-system';\nimport * as requests from './host/requests';\nimport { tryCatch } from './utils/errors';\nimport { pinLog } from './log';\nimport { pinFileCacheMaxAge } from './pin-file';\nimport {\n  pinStoragePath,\n  pinRegistryRetrieveMaybe,\n  pinRegistryUpdate,\n} from './pin-registry';\n\nexport const pinDownloadOne = async (\n  path,\n  {\n    name,\n    component,\n    extract,\n    customEtag = '',\n    removeQuery,\n    config,\n    headers,\n    canFail,\n    cache = true,\n    contentLength = 0,\n    subpath,\n    details = {},\n    download = true,\n  }\n) => {\n  if (!subpath) subpath = name;\n\n  const fetch = requests.fetch();\n  const mustDownload = !cache;\n\n  // clean up name in case it's a full url\n  name = name.replace('^https?://', '');\n\n  const localPath = pinStoragePath(component, subpath);\n\n  if (!download) {\n    return localPath;\n  }\n\n  // use a temp path to rollback if something fails\n  const tempfile = fileSystem.tempfile();\n  fileSystem.dir.create(tempfile);\n\n  const oldPin = pinRegistryRetrieveMaybe(name, component) || {};\n\n  let oldCache = oldPin.cache;\n  let oldCacheMissing = true;\n  let cacheIndex = 0;\n\n  if (!oldCache) {\n    oldPin.cache = {};\n    oldCache = {};\n    cacheIndex = 1;\n  } else {\n    const cacheUrls = Object.keys(oldCache).map((k) => oldCache[k].url);\n\n    cacheIndex = cacheUrls.findIndex((u) => u === path);\n    if (cacheIndex === -1) {\n      oldCache = {};\n      cacheIndex = cacheUrls.length + 1;\n    } else {\n      oldCache = oldCache[cacheIndex];\n      oldCacheMissing = false;\n    }\n  }\n\n  let reportError = (e) => {\n    if (oldCacheMissing) {\n      throw new Error(e);\n    } else {\n      pinLog(e);\n    }\n  };\n  const catchLog = (func) =>\n    tryCatch(func, (e) => {\n      pinLog(e.message);\n    });\n  const catchError = oldCacheMissing\n    ? (func) => func\n    : (func) =>\n        tryCatch(func, (e) => {\n          reportError(e.message);\n        });\n\n  if (canFail) {\n    reportError = (e) => {\n      details.error = e;\n    };\n  }\n\n  cache = {};\n  cache.etag = oldCache.etag || '';\n  cache.maxAge = oldCache.maxAge || 0;\n  cache.changeAge = oldCache.changeAge || new Date().getTime() - cache.maxAge;\n  cache.url = path;\n\n  let error = null;\n  let extractType = null;\n\n  pinLog(\n    `Checking 'changeAge' header (time, change age, max age): ${new Date()}, ${\n      cache.changeAge\n    }, ${cache.maxAge}`\n  );\n\n  details.somethingChanged = false;\n\n  // skip downloading if maxAge still valid\n  if (new Date().getTime() >= cache.changeAge + cache.maxAge || mustDownload) {\n    const skipDownload = false;\n\n    if (customEtag && customEtag.length) {\n      pinLog(`Using custom 'etag' (old, new): ${oldCache.etag}, ${customEtag}`);\n      cache.etag = customEtag;\n    } else {\n      // TODO: use config parameter\n      const headResult = await fetch(path, { method: 'HEAD', headers });\n\n      if (headResult) {\n        cache.etag = headResult.headers.etag || '';\n        cache.changeAge = new Date().getTime();\n        cache.maxAge =\n          pinFileCacheMaxAge(headResult.headers['cache-control']) ||\n          cache.changeAge * 2;\n        contentLength = headResult.headers['content-length'];\n        pinLog(`Checking 'etag' (old, new):  ${oldCache.etag}, ${cache.etag}`);\n      }\n    }\n\n    const etagChanged = cache.etag || oldCache.etag !== cache.etag;\n\n    // skip downloading if etag has not changed\n    if (oldCacheMissing || etagChanged || mustDownload) {\n      let downloadName = fileSystem.basename(path);\n\n      if (removeQuery) {\n        // TODO\n        // downloadName = strsplit(download_name, \"\\\\?\")[[1]][1];\n      }\n\n      const destinationPath = fileSystem.path(tempfile, downloadName);\n\n      pinLog(`Downloading ${path} to ${destinationPath}`);\n      details.somethingChanged = true;\n\n      const result = await fetch(path).then((response) => {\n        if (!response.ok) {\n          pinLog(`Failed to download remote file: ${path}`);\n        }\n        return response;\n      });\n\n      if (result.ok) {\n        const contentType = result.headers['content-type'];\n        const text = await result.text();\n\n        fileSystem.write(text, destinationPath);\n\n        /*\n        // TODO\n        if (contentType) {\n          extractType = contentType.replace(/application\\/(x-)?/, '');\n          if (['application/octet-stream', 'application/zip'].includes(contentType)) {\n            if (fileSystem.fileSize(destinationPath) > 4 &&\n              readBin(destination_path, raw(), 4) === as.raw(c(0x50, 0x4b, 0x03, 0x04)))\n            extractType = 'zip'\n          }\n        }\n        */\n      }\n    }\n  }\n\n  if (error) return;\n\n  const newCache = oldPin.cache;\n  newCache[cacheIndex] = cache;\n\n  // allow to override extraction method, useful in pin() from URLs\n  if (extract) {\n    extractType = extract;\n    extract = true;\n  }\n\n  const files = fileSystem.dir.list(tempfile, { fullNames: true });\n  if (extractType && extract) {\n    /*\n    // TODO\n    pinExtract(\n      structure(files, { class: extractType }),\n      tempPath\n    )\n    */\n  }\n\n  files.forEach((file) => {\n    fileSystem.copy(file, localPath, { overwrite: true, recursive: true });\n  });\n\n  // use relative paths to match remote service downloads and allow moving pins folder, potentially\n  const relativePath = localPath.replace(pinStoragePath(component, ''), '');\n\n  pinRegistryUpdate(name, component, {\n    path: oldPin.path || relativePath,\n    cache: newCache,\n  });\n\n  return localPath;\n};\n\nexport const pinDownload = async (path, { ...args }) => {\n  // TODO: path can be an array\n  const localPath = await pinDownloadOne(path, args);\n\n  return localPath;\n};\n","import * as fileSystem from './host/file-system';\nimport * as arrays from './utils/arrays';\nimport { boardPinStore } from './pin-extensions';\n\nexport const pinString = (\n  x,\n  opts = { name: null, description: null, board: null }\n) => {\n  const { name, description, board, ...args } = opts;\n  const paths = arrays.ensure(x);\n  const extension = paths.length > 0 ? 'zip' : fileSystem.tools.fileExt(paths);\n\n  return boardPinStore(\n    board,\n    Object.assign(\n      {},\n      {\n        name,\n        description,\n        path: paths,\n        type: 'files',\n        metadata: {\n          extension: extension,\n        },\n      },\n      ...args\n    )\n  );\n};\n\nexport const pinFileCacheMaxAge = (cacheControl) => {\n  if (!cacheControl) return null;\n\n  let maxAge = new RegExp('max-age').test(cacheControl);\n\n  if (maxAge.length !== 1) return null;\n  maxAge = cacheControl.replace(/.*max-age=/, '');\n\n  return parseFloat(maxAge.replace(/,.*$/, ''));\n};\n","import * as fileSystem from './host/file-system';\nimport * as arrays from './utils/arrays';\nimport { boardGet } from './board';\nimport { pinResetCache } from './pin-registry';\nimport { pinLog } from './log';\nimport * as options from './host/options';\nimport { boardDefault } from './board-default';\nimport { onExit } from './utils/onexit.js';\nimport * as checks from './utils/checks';\nimport {\n  pinManifestExists,\n  pinManifestGet,\n  pinManifestCreate,\n} from './pin-manifest';\nimport { pinsMergeCustomMetadata } from './pins-metadata';\nimport { pinDownload } from './pin-download';\nimport { boardPinCreate } from './board-extensions';\nimport { uiViewerUpdated } from './ui-viewer';\nimport { pinGet } from './pin';\n\nconst pinNameFromPath = (pinPath) => {\n  const baseName = fileSystem.basename(pinPath);\n  const baseNameWithoutExt = fileSystem.tools.filePathSansExt(baseName);\n\n  return baseNameWithoutExt.replace(/[^a-zA-Z0-9]+/g, '_');\n};\n\nexport const boardPinStore = (board, opts) => {\n  var {\n    path,\n    description,\n    type,\n    metadata,\n    extract,\n    retrieve,\n    ...args\n  } = Object.assign({ retrieve: true }, opts);\n  path = arrays.ensure(path);\n\n  var customMetadata = args['customMetadata'];\n  var zip = args['zip'];\n\n  if (checks.isNull(extract)) extract = true;\n\n  const boardInstance = boardGet(board);\n  const name = opts.name || arrays.vectorize(pinNameFromPath)(pinPath);\n\n  pinLog(`Storing ${name} into board ${boardInstance.name} with type ${type}`);\n\n  if (!args.cache) pinResetCache(boardInstance, name);\n  path = path.filter((x) => !/data\\.txt/g.test(x));\n\n  const storePath = fileSystem.tempfile();\n\n  fileSystem.dir.create(storePath);\n\n  return onExit(\n    () => unlink(storePath, { recursive: true }),\n    () => {\n      if (\n        path.length == 1 &&\n        /^http/g.test(path) &&\n        !/\\\\.[a-z]{2,4}$/g.test(path) &&\n        options.getOption('pins.search.datatxt', true)\n      ) {\n        // attempt to download data.txt to enable public access to boards like rsconnect\n        const datatxtPath = fileSystem.path(path, 'data.txt');\n        const localPath = pinDownload(datatxtPath, name, boardDefault(), {\n          canFail: true,\n        });\n\n        if (localPath) {\n          manifest = pinManifestGet(localPath);\n          path = `${path}/${manifest[path]}`;\n          extract = false;\n        }\n      }\n\n      let somethingChanged = false;\n\n      if (zip) {\n        var findCommonPath = function (path) {\n          var common = path[0];\n          if (\n            arrays.all(path, (common) => startsWith(common)) ||\n            common === fileSystem.dirname(common)\n          )\n            return common;\n          return findCommonPath(fileSystem.dirname(common[0]));\n        };\n\n        var commonPath = findCommonPath(path);\n        fileSystem.dir.zip(\n          commonPath.map((e) => e.replace(common_path + '/', '')),\n          fileSystem.path(storePath, 'data.zip'),\n          commonPath\n        );\n        somethingChanged = true;\n      } else {\n        path.forEach((singlePath, idxPath) => {\n          const details = { somethingChanged: true };\n\n          if (/^http/g.test(singlePath)) {\n            singlePath = pinDownload(\n              singlePath,\n              name,\n              boardDefault(),\n              Object.assign({ extract, details, canFail: true }, opt)\n            );\n\n            if (!checks.isNull(details['error'])) {\n              var cachedResult = null;\n              try {\n                pinGet(name, { board: boardDefault() });\n              } catch (error) {}\n              if (checks.isNull(cachedResult)) {\n                throw new Error(details['error']);\n              } else {\n                pinLog(details['error']);\n              }\n              return cachedResult;\n            }\n          }\n\n          if (details.somethingChanged) {\n            const copyOrLink = (from, to) => {\n              if (\n                fileSystem.fileExists(from) &&\n                fileSystem.fileSize(from) >=\n                  options.getOption('pins.link.size', 10 ^ 8)\n              )\n                fileSystem.createLink(\n                  from,\n                  fileSystem.path(to, fileSystem.basename(from))\n                );\n              else fileSystem.copy(from, to, { recursive: true });\n            };\n\n            if (fileSystem.dir.exists(singlePath)) {\n              for (entry in fileSystem.dir.list(singlePath, {\n                fullNames: true,\n              })) {\n                copyOrLink(entry, storePath);\n              }\n            } else {\n              copyOrLink(singlePath, storePath);\n            }\n\n            somethingChanged = true;\n          }\n        });\n      }\n\n      if (somethingChanged) {\n        if (!pinManifestExists(storePath)) {\n          metadata.description = description;\n          metadata.type = type;\n\n          metadata = pinsMergeCustomMetadata(metadata, customMetadata);\n\n          pinManifestCreate(\n            storePath,\n            metadata,\n            fileSystem.dir.list(storePath, { recursive: true })\n          );\n        }\n\n        boardPinCreate(boardInstance, storePath, name, metadata, ...args);\n\n        uiViewerUpdated(boardInstance);\n      }\n\n      if (retrieve) {\n        return pinGet(\n          name,\n          Object.assign({ board: boardInstance['name'] }, ...args)\n        );\n      } else {\n        return null;\n      }\n    }\n  );\n};\n","import * as fileSystem from './host/file-system';\nimport { pinDefaultName } from './utils/pin-utils';\nimport { boardPinStore } from './pin-extensions';\nimport { pinLog, pinDebug } from './log';\n\nexport const pinDefault = (x, opts = {}) => {\n  pinDebug('pinDefault', { x: x, opts: opts });\n\n  const { description, board, ...args } = opts;\n  const name = opts.name || pinDefaultName(x, board);\n  const path = fileSystem.tempfile();\n\n  fileSystem.dir.create(path);\n  fileSystem.write(JSON.stringify(x), fileSystem.path(path, 'data.json'));\n\n  return boardPinStore(\n    board,\n    Object.assign(\n      {},\n      {\n        name,\n        description,\n        path: path,\n        type: 'default',\n        metadata: [],\n      },\n      ...args\n    )\n  );\n};\n\nexport const pinPreviewDefault = (x, ...args) => x;\n\nexport const pinLoadDefault = (path, ...args) => {\n  return JSON.parse(fileSystem.read(fileSystem.path(path, 'data.json')));\n};\n\nexport const pinFetchDefault = (...args) => args['path'];\n","export const boardDatatxtHeaders = (board, path, verb = 'GET', file) => {\n  if (board.url) {\n    // remove base url form path since S3 and others require relative paths when using custom domains\n    path = path.replace(`^${board.url}/?`, '');\n  }\n\n  if (typeof board.headers === 'function') {\n    return board.headers(board, verb, path, file);\n  } else if (\n    (board.headers &&\n      (board.headers.length ||\n        typeof board.headers === 'string' ||\n        board.headers['request'])) ||\n    !board.headers\n  ) {\n    return board.headers;\n  } else {\n    throw `Unsupported class for board headers: ${typeof board.headers}`;\n  }\n};\n","import yaml from 'js-yaml';\nimport * as fileSystem from './host/file-system';\n\nexport const boardManifestGet = (path, defaultEmpty = false) => {\n  if (!fileSystem.fileExists(path) && defaultEmpty) {\n    return [];\n  }\n\n  const yamlText = fileSystem.readLines(path).join('\\n');\n  const result = yaml.safeLoad(yamlText);\n\n  return result.map ? result : [result];\n};\n\nexport const boardManifestCreate = (index, file) => {\n  const yamlText = yaml.safeDump(index);\n\n  fileSystem.writeLines(file, yamlText.split('\\n'));\n};\n\nexport const boardManifestLoad = (manifest) => {\n  const result = yaml.safeLoad(manifest);\n\n  return result.map ? result : [result];\n};\n","import yaml from 'js-yaml';\nimport * as fileSystem from './host/file-system';\nimport * as requests from './host/requests';\nimport * as versions from './versions';\nimport { boardDatatxtHeaders } from './board-datatxt-headers';\nimport { boardCachePath } from './board-registration';\nimport { boardLocalStorage } from './board-storage';\nimport {\n  boardManifestGet,\n  boardManifestLoad,\n  boardManifestCreate,\n} from './board-manifest';\nimport { pinStoragePath } from './pin-registry';\nimport {\n  pinManifestGet,\n  pinManifestDownload,\n  pinManifestCreate,\n  pinManifestMerge,\n} from './pin-manifest';\nimport { pinDownload } from './pin-download';\nimport { boardVersionsExpand } from './versions';\n\nconst datatxtRefreshIndex = async (board) => {\n  if (!board.url) {\n    throw new Error(`Invalid 'url' in '${board.name}' board.`);\n  }\n\n  let indexFile = 'data.txt';\n\n  if (board.indexRandomize) {\n    indexFile += `?rand=${Math.round(Math.random() * 1e8)}`;\n  }\n\n  const indexUrl = fileSystem.path(board.url, indexFile);\n  const fetch = requests.fetch();\n\n  const headers = boardDatatxtHeaders(board, 'data.txt');\n\n  const data = await fetch(indexUrl, { headers }).then((response) => {\n    if (!response.ok) {\n      throw new Error(`Failed to retrieve data.txt file from ${board.url}.`);\n    } else {\n      return response.text();\n    }\n  });\n\n  const tempfile = fileSystem.tempfile();\n\n  fileSystem.dir.create(tempfile);\n  fileSystem.write(data, tempfile);\n\n  const localIndex = fileSystem.path(boardLocalStorage(board), 'data.txt');\n\n  let currentIndex = boardManifestGet(localIndex, true);\n  let newIndex = boardManifestGet(tempfile);\n\n  newIndex = newIndex.map((newEntry) => {\n    const currentEntry = currentIndex.filter((ci) => ci.path === newEntry.path);\n\n    if (currentEntry.length == 1) {\n      newEntry.cache = currentEntry[0].cache;\n    }\n\n    return newEntry;\n  });\n\n  currentIndex = newIndex;\n\n  const yamlText = yaml.safeDump(currentIndex);\n\n  fileSystem.writeLines(localIndex, yamlText.split('\\n'));\n};\n\nconst datatxtPinDownloadInfo = (board, name, args) => {\n  let index = boardManifestGet(\n    fileSystem.path(boardLocalStorage(board), 'data.txt')\n  );\n  index = index.filter((v) => v.name === name);\n\n  if (!index.length && board.needsIndex) {\n    throw new Error(`Could not find '${name}' pin in '${board.name}' board.`);\n  }\n\n  let indexEntry = null;\n\n  if (index.length) {\n    indexEntry = index[0];\n  } else {\n    // if there is no index, fallback to downloading data.txt for the pin,\n    // this can happen with incomplete indexes.\n    indexEntry = [{ path: name }];\n  }\n\n  // try to download index as well\n  let pathGuess = new RegExp('.*/.*\\\\.[a-zA-Z]+$').test(indexEntry.path)\n    ? fileSystem.dirname(indexEntry.path)\n    : indexEntry.path;\n\n  // if 'pathGuess' already has a scheme, don't prepend board URL\n  pathGuess = new RegExp('^https?://').test(pathGuess)\n    ? pathGuess\n    : fileSystem.path(board.url, pathGuess);\n\n  return { pathGuess, indexEntry };\n};\n\nconst datatxtRefreshManifest = async (board, name, download, args) => {\n  const { pathGuess, indexEntry } = datatxtPinDownloadInfo(board, name, args);\n\n  // TODO: fix pathGuess - there is no data.txt in iris/ folder\n  const downloadPath = fileSystem.path(pathGuess.slice(0, -6), 'data.txt');\n\n  await pinDownload(downloadPath, {\n    name,\n    component: board,\n    canFail: true,\n    download,\n    headers: boardDatatxtHeaders(board, downloadPath),\n  });\n\n  // TODO: should be array?\n  return { pathGuess, indexEntry, downloadPath };\n};\n\nconst datatxtUploadFiles = async ({ board, name, files, path }) => {\n  files.forEach(async (file) => {\n    const subpath = fileSystem.path(name, file);\n    const uploadUrl = fileSystem.path(board.url, subpath);\n    const filePath = fileSystem.normalizePath(fileSystem.path(path, file));\n\n    const fetch = requests.fetch();\n\n    // TODO: show progress\n    // http_utils_progress(\"up\", size = file.info(file_path)$size)\n    const response = await fetch(uploadUrl, {\n      method: 'PUT', // TODO: httr::upload_file(file_path)\n      body: filePath,\n      headers: boardDatatxtHeaders(board, subpath, 'PUT', filePath),\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to upload '${file}' to '${uploadUrl}'. Error: ${response.statusText}`\n      );\n    }\n  });\n};\n\nconst datatxtUpdateIndex = async ({\n  board,\n  path,\n  operation,\n  name,\n  metadata,\n}) => {\n  let indexFile = 'data.txt';\n  const indexUrl = fileSystem.path(board.url, indexFile);\n\n  let indexFileGet = 'data.txt';\n\n  if (board.indexRandomize) {\n    // some boards cache bucket files by default which can be avoided by changing the url\n    indexFileGet = `${indexFile}?rand=${(Math.random() * 10) ^ 8}`;\n  }\n\n  const fetch = requests.fetch();\n  const getResponse = await fetch(fileSystem.path(board.url, indexFileGet), {\n    headers: boardDatatxtHeaders(board, indexFileGet),\n  });\n\n  let index = [];\n\n  if (getResponse.ok) {\n    index = boardManifestLoad(await getResponse.text());\n  } else {\n    if (operation === 'remove') {\n      throw new Error(\n        'Failed to retrieve latest data.txt file, the pin was partially removed.'\n      );\n    }\n  }\n\n  const indexMatches = index.map((i) => i.path === path);\n\n  let indexPos = indexMatches.length\n    ? indexMatches.filter((i) => i)\n    : index.length + 1;\n\n  if (!indexPos.length) {\n    indexPos = index.length + 1;\n  }\n\n  if (operation === 'create') {\n    metadata.columns = null;\n\n    index[indexPos] = [];\n    index[indexPos].push({ path });\n\n    if (name) {\n      index[indexPos].push({ name });\n    }\n\n    index[indexPos].push(metadata);\n  } else if (operation === 'remove') {\n    if (indexPos <= index.length) {\n      index[indexPos] = null;\n    }\n  } else {\n    throw new Error(`Operation ${operation} is unsupported.`);\n  }\n\n  indexFile = fileSystem.path(boardLocalStorage(board), 'data.txt');\n\n  boardManifestCreate(index, indexFile);\n\n  const normalizedFile = fileSystem.normalizePath(indexFile);\n  const putResponse = await fetch(indexUrl, {\n    method: 'PUT',\n    // TODO: body = httr::upload_file(normalizedFile)\n    body: normalizedFile,\n    headers: boardDatatxtHeaders(board, 'data.txt', 'PUT', normalizedFile),\n  });\n\n  if (!putResponse.ok) {\n    throw new Error(\n      `Failed to update data.txt file: ${await putResponse.text()}`\n    );\n  }\n\n  if (board.indexUpdated && operation === 'create') {\n    board.indexUpdated(board);\n  }\n};\n\nconst datatxtPinFiles = async (board, name) => {\n  const entry = boardPinFindDatatxt(board, board.name, { metadata: true });\n\n  if (entry.length !== 1) {\n    throw new Error(`Pin '${name}' not found.`);\n  }\n\n  const metadata = results[0]['metadata'];\n\n  let files = metadata.path;\n\n  metadata.versions.forEach(async (version) => {\n    const pathGuess = datatxtPinDownloadInfo(board, name).pathGuess;\n    const downloadPath = fileSystem.path(\n      fileSystem.path(pathGuess, version),\n      'data.txt'\n    );\n    const localPath = fileSystem.path(pinStoragePath(board, name), version);\n    const subpath = fileSystem.path(name, version);\n\n    await pinDownload(downloadPath, {\n      name,\n      component: board,\n      canFail: true,\n      headers: boardDatatxtHeaders(board, downloadPath),\n      subpath,\n    });\n\n    const manifest = pinManifestGet(localPath);\n\n    files = files.concat([\n      fileSystem.path(subpath, manifest.path),\n      fileSystem.path(subpath, 'data.txt'),\n    ]);\n  });\n\n  return files;\n};\n\nexport const boardInitializeDatatxt = async (board, args) => {\n  const {\n    url,\n    browseUrl,\n    headers,\n    bucket,\n    indexUpdated,\n    indexRandomize = false,\n    needsIndex = true,\n    cache = boardCachePath(),\n    ...params\n  } = args;\n\n  if (!url) {\n    throw new Error(\"The 'datatxt' board requires a 'url' parameter.\");\n  }\n\n  board.url = url.replace(/(\\/)?data.txt$/g, '');\n  board.headers = headers;\n  board.needsIndex = needsIndex;\n  board.browseUrl = browseUrl || url;\n  board.indexUpdated = indexUpdated;\n  board.bucket = bucket;\n  board.indexRandomize = indexRandomize;\n\n  Object.keys(params).forEach((key) => {\n    board[key] = params[key];\n  });\n\n  await datatxtRefreshIndex(board);\n\n  return board;\n};\n\nexport const boardPinGetDatatxt = async (board, name, args) => {\n  const { extract, version, download = true, ...opts } = args;\n  const manifestPaths = await datatxtRefreshManifest(\n    board,\n    name,\n    download,\n    opts\n  );\n\n  const { indexEntry } = manifestPaths;\n  let pathGuess = manifestPaths.pathGuess;\n  let downloadPath = manifestPaths.downloadPath;\n  let localPath = pinStoragePath(board, name);\n  let manifest = pinManifestGet(localPath);\n\n  if (version) {\n    if (!manifest.versions.includes(version)) {\n      version = boardVersionsExpand(manifest.versions, version);\n    }\n\n    downloadPath = fileSystem.path(\n      pathGuess,\n      fileSystem.path(version, 'data.txt')\n    );\n    localPath = fileSystem.path(localPath, version);\n\n    await pinDownload(downloadPath, {\n      name,\n      component: board,\n      canFail: true,\n      headers: boardDatatxtHeaders(board, downloadPath),\n      subpath: fileSystem.path(name, version),\n    });\n\n    manifest = pinManifestGet(localPath);\n    pathGuess = fileSystem.path(pathGuess, version);\n  }\n\n  if (manifest) {\n    downloadPath = indexEntry.path;\n\n    const pinManifest = pinManifestDownload(localPath);\n\n    if (pinManifest) {\n      // we find a data.txt file in subfolder with paths, we use those paths instead of the index paths\n      downloadPath = '';\n\n      if (new Regexp('^https?://').test(pinManifest)) {\n        downloadPath = pinManifest;\n      } else {\n        downloadPath = fileSystem.path(pathGuess, pinManifest);\n      }\n    } else {\n      indexEntry.path = null;\n      pinManifestCreate(localPath, indexEntry, indexEntry.path);\n    }\n  } else {\n    // attempt to download from path when index not available\n    downloadPath = fileSystem.path(board.url, name);\n  }\n\n  if (!new RegExp('https?://').test(downloadPath)) {\n    downloadPath = fileSystem.path(board.url, downloadPath);\n  }\n\n  localPath = await pinDownload(downloadPath, {\n    name,\n    component: board,\n    extract,\n    download,\n    headers: boardDatatxtHeaders(board, downloadPath),\n  });\n\n  return localPath;\n};\n\nexport const boardPinFindDatatxt = async (board, text, args) => {\n  await datatxtRefreshIndex(board);\n\n  const entries = boardManifestGet(\n    fileSystem.path(boardLocalStorage(board), 'data.txt')\n  );\n\n  if (args.extended) {\n    return entries;\n  }\n\n  let results = entries.map((e) => ({\n    name: e.name || fileSystem.basename(e.path),\n    description: e.description || '',\n    type: e.type || 'files',\n    metadata: e,\n    stringsAsFactors: false,\n  }));\n\n  if (args.name) {\n    results = results.filter((i) => i.name === agrs.name);\n  }\n\n  if (results.length === 1) {\n    let metadata = JSON.parse(results[0].metadata);\n    const pathGuess = new RegExp('\\\\.[a-zA-Z]+$').test(metadata.path)\n      ? fileSystem.dirname(metadata.path)\n      : metadata.path;\n    const datatxtPath = fileSystem.path(\n      board.url,\n      fileSystem.path(pathGuess, 'data.txt')\n    );\n\n    const response = await fetch(datatxtPath, {\n      headers: boardDatatxtHeaders(board, datatxtPath),\n    });\n\n    if (response.ok) {\n      const pinMetadata = boardManifestLoad(await response.text());\n      metadata = pinManifestMerge(metadata, pinMetadata);\n      results.metadata = metadata;\n    }\n  }\n\n  return results;\n};\n\nexport const boardPinCreateDatatxt = async (\n  board,\n  path,\n  name,\n  metadata,\n  args\n) => {\n  versions.boardVersionsCreate(board, name, path);\n\n  const uploadFiles = fileSystem.dir.list(path, { recursive: true });\n\n  await datatxtUploadFiles({ board, name, files: uploadFiles, path });\n  await datatxtUpdateIndex({\n    board,\n    path: name,\n    operation: 'create',\n    name,\n    metadata,\n  });\n};\n\nexport const boardPinRemoveDatatxt = async (board, name, args) => {\n  const files = datatxtPinFiles(board, name);\n\n  // also attempt to delete data.txt\n  files.push(fileSystem.path(name, 'data.txt'));\n\n  const fetch = requests.fetch();\n\n  files.forEach(async (file) => {\n    const deleteUrl = fileSystem.path(board.url, file);\n\n    const response = await fetch(deleteUrl, {\n      method: 'DELETE',\n      headers: boardDatatxtHeaders(board, file, 'DELETE'),\n    });\n\n    if (!response.ok) {\n      console.warning(\n        `Failed to remove '${file}' from '${\n          board.name\n        }' board. Error: ${await response.text()}`\n      );\n    }\n  });\n\n  await datatxtUpdateIndex({ board, path: name, operation: 'remove', name });\n\n  unlink(pinStoragePath(board, name), { recursive: true });\n};\n\nexport const boardPinVersionsDatatxt = async (board, name, args) => {\n  const { download = true, ...opts } = args;\n\n  await datatxtRefreshManifest(board, name, download, opts);\n\n  return versions.boardVersionsGet(board, name);\n};\n","import * as fileSystem from './host/file-system';\nimport callbacks from './host/callbacks';\nimport { boardGet } from './board';\nimport { boardInitializeDatatxt } from './board-datatxt';\n\nexport const s3Headers = (board, verb, path, file) => {\n  const date = new Date().toUTCString();\n\n  // allow full urls to allow arbitrary file downloads\n  let bucket = board.bucket;\n\n  if (new RegExp('^https?://').test(path)) {\n    const pathNohttp = path.replace('^https?://', '');\n\n    path = pathNohttp.replace('^[^/]+/', '');\n    bucket = pathNohttp.replace('//..*', '');\n  }\n\n  const content = [\n    verb,\n    '',\n    'application/octet-stream',\n    '',\n    `x-amz-date:${date}`,\n    fileSystem.path(`/${bucket}`, path),\n  ].join('\\n');\n\n  const crypto = callbacks.get('crypto');\n  const hash = crypto.HmacSHA1(content, board.secret || '');\n  const signature = hash.toString(crypto.enc.Base64);\n\n  const headers = {\n    Host: `${bucket}.${board.host}`,\n    'x-amz-date': date,\n    'Content-Type': 'application/octet-stream',\n    Authorization: `AWS ${board.key}:${signature}`,\n  };\n\n  return headers;\n};\n\nexport const boardInitializeS3 = async (board, args) => {\n  const env = callbacks.get('env');\n  const {\n    bucket = env('AWS_BUCKET'),\n    key = env('AWS_ACCESS_KEY_ID'),\n    secret = env('AWS_SECRET_ACCESS_KEY'),\n    cache,\n    host = 's3.amazonaws.com',\n    ...params\n  } = args;\n\n  board.bucket = bucket;\n\n  if (!bucket) throw new Error(\"The 's3' board requires a 'bucket' parameter.\");\n  if (!key) throw new Error(\"The 's3' board requires a 'key' parameter.\");\n  if (!secret) throw new Error(\"The 's3' board requires a 'secret' parameter.\");\n\n  const obj = Object.assign({}, params, {\n    name: board.name,\n    url: `http://${bucket}.${host}`,\n    cache,\n    headers: s3Headers,\n    needsIndex: false,\n    key,\n    secret,\n    bucket,\n    connect: false,\n    browseUrl: `https://s3.console.aws.amazon.com/s3/buckets/${bucket}/`,\n    host,\n  });\n\n  await boardInitializeDatatxt(board, obj);\n\n  return board;\n};\n","export const guessType = (file) => {\n  const extension = file.split('.').pop();\n\n  if (extension === 'txt') {\n    return 'text/plain';\n  }\n\n  // TODO: we will need more types\n  return '';\n};\n","import * as fileSystem from './host/file-system';\nimport callbacks from './host/callbacks';\nimport { guessType } from './utils/mime';\nimport { boardGet } from './board';\nimport { boardInitializeDatatxt } from './board-datatxt';\n\nexport const azureHeaders = (board, verb, path, file) => {\n  const date = new Date().toUTCString();\n  const azureVersion = '2015-04-05';\n\n  // allow full urls to allow arbitrary file downloads\n  let container = board.container;\n  let account = board.account;\n\n  if (new RegExp('^https?://').test(path)) {\n    const pathNohttp = path.replace('^https?://', '');\n    const subPath = pathNohttp.replace('^[^/]+/', '');\n\n    account = pathNohttp.replace('\\\\..*', '');\n    path = subPath.replace('^[^/]+/', '');\n    container = subPath.replace('/.*', '');\n  }\n\n  let contentLength = '';\n  let contentType = '';\n\n  if (file) {\n    contentLength = fileSystem.fileSize(file);\n    contentType = guessType(file);\n  }\n\n  const content = [\n    verb,\n    '\\n',\n    contentLength,\n    '',\n    contentType,\n    '\\n\\n\\n\\n\\n',\n    'x-ms-blob-type:BlockBlob',\n    `x-ms-date:${date}`,\n    `x-ms-version:${azureVersion}`,\n    `/${account}/${container}/${path}`,\n  ].join('\\n');\n\n  const crypto = callbacks.get('crypto');\n  const hash = crypto.HmacSHA1(content, board.secret || '');\n  const signature = hash.toString(crypto.enc.Base64);\n\n  const headers = {\n    'x-ms-date': date,\n    'x-ms-version': azureVersion,\n    'x-ms-blob-type': 'BlockBlob',\n    Authorization: `SharedKey ${account}:${signature}`,\n  };\n\n  return headers;\n};\n\nexport const boardInitializeAzure = async (board, args) => {\n  const env = callbacks.get('env');\n  const {\n    container = env('AZURE_STORAGE_CONTAINER'),\n    account = env('AZURE_STORAGE_ACCOUNT'),\n    key = env('AZURE_STORAGE_KEY'),\n    cache,\n    ...params\n  } = args;\n\n  if (!container)\n    throw new Error(\"The 'azure' board requires a 'container' parameter.\");\n  if (!account)\n    throw new Error(\"The 'azure' board requires an 'account' parameter.\");\n  if (!key) throw new Error(\"The 'azure' board requires a 'key' parameter.\");\n\n  const azureUrl = `https://${account}.blob.core.windows.net/${container}`;\n  const obj = Object.assign({}, params, {\n    name: board.name,\n    url: azureUrl,\n    cache,\n    headers: azureHeaders,\n    needsIndex: false,\n    container,\n    account,\n    key,\n    connect: false,\n    browseUrl: 'https://portal.azure.com',\n  });\n\n  await boardInitializeDatatxt(board, obj);\n\n  return boardGet(board.name);\n};\n","import * as requests from './host/requests';\nimport * as fileSystem from './host/file-system';\nimport callbacks from './host/callbacks';\nimport { guessType } from './utils/mime';\nimport { boardInitializeDatatxt } from './board-datatxt';\nimport { boardDatatxtHeaders } from './board-datatxt-headers';\n\nconst gcloudCandidates = (binary) => {\n  const env = callbacks.get('env');\n  const which = callbacks.get('which');\n  const platform = callbacks.get('platform')();\n\n  if (platform === 'win32') {\n    const appdata = fileSystem.normalizePath(env('localappdata'), {\n      winslash: '/',\n    });\n    const binaryName = `${binary}.cmd`;\n    const sdkPath = fileSystem.path(\n      'Google/Cloud SDK/google-cloud-sdk/bin',\n      binaryName\n    );\n\n    return [\n      () => fileSystem.path(appdata, sdkPath),\n      () => fileSystem.path(env('ProgramFiles'), sdkPath),\n      () => fileSystem.path(env('ProgramFiles(x86)'), sdkPath),\n    ];\n  } else {\n    const binaryName = binary;\n\n    return [\n      () => which(binaryName),\n      () => `~/google-cloud-sdk/bin/${binaryName}`,\n      () =>\n        fileSystem.path(\n          env('GCLOUD_INSTALL_PATH') || '~/google-cloud-sdk',\n          fileSystem.path('bin', binaryName)\n        ),\n    ];\n  }\n};\n\nconst gcloudBinary = () => {\n  const pathEnv = callbacks.get('env')('gcloud.binary.path');\n  const pathOption = callbacks.get('getOption')('gcloud.binary.path');\n  const userPath = pathEnv ? pathEnv : pathOption ? pathOption : '';\n\n  if (userPath) {\n    return fileSystem.normalizePath(userPath);\n  }\n\n  const candidates = gcloudCandidates('gcloud');\n\n  candidates.forEach((candidate) => {\n    if (fileSystem.fileExists(candidate())) {\n      return fileSystem.normalizePath(candidate());\n    }\n  });\n\n  return null;\n};\n\nconst gcloudIndexUpdated = async (board) => {\n  const metadata = {\n    cacheControl: 'private, max-age=0, no-transform',\n    name: 'data.txt',\n  };\n  const fetch = requests.fetch();\n  const response = await fetch(\n    `https://storage.googleapis.com/storage/v1/b/${board.bucket}./o/${data.txt}`,\n    Object.assign(\n      { method: 'PATCH', body: metadata },\n      boardDatatxtHeaders(board, 'o/data.txt', 'PATCH')\n    )\n  );\n\n  if (!response.ok) {\n    console.warning(\n      `Failed to update data.txt metadata: ${await response.text()}`\n    );\n  }\n};\n\nexport const gcloudHeaders = (board, verb, path, file) => {\n  let contentType = null;\n\n  if (file) {\n    contentType = guessType(file);\n  }\n\n  const headers = {\n    Authorization: `Bearer ${board.token}`,\n    'Content-Type': contentType,\n  };\n\n  return headers;\n};\n\nexport const boardInitializeGCloud = async (board, args) => {\n  const env = callbacks.get('env');\n  const {\n    bucket = env('GCLOUD_STORAGE_BUCKET'),\n    token = env('GOOGLE_STORAGE_ACCESS_TOKEN'),\n    cache,\n    ...params\n  } = args;\n\n  if (!bucket) throw new Error(\"Board 'gcloud' requires a 'bucket' parameter.\");\n\n  if (!token) {\n    const gcloud = gcloudBinary();\n\n    if (gcloud) {\n      token = callbacks.get('exec')(`${gcloud} 'auth', 'print-access-token'`);\n    } else {\n      throw new Error(\n        \"Board 'gcloud' requires an 'access' parameter with a Google Cloud Access Token.\"\n      );\n    }\n  }\n\n  const gcloudUrl = `https://storage.googleapis.com/${bucket}`;\n  const obj = Object.assign({}, params, {\n    name: board.name,\n    url: gcloudUrl,\n    headers: gcloudHeaders,\n    cache,\n    bucket,\n    token,\n    browse_url: `https://console.cloud.google.com/storage/browser/${bucket}`,\n    indexRandomize: true,\n    indexUpdated: gcloudIndexUpdated,\n  });\n\n  await boardInitializeDatatxt(board, obj);\n\n  return boardGet(board.name);\n};\n","import * as requests from './host/requests';\nimport * as signature from './host/signature';\nimport * as fileSystem from './host/file-system';\nimport callbacks from './host/callbacks';\nimport { boardInitializeDatatxt } from './board-datatxt';\n\nexport const dospacesHeaders = (board, verb, path, file) => {\n  const date = new Date().toUTCString();\n\n  // allow full urls to allow arbitrary file downloads\n  let space = board.space;\n\n  if (new RegExp('^https?://').test(path)) {\n    const pathNohttp = path.replace('^https?://', '');\n    const path = pathNohttp.replace('^[^/]+/', '');\n\n    space = pathNohttp.replace('\\\\..*', '');\n  }\n\n  const content = [\n    verb,\n    '',\n    'application/octet-stream',\n    date,\n    fileSystem.path(space, path),\n  ].join('\\n');\n\n  const crypto = callbacks.get('crypto');\n  const hash = crypto.HmacSHA1(content, board.secret || '');\n  const signature = hash.toString(crypto.enc.Base64);\n\n  const headers = {\n    Host: `${space}.${board.datacenter}.${board.host}`,\n    Date: date,\n    'Content-Type': 'application/octet-stream',\n    Authorization: `AWS ${board.key}:${signature}`,\n  };\n\n  return headers;\n};\n\nexport const boardInitializeDospaces = async (board, args) => {\n  const env = callbacks.get('env');\n  const {\n    space = env('DO_SPACE'),\n    key = env('DO_ACCESS_KEY_ID'),\n    secret = env('DO_SECRET_ACCESS_KEY'),\n    datacenter = env('DO_DATACENTER'),\n    cache,\n    host = 'digitaloceanspaces.com',\n    ...params\n  } = args;\n\n  if (!space)\n    throw new Error(\"The 'dospace' board requires a 'space' parameter.\");\n  if (!key) throw new Error(\"The 'dospace' board requires a 'key' parameter.\");\n  if (!secret)\n    throw new Error(\"The 'dospace' board requires a 'secret' parameter.\");\n  if (!datacenter)\n    throw new Error(\"The 'dospace' board requires a 'datacenter' parameter.\");\n\n  board.space = space;\n\n  const dospacesUrl = `https://${board.space}.${datacenter}.${host}`;\n  const obj = Object.assign({}, params, {\n    name: board.name,\n    url: dospacesUrl,\n    cache,\n    headers: dospacesHeaders,\n    key,\n    secret,\n    space,\n    datacenter,\n    browseUrl: `https://cloud.digitalocean.com/spaces/${space}`,\n    host,\n  });\n\n  await boardInitializeDatatxt(board, obj);\n\n  return boardGet(board.name);\n};\n","import * as callbacks from './callbacks';\n\nexport const getFunction = (name, packageName) => {\n  return callbacks.get('getFunction')(name, packageName);\n};\n","import * as requests from './host/requests';\n\nconst rsconnectApiAuthHeaders = (board, path, verb, content) => {\n  let headers = {};\n\n  if (rsconnectApiAuth(board)) {\n    headers.Authorization = `Key ${board.key}`;\n  } else {\n    headers = rsconnectTokenHeaders(\n      board,\n      rsconnectUrlFromPath(board, path),\n      verb,\n      content\n    );\n  }\n\n  // TODO: class(content)\n  // if (content.class !== 'form_file')\n  headers['Content-Type'] = 'application/json';\n\n  return headers;\n};\n\nexport const rsconnectApiGet = async (board, path) => {\n  const url = `${board.server}${path}`;\n\n  const fetch = requests.fetch();\n  const headers = rsconnectApiAuthHeaders(board, path, 'GET');\n  const result = await fetch(url, { headers });\n\n  if (!result.ok) {\n    throw new Error(`Failed to retrieve ${url}: ${await result.text()}`);\n  }\n\n  return await result.json();\n};\n\nexport const rsconnectApiAuth = (board) => !!board.key;\n\nexport const rsconnectApiVersion = async (board) => {\n  const { version } = await rsconnectApiGet(board, '/__api__/server_settings');\n\n  return version;\n}\n","import * as fileSystem from './host/file-system';\nimport { getFunction } from './host/getFunction';\n\nconst rsconnectTokenDependencies = () => ({\n  accounts: getFunction('accounts', 'rsconnect'),\n  accountInfo: getFunction('accountInfo', 'rsconnect'),\n  serverInfo: getFunction('serverInfo', 'rsconnect'),\n  signatureHeaders: getFunction('signatureHeaders', 'rsconnect'),\n  httpFunction: getFunction('httpFunction', 'rsconnect'),\n});\n\nconst rsconnectTokenHeaders = (board, url, verb, content) => {\n  const deps = rsconnectTokenDependencies();\n  const accountInfo = deps.accountInfo(board.account, board.serverName);\n\n  let contentFile = null;\n\n  // TODO: class(content)\n  if (content.class === 'form_file') {\n    contentFile = content.path;\n  } else if (content) {\n    // if (!is.character(content)) stop(\"Unsupported object of class\", class(content)[[1]])\n    contentFile = fileSystem.tempfile();\n    // on.exit(unlink(content_file))\n    // writeChar(content, content_file, eos = NULL, useBytes = TRUE)\n  }\n\n  deps.signatureHeaders(accountInfo, verb, url, contentFile);\n};\n\nexport const rsconnectTokenInitialize = (board) => {\n  const deps = rsconnectTokenDependencies();\n\n  if (!deps.accounts) {\n    throw new Error(\n      `RStudio Connect is not registered, please install the 'rsconnect' package or specify an API key.`\n    );\n  }\n\n  const accounts = deps.accounts();\n\n  if (!accounts) {\n    throw new Error(\n      'RStudio Connect is not registered, please add a publishing account or specify an API key.'\n    );\n  }\n\n  if (!board.server) {\n    board.serverName = accounts.server[1];\n  }\n\n  if (!board.account) {\n    board.account = accounts[accounts.server === board.serverName].name;\n  }\n\n  if (board.account.length !== 1) {\n    throw new Error(\n      `Multiple accounts (${board.account.join(\n        ', '\n      )}) are associated to this server, please specify the correct account parameter in board_register().`\n    );\n  }\n\n  // always use the url from rstudio to ensure redirects work properly even when the full path is not specified\n  board.server = deps.serverInfo(board.serverName).url.replace('/__api__', '');\n\n  return board;\n};\n","import * as fileSystem from './host/file-system';\nimport callbacks from './host/callbacks';\nimport { getFunction } from './host/getFunction';\nimport { pinLog } from './log';\nimport { boardVersionsEnabled } from './versions';\nimport {\n  rsconnectApiAuth,\n  rsconnectApiVersion,\n  rsconnectApiGet,\n} from './board-rsconnect-api';\nimport { rsconnectTokenInitialize } from './board-rsconnect-token';\n\nconst rsconnectDependencies = () => ({\n  outputMetadata: getFunction('output_metadata', 'rmarkdown'),\n});\n\nconst rsconnectPinsSupported = async (board) => {\n  const version = await rsconnectApiVersion(board);\n\n  return version > '1.7.7';\n};\n\nexport const boardInitializeRSConnect = async (board, args) => {\n  const env = callbacks.get('env');\n  const envvarKey = env('CONNECT_API_KEY') || env('RSCONNECT_API');\n\n  if (!args.key && envvarKey) {\n    args.key = envvarKey;\n  }\n\n  const envvarServer = env('CONNECT_SERVER') || env('RSCONNECT_SERVER');\n\n  if (!args.server && envvarServer) {\n    args.server = envvarServer;\n  }\n\n  if (args.server) {\n    board.server = args.server.replace('/$', '');\n    board.serverName = args.server.replace('https?://|(:[0-9]+)?/.*', '');\n  }\n\n  board.account = args.account;\n  board.outputFiles = args.outputFiles;\n\n  if (!args.key) {\n    throw new Error('Invalid API key, the API key is empty.');\n  }\n\n  board.key = args.key;\n\n  if (board.key && !board.server) {\n    throw new Error(\n      `Please specify the 'server' parameter when using API keys.`\n    );\n  }\n\n  if (!rsconnectApiAuth(board) && !board.outputFiles) {\n    board = rsconnectTokenInitialize(board);\n  }\n\n  try {\n    board.pinsSupported = await rsconnectPinsSupported(board);\n  } catch (e) {\n    board.pinsSupported = false;\n  }\n\n  if (!board.account) {\n    const { username } = await rsconnectApiGet(board, '/__api__/users/current/');\n\n    board.account = username;\n  }\n\n  return board;\n};\n\nexport const boardPinCreateRSConnect = (board, args) => {\n  let { path, name, metadata, code, ...dots } = args;\n\n  /*access_type <- if (!is.null(access_type <- dots[[\"access_type\"]])) {\n    match.arg(access_type, c(\"acl\", \"logged_in\", \"all\"))\n  } else {\n    NULL\n  }*/\n\n  const tempDir = fileSystem.path(fileSystem.tempfile(), name);\n\n  fileSystem.dir.create(tempDir, { recursive: true });\n  // on.exit(unlink(tempDir, { recursive: true }));\n\n  const xPath = fileSystem.dirname(path, 'data\\\\.rds');\n\n  // const x = xPath === 'data.rds' ? readRDS(xPath) : path;\n  let nameQualified = '';\n\n  if (new RegExp('/').test(name)) {\n    nameQualified = name;\n    name = nameQualified.replace('.*/', '');\n  } else {\n    nameQualified = `${board.account}/${name}`;\n  }\n\n  let accountName = board.account;\n\n  if (board.outputFiles) {\n    accountName = 'https://rstudio-connect-server/content/app-id';\n  }\n\n  fileSystem.copy(fileSystem.dirname(path), tempDir);\n\n  let dataFiles = null;\n\n  try {\n    // dataFiles = rsconnectBundleCreate(x, tempDir, name, board, accountName, code);\n  } catch (_) {}\n\n  // handle unexepcted failures gracefully\n  if (!dataFiles) {\n    console.warning('Falied to create preview files for pin.');\n    unlink(tempDir, { recursive: true });\n    fileSystem.dir.create(tempDir, { recursive: true });\n    fileSystem.copy(fileSystem.dirname(path), tempDir);\n\n    // dataFiles = rsconnectBundleCreateDefault(x, tempDir, name, board, accountName);\n  }\n\n  const rsconnectIsAuthenticated = (board) => board.key || board.account;\n\n  if (board.outputFiles) {\n    const deps = rsconnectDependencies();\n    const knitPinDir = fileSystem.path(name);\n\n    // fileSystem.copy(tempDir, getwd(), { recursive: true });\n\n    deps.outputMetadata.set({\n      rscOutputFiles: fileSystem.path(\n        knitPinDir,\n        fileSystem.dirname(knitPinDir)\n      ),\n    });\n  } else {\n    let previous_versions = null;\n\n    const existing = {}; // rsconnectGetByName(board, nameQualified);\n\n    let content = {};\n    let guid = null;\n\n    if (!existing.length) {\n      /*\n      const content = rsconnectApiPost(board, '/__api__/v1/experimental/content', {\n        appMode: 'static',\n        contentCategory: 'pin',\n        name,\n        description: boardMetadataToText(metadata, metadata.description),\n      });\n      */\n\n      if (content.error) {\n        pinLog(`Failed to create pin with name '${name}.`);\n        throw new Error(`Failed to create pin ${content.error}`);\n      }\n\n      guid = content.guid;\n    } else {\n      guid = existing.guid;\n\n      // when versioning is turned off we also need to clean up previous bundles so we store the current versions\n      if (!boardVersionsEnabled(board, true)) {\n        // previousVersions = boardPinVersions(board, nameQualified);\n      }\n\n      /*\n      content = rsconnectApiPost(board, `/__api__/v1/experimental/content/${guid}`, {\n        appMode: 'static',\n        contentCategory: 'pin',\n        name,\n        description: boardMetadataToText(metadata, metadata.description),\n        accessType,\n      });\n      */\n\n      if (content.error) {\n        pinLog(`Failed to update pin with GUID '${guid}' and name '${name}'.`);\n        throw new Error(`Failed to create pin ${content.error}`);\n      }\n    }\n\n    const files = fileSystem.dir\n      .list(tempDir, { recursive: true, fullNames: true })\n      .map((path) => ({\n        // checksum: rsconnectBundleFileMd5(path),\n      }));\n\n    // names(files) = dir(tempDir, { recursive: true });\n\n    const manifest = {\n      version: 1,\n      locale: 'en_US',\n      platform: '3.5.1',\n      metadata: {\n        appmode: 'static',\n        primaryRmd: null,\n        primaryHtml: 'index.html',\n        contentCategory: 'pin',\n        hasParameters: false,\n      },\n      packages: null,\n      files,\n      users: null,\n    };\n\n    // bundle = rsconnectBundleCompress(tempDir, manifest);\n\n    const upload = {};\n    /*\n    const upload = rsconnectApiPost(\n      board,\n      `/__api__/v1/experimental/content/${guid}/upload,\n      httr::upload_file(fileSystem.normalizePath(bundle)\n    );\n    */\n    // TODO:\n    // progress = http_utils_progress(\"up\", size = file.info(normalizePath(bundle))$size)\n\n    if (upload.error) {\n      // before we fail, clean up rsconnect content\n      rsconnectApiDelete(board, `/__api__/v1/experimental/content/${guid}`);\n      throw new Error(`Failed to upload pin ${upload.error}`);\n    }\n\n    const result = {};\n    /*\n    let result = rsconnectApiPost(\n      board,\n      `/__api__/v1/experimental/content/${guid}/deploy`,\n      { bundleId: upload.bundleId }\n    );\n    */\n\n    if (result.error) {\n      throw new Error(`Failed to activate pin ${result.error}`);\n    }\n\n    // it might take a few seconds for the pin to register in rsc, see travis failures, wait 5s\n    // result = rsconnectWaitByName(board, nameQualified);\n\n    // when versioning is turned off we also need to clean up previous bundles\n    if (!boardVersionsEnabled(board, true) && previousVersions) {\n      for (let idx = 1; idx < previousVersions.length; idx++) {\n        const deleteVersion = previousVersions[idx];\n        const deletePath = `/__api__/v1/experimental/bundles/${deleteVersion.version}`;\n\n        pinLog(`Deleting previous version ${deletePath}.`);\n        // rsconnectApiDelete(board, deletePath);\n      }\n    }\n\n    return result;\n  }\n};\n","// This will parse a delimited string into an array of\n// arrays. The default delimiter is the comma, but this\n// can be overriden in the second argument.\nexport function readCsv(strData, strDelimiter) {\n  // Check to see if the delimiter is defined. If not,\n  // then default to comma.\n  strDelimiter = strDelimiter || ',';\n\n  // Create a regular expression to parse the CSV values.\n  var objPattern = new RegExp(\n    // Delimiters.\n    '(\\\\' +\n      strDelimiter +\n      '|\\\\r?\\\\n|\\\\r|^)' +\n      // Quoted fields.\n      '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' +\n      // Standard fields.\n      '([^\"\\\\' +\n      strDelimiter +\n      '\\\\r\\\\n]*))',\n    'gi'\n  );\n\n  // Create an array to hold our data. Give the array\n  // a default empty first row.\n  var arrData = [[]];\n\n  // Create an array to hold our individual pattern\n  // matching groups.\n  var arrMatches = null;\n\n  // Keep looping over the regular expression matches\n  // until we can no longer find a match.\n  while ((arrMatches = objPattern.exec(strData))) {\n    // Get the delimiter that was found.\n    var strMatchedDelimiter = arrMatches[1];\n\n    // Check to see if the given delimiter has a length\n    // (is not the start of string) and if it matches\n    // field delimiter. If id does not, then we know\n    // that this delimiter is a row delimiter.\n    if (strMatchedDelimiter.length && strMatchedDelimiter != strDelimiter) {\n      // Since we have reached a new row of data,\n      // add an empty row to our data array.\n      arrData.push([]);\n    }\n\n    // Now that we have our delimiter out of the way,\n    // let's check to see which kind of value we\n    // captured (quoted or unquoted).\n    if (arrMatches[2]) {\n      // We found a quoted value. When we capture\n      // this value, unescape any double quotes.\n      var strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"');\n    } else {\n      // We found a non-quoted value.\n      var strMatchedValue = arrMatches[3];\n    }\n\n    // Now that we have our value string, let's add\n    // it to the data array.\n    arrData[arrData.length - 1].push(strMatchedValue);\n  }\n\n  // Return the parsed data.\n  return arrData;\n}\n","import * as fileSystem from './host/file-system';\nimport { pinLog } from './log';\n\nexport const pinsShowProgress = (opts = { size: 0 }) => {\n  var { size } = opts;\n  if (typeof size === 'string') size = parseInt(size);\n\n  var largeFile = getOption('pins.progress.size', 10 ^ 7);\n  identical(getOption('pins.progress', size > largeFile), true) &&\n    interactive();\n};\n\nexport const pinsSaveCsv = (x, name) => {\n  if (x.length > 0) {\n    const columns = Object.keys(x[0]).join(',');\n    fileSystem.writeLines(name, columns);\n  }\n\n  const rows = x.map((row) => {\n    return Object.keys(row)\n      .map((key) => row[key])\n      .join(',');\n  });\n\n  fileSystem.writeLines(name, rows);\n};\n\nexport const pinsSafeCsv = (x, name) => {\n  try {\n    return pinsSaveCsv(x, name);\n  } catch (e) {\n    pinLog('Failed to save data frame as CSV file: ' + e);\n  }\n};\n","export * from './board';\nexport * from './pin';\n\nimport callbacks from './host/callbacks';\nexport { callbacks };\n\nimport * as pinDefault from './pin-default';\nimport * as inheritance from './utils/inheritance';\n\nimport * as boardExtensions from './board-extensions';\nimport * as boardLocal from './board-local';\nimport * as boardDatatxt from './board-datatxt';\nimport * as boardS3 from './board-s3';\nimport * as boardAzure from './board-azure';\nimport * as boardGCloud from './board-gcloud';\nimport * as boardDospaces from './board-dospaces';\nimport * as boardRSConnect from './board-rsconnect';\n\nexport * from './board-s3';\nexport * from './board-azure';\nexport * from './board-gcloud';\nexport * from './board-dospaces';\n\nimport { pinString } from './pin-file';\nimport { pinLoadFiles } from './pin-files';\nimport { pinDataFrame, pinLoadTable } from './pin-dataframe';\n\ninheritance.registerMethod('pin', 'default', pinDefault.pinDefault);\ninheritance.registerMethod('pin', 'string', pinString);\ninheritance.registerMethod('pin', 'dataframe', pinDataFrame);\n\ninheritance.registerMethod('pinPreview', 'default', pinDefault.pinPreviewDefault);\ninheritance.registerMethod('pinLoad', 'default', pinDefault.pinLoadDefault);\ninheritance.registerMethod('pinFetch', 'default', pinDefault.pinFetchDefault);\n\ninheritance.registerMethod('pinLoad', 'files', pinLoadFiles);\ninheritance.registerMethod('pinLoad', 'table', pinLoadTable);\n\ninheritance.registerMethod('boardBrowse', 'default', boardExtensions.boardBrowseDefault);\ninheritance.registerMethod('boardPinVersions', 'default', boardExtensions.boardPinVersionsDefault);\ninheritance.registerMethod('boardInitialize', 'default', boardExtensions.boardInitializeDefault);\n\ninheritance.registerMethod('boardInitialize', 'local', boardLocal.boardInitializeLocal);\ninheritance.registerMethod('boardPinCreate', 'local', boardLocal.boardPinCreateLocal);\ninheritance.registerMethod('boardPinFind', 'local', boardLocal.boardPinFindLocal);\ninheritance.registerMethod('boardPinGet', 'local', boardLocal.boardPinGetLocal);\ninheritance.registerMethod('boardPinRemove', 'local', boardLocal.boardPinRemoveLocal);\ninheritance.registerMethod('boardPinVersions', 'local', boardLocal.boardPinVersionsLocal);\n\ninheritance.registerMethod('boardInitialize', 'datatxt', boardDatatxt.boardInitializeDatatxt);\ninheritance.registerMethod('boardPinCreate', 'datatxt', boardDatatxt.boardPinCreateDatatxt);\ninheritance.registerMethod('boardPinFind', 'datatxt', boardDatatxt.boardPinFindDatatxt);\ninheritance.registerMethod('boardPinGet', 'datatxt', boardDatatxt.boardPinGetDatatxt);\ninheritance.registerMethod('boardPinRemove', 'datatxt', boardDatatxt.boardPinRemoveDatatxt);\ninheritance.registerMethod('boardPinVersions', 'datatxt', boardDatatxt.boardPinVersionsDatatxt);\n\ninheritance.registerMethod('boardInitialize', 's3', boardS3.boardInitializeS3);\ninheritance.registerMethod('boardPinCreate', 's3', boardDatatxt.boardPinCreateDatatxt);\ninheritance.registerMethod('boardPinFind', 's3', boardDatatxt.boardPinFindDatatxt);\ninheritance.registerMethod('boardPinGet', 's3', boardDatatxt.boardPinGetDatatxt);\ninheritance.registerMethod('boardPinRemove', 's3', boardDatatxt.boardPinRemoveDatatxt);\ninheritance.registerMethod('boardPinVersions', 's3', boardDatatxt.boardPinVersionsDatatxt);\n\ninheritance.registerMethod('boardInitialize', 'azure', boardAzure.boardInitializeAzure);\ninheritance.registerMethod('boardInitialize', 'gcloud', boardGCloud.boardInitializeGCloud);\ninheritance.registerMethod('boardInitialize', 'dospaces', boardDospaces.boardInitializeDospaces);\n\ninheritance.registerMethod('boardInitialize', 'rsconnect', boardRSConnect.boardInitializeRSConnect);\n\n","import * as checks from './utils/checks';\nimport { pinDefaultName } from './utils/pin-utils';\nimport { readCsv } from './utils/csv';\nimport * as fileSystem from './host/file-system';\nimport { onExit } from './utils/onexit';\nimport { pinsSafeCsv } from './utils';\nimport { dfColNames } from './utils/dataframe';\nimport { boardPinStore } from './pin-extensions';\n\nexport const pinDataFrame = (\n  x,\n  opts = { name: null, description: null, board: null }\n) => {\n  var { name, description, board, ...args } = opts;\n  if (checks.isNull(name)) name = pinDefaultName(x, board);\n\n  var path = fileSystem.tempfile();\n  fileSystem.dir.create(path);\n\n  fileSystem.write(JSON.stringify(x), fileSystem.path(path, 'data.json'));\n\n  pinsSafeCsv(x, fileSystem.path(path, 'data.csv'));\n\n  return onExit(\n    () => unlink(path),\n    () => {\n      const columns = dfColNames(x);\n      const metadata = {\n        rows: x.length,\n        cols: columns.length,\n        columns: columns,\n      };\n\n      return boardPinStore(\n        board,\n        Object.assign(\n          {},\n          {\n            name,\n            description,\n            path: path,\n            type: 'table',\n            metadata: [],\n          },\n          ...args\n        )\n      );\n    }\n  );\n};\n\nexport const pinLoadTable = (path, ...args) => {\n  var json = fileSystem.path(path, 'data.json');\n  var csv = fileSystem.path(path, 'data.csv');\n  var result = null;\n\n  if (fileSystem.fileExists(json)) {\n    result = JSON.parse(fileSystem.readLines(json).join('\\n\\r'));\n  } else if (fileSystem.fileExists(csv)) {\n    result = readCsv(\n      fileSystem\n        .readLines(csv)\n        .filter((l) => l)\n        .join('\\n')\n    );\n  } else {\n    throw new Error(\"A 'table' pin requires CSV or JSON files.\");\n  }\n\n  return result;\n};\n\nexport const pinFetchTable = (path, ...args) => {\n  rds_match = grepl('.*.rds', path);\n  fetch_all = identical(getOption('pins.fetch', 'auto'), 'all');\n  if (any(rds_match) && !fetch_all) return path[rds_match];\n  else return path;\n};\n\nexport const pinPreviewDataFrame = (x, opts = { board: null }) => {\n  const { board, ...args } = opts;\n  utils.head(x, (n = getOption('pins.preview', 10 ^ 3)));\n};\n","import * as fileSystem from './host/file-system';\n\nexport const pinLoadFiles = function (path, { ...args }) {\n  var files = fileSystem.dir.list(path, { recursive: true, fullNames: true });\n\n  var result = files.filter((e) => !/data\\.txt$/g.test(e));\n\n  return result;\n};\n\nexport const pinPreviewFiles = function (x, { board = null, ...args }) {\n  dataFrame(x, { files: 'character' });\n};\n"],"names":["const","HOST_CALLBACKS","get","name","Object","keys","includes","callback","isNull","obj","getOption","defval","option","callbacks.get","checks.isNull","concat","arr","value","ensure","Array","isArray","getOnly","length","Error","maybeOne","uiViewerRegister","board","boardCall","uiViewerUpdated","BOARDS_REGISTERED","list","boardCachePath","options.getOption","callbacks","tempfile","basename","filePath","readLines","writeLines","content","dir","freeze","create","dirPath","recursive","exists","arrays.getOnly","remove","arrays.ensure","map","e","zip","zipfile","commonPath","tools","filePathSansExt","replace","fileExt","match","write","object","path","read","path1","path2","normalizePath","winslash","mustWork","dirname","fileExists","copy","from","to","fileSize","md5","str","key","dataFrame","data","columns","df","dfIsDataFrame","isDataFrame","idxRow","boardDefault","boardLocalStorage","componentPath","fileSystem.path","fileSystem.dir","fileSystem.normalizePath","onExit","error","result","args","err","idx","pinLog","join","pinDebug","method","params","JSON","stringify","isNothing","subject","sequence","string","count","cycle","number","Number","NEGATIVE_INFINITY","target","source","index","sourceKeys","YAMLException","reason","mark","call","this","message","toString","captureStackTrace","constructor","stack","prototype","compact","Mark","buffer","position","line","column","getSnippet","indent","maxLength","head","start","tail","end","snippet","indexOf","charAt","slice","common","repeat","where","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","tag","options","forEach","kind","resolve","construct","instanceOf","predicate","represent","defaultStyle","styleAliases","style","alias","String","compileStyleAliases","compileList","schema","exclude","include","includedSchema","currentType","previousType","previousIndex","push","filter","type","Schema","definition","implicit","explicit","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","scalar","mapping","fallback","collectType","arguments","compileMap","DEFAULT","schemas","types","toArray","every","Type","max","canonical","lowercase","uppercase","camelcase","isOctCode","c","isDecCode","ch","hasDigits","charCodeAt","test","base","sign","digits","parseInt","split","v","unshift","d","isNegativeZero","binary","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","RegExp","SCIENTIFIC_WITHOUT_DOT","require$$0","require$$1","require$$2","require$$3","toLowerCase","POSITIVE_INFINITY","NaN","parseFloat","res","isNaN","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","exec","year","month","day","hour","minute","second","date","fraction","delta","Date","UTC","setTime","getTime","toISOString","NodeBuffer","require","Buffer","__","BASE64_MAP","code","bitlen","tailbits","input","bits","isBuffer","_hasOwnProperty","hasOwnProperty","_toString","pair","pairKey","pairHasKey","objectKeys","require$$4","require$$5","esprima","regexp","modifiers","global","multiline","ignoreCase","_","window","ast","parse","range","body","expression","param","Function","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","i","State","filename","DEFAULT_FULL_SCHEMA","onWarning","legacy","json","listener","implicitTypes","typeMap","lineStart","lineIndent","documents","generateError","state","throwError","throwWarning","directiveHandlers","YAML","major","minor","version","checkLineBreaks","TAG","handle","prefix","tagMap","captureSegment","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","isObject","storeMappingPair","keyTag","keyNode","valueNode","startLine","startPos","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_tag","_anchor","anchor","detected","anchorMap","composeNode","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_pos","atExplicitKey","readBlockMapping","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","tmp","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","readAlias","withinFlowCollection","hasPendingContent","_lineStart","_lineIndent","_kind","readPlainScalar","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","loadAll","iterator","load","output","extend","DEFAULT_SAFE_SCHEMA","ESCAPE_SEQUENCES","0","7","8","9","10","11","12","13","27","34","92","133","160","8232","8233","DEPRECATED_BOOLEANS_SYNTAX","encodeHex","character","Math","noArrayIndent","skipInvalid","flowLevel","styleMap","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","level","isWhitespace","isPrintable","isPlainSafe","needIndentIndicator","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","dump","min","testImplicitResolving","blockHeader","dropEndingNewline","width","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","foldString","nextChar","escapeSeq","escapeString","indentIndicator","clip","breakRe","curr","detectType","typeList","writeNode","block","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","sort","writeBlockMapping","writeFlowMapping","arrayLevel","writeBlockSequence","writeFlowSequence","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","deprecated","require$$6","loader","safeLoad","safeLoadAll","dumper","safeDump","require$$7","pinResultsFromRows","entries","resultsField","field","def","rows","row","fileSystem.basename","description","dict","removes","assign","dictRemove","tryCatchNull","expr","tryCatch","pinRegistryConfig","pinRegistryLoadEntries","lock","pinRegistryLock","pinRegistryUnlock","entriesPath","fileSystem.fileExists","let","yamlText","fileSystem.readLines","yaml","pinRegistrySaveEntries","fileSystem.writeLines","pinStoragePath","pinRegistryUpdate","pinRegistryQualifyName","names","findIndex","pinRegistryRetrieve","find","namePattern","paste0","nameCandidate","timeout","fileSystem.lockFile","Infinity","fileSystem.unlockFile","pinRegistryRelative","basePath","startsWith","substr","pinRegistryAbsolute","pinResetCache","sanitizedName","errors.tryCatchNull","cache","pinManifestGet","manifest","dataTxt","pinManifestCreate","metadata","files","prop","list.removeNulls","pinManifestMerge","baseManifest","resourceManifest","pinVersionsPathName","pinVersionsPath","storagePath","hashFiles","fullNames","versionPath","f","signature.md5","pinVersionSignature","boardVersionsCreate","versions","defaultValue","boardVersionsEnabled","versionRelative","some","fileSystem.copy","pinManifestUpdate","boardVersionsGet","boardVersionsShorten","shortened","boardVersionsExpand","versionIndex","METHODS","DEFAULT_CLASS_NAME","initializeMethod","methodName","className","class","registerMethod","useMethodAsync","init","then","useMethod","boardPinCreate","boardInitialize","boardPinGet","boardInfer","x","inferred","connect","url","registerCall","boardConnect","boardGet","ui.uiViewerRegister","boardDisconnect","ui.uiViewerClose","boardList","defaults","arrays.concat","boards","boardRegistry.list","self","boardInferred","boardRegister","boardRegistry.get","$await_2","newBoard","$await_3","boardRegistry.set","boardRegisterCode","pinGet","boardPinGetOrNull","$await_16","boardName","extract","$await_17","$await_18","resultFiles","signature","pin_signature","arrays.maybeOne","pinLoad","_content","pinFind","text","fullName","parts","pop","pinSplitOwner","allPins","boardIdx","boardObject","boardPins","extended","df1","df2","left","cols","r2","r1","boardPinFind","$await_19","col","old","dfColRemove","a","b","BoardName","kaggle","pinDefaultName","sanitized","pinsMergeCustomMetadata","customMetadata","l","fixedFields","entry","fixedColumnnFields","foundIdx","metadata$columns","fieldName","fetch","pinDownloadOne","subpath","requests.fetch","mustDownload","localPath","component","download","fileSystem.tempfile","oldPin","pinRegistryRetrieveMaybe","oldCache","oldCacheMissing","cacheIndex","cacheUrls","k","u","etag","maxAge","changeAge","details","somethingChanged","customEtag","headers","headResult","$await_5","cacheControl","pinFileCacheMaxAge","contentLength","etagChanged","downloadName","destinationPath","response","ok","$await_6","fileSystem.write","$await_7","newCache","file","overwrite","relativePath","pinDownload","$await_8","boardPinStore","opts","retrieve","boardInstance","fun","arrays.vectorize","pinPath","storePath","unlink","datatxtPath","findCommonPath","arrays.all","fileSystem.dirname","common_path","singlePath","idxPath","canFail","opt","copyOrLink","fileSystem.fileSize","pinManifestExists","boardDatatxtHeaders","verb","boardManifestGet","defaultEmpty","boardManifestLoad","datatxtRefreshIndex","indexFile","indexRandomize","round","random","indexUrl","localIndex","currentIndex","newIndex","newEntry","currentEntry","ci","datatxtPinDownloadInfo","needsIndex","indexEntry","pathGuess","datatxtRefreshManifest","downloadPath","datatxtUploadFiles","uploadUrl","$await_9","datatxtUpdateIndex","indexFileGet","getResponse","$await_10","$await_11","operation","indexMatches","indexPos","boardManifestCreate","normalizedFile","putResponse","$await_12","indexUpdated","$await_13","boardInitializeDatatxt","browseUrl","bucket","rest","boardPinGetDatatxt","manifestPaths","pinManifest","pinFetch","pinManifestDownload","Regexp","boardPinFindDatatxt","results","stringsAsFactors","agrs","$await_20","pinMetadata","$await_21","boardPinCreateDatatxt","versions.boardVersionsCreate","uploadFiles","boardPinRemoveDatatxt","datatxtPinFiles","deleteUrl","$await_24","console","warning","$await_25","boardPinVersionsDatatxt","versions.boardVersionsGet","s3Headers","toUTCString","pathNohttp","crypto","HmacSHA1","secret","enc","Base64","Host","x-amz-date","Content-Type","Authorization","boardInitializeS3","env","host","guessType","azureHeaders","azureVersion","container","account","subPath","contentType","x-ms-date","x-ms-version","x-ms-blob-type","boardInitializeAzure","azureUrl","gcloudBinary","pathEnv","pathOption","userPath","which","appdata","sdkPath","binaryName","gcloudCandidates","candidate","gcloudIndexUpdated","gcloudHeaders","boardInitializeGCloud","token","gcloud","gcloudUrl","browse_url","dospacesHeaders","space","boardInitializeDospaces","datacenter","dospacesUrl","getFunction","packageName","rsconnectApiGet","rsconnectApiAuth","rsconnectTokenHeaders","rsconnectUrlFromPath","rsconnectApiAuthHeaders","rsconnectTokenInitialize","deps","accounts","accountInfo","serverInfo","signatureHeaders","httpFunction","server","serverName","rsconnectPinsSupported","rsconnectApiVersion","$await_4","readCsv","strData","strDelimiter","objPattern","arrData","arrMatches","strMatchedDelimiter","strMatchedValue","pinsSafeCsv","pinsSaveCsv","paths","extension","fileSystem.tools","fileSystem.read","csv","finalPath","registry.pinStoragePath","toDelete","registry.pinRegistryUpdate","registry.pinRegistryRelative","registry.pinRegistryFind","registry.pinRegistryAbsolute","merged","registry.pinRegistryRetrievePath","versions.boardVersionsExpand","removePath","registry.pinRegistryRemove","boardDatatxt.boardInitializeDatatxt","boardDatatxt.boardPinCreateDatatxt","boardDatatxt.boardPinFindDatatxt","boardDatatxt.boardPinGetDatatxt","boardDatatxt.boardPinRemoveDatatxt","boardDatatxt.boardPinVersionsDatatxt","boardS3.boardInitializeS3","boardAzure.boardInitializeAzure","boardGCloud.boardInitializeGCloud","boardDospaces.boardInitializeDospaces","envvarKey","envvarServer","outputFiles","username","pinsSupported","disconnect","boardRegistry.remove","$await_14","$await_22","pinGetOne","$await_23","entryExt","boardPinRemove","boardPinVersions","full"],"mappings":"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"}