{"version":3,"file":"pins.min.js","sources":["../src/host/callbacks.js","../src/utils/checks.js","../src/host/options.js","../src/utils/arrays.js","../src/board-registry.js","../src/board-registration.js","../src/host/appdirs.js","../src/host/file-system.js","../src/utils/dataframe.js","../src/versions.js","../src/board-default.js","../src/board-storage.js","../src/utils/onexit.js","../src/log.js","../node_modules/js-yaml/lib/js-yaml/common.js","../node_modules/js-yaml/lib/js-yaml/exception.js","../node_modules/js-yaml/lib/js-yaml/mark.js","../node_modules/js-yaml/lib/js-yaml/type.js","../node_modules/js-yaml/lib/js-yaml/schema.js","../node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","../node_modules/js-yaml/lib/js-yaml/type/str.js","../node_modules/js-yaml/lib/js-yaml/type/seq.js","../node_modules/js-yaml/lib/js-yaml/type/map.js","../node_modules/js-yaml/lib/js-yaml/type/null.js","../node_modules/js-yaml/lib/js-yaml/type/bool.js","../node_modules/js-yaml/lib/js-yaml/type/int.js","../node_modules/js-yaml/lib/js-yaml/type/float.js","../node_modules/js-yaml/lib/js-yaml/schema/json.js","../node_modules/js-yaml/lib/js-yaml/schema/core.js","../node_modules/js-yaml/lib/js-yaml/type/timestamp.js","../node_modules/js-yaml/lib/js-yaml/type/merge.js","../node_modules/js-yaml/lib/js-yaml/type/binary.js","../node_modules/js-yaml/lib/js-yaml/type/omap.js","../node_modules/js-yaml/lib/js-yaml/type/pairs.js","../node_modules/js-yaml/lib/js-yaml/type/set.js","../node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","../node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","../node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","../node_modules/js-yaml/lib/js-yaml/type/js/function.js","../node_modules/js-yaml/lib/js-yaml/schema/default_full.js","../node_modules/js-yaml/lib/js-yaml/loader.js","../node_modules/js-yaml/lib/js-yaml/dumper.js","../node_modules/js-yaml/lib/js-yaml.js","../src/pin-tools.js","../src/utils/dict.js","../src/pin-registry.js","../src/utils/errors.js","../src/pin-manifest.js","../src/utils/list.js","../src/utils/inheritance.js","../src/board-extensions.js","../src/board.js","../src/pin.js","../src/utils/pin-utils.js","../src/pins-metadata.js","../src/utils/const.js","../src/pin-extensions.js","../src/ui-viewer.js","../src/utils.js","../src/main.js","../src/pin-default.js","../src/pin-file.js","../src/pin-dataframe.js","../src/pin-files.js","../src/board-local.js"],"sourcesContent":["const HOST_CALLBACKS = {};\n\nexport const get = (name) => {\n  if (Object.keys(HOST_CALLBACKS).includes(name)) return HOST_CALLBACKS[name];\n  else return (...args) => null;\n};\n\nexport const set = (name, callback) => {\n  HOST_CALLBACKS[name] = callback;\n};\n\nexport default {\n  get,\n  set,\n};\n","export const isNull = (obj) => {\n  return obj === null || typeof obj === 'undefined';\n};\n\nexport const isDataFrame = (x) => {\n  return typeof x['class'] !== undefined && x['class'] === 'dataframe';\n};\n","import * as callbacks from './callbacks';\nimport * as checks from '../utils/checks';\n\nexport const getOption = (name, defval) => {\n  var option = callbacks.get('getOption')(name);\n  return !checks.isNull(option) ? option : defval;\n};\n","export const unique = (arr) => {\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  return arr.filter(onlyUnique);\n};\n\nexport const concat = (arr, value) => {\n  if (value !== null) {\n    arr = arr.concat(value);\n  }\n\n  return arr;\n};\n\nexport const vectorize = (func) => {\n  return function (x, ...args) {\n    var result = [];\n    for (var idx = 0; idx > x.length; idx++) {\n      result.push(fun(x[idx], ...args));\n    }\n\n    return result;\n  };\n};\n\nexport const ensure = (obj) => {\n  if (!Array.isArray(obj)) {\n    return [obj];\n  } else {\n    return obj;\n  }\n};\n\n// Retrieves the only element in an array\nexport const getOnly = (obj) => {\n  if (Array.isArray(obj)) {\n    if (obj.length == 1) {\n      obj = obj[0];\n    } else {\n      throw new Error('Array has more than one element but expecting only one');\n    }\n  }\n\n  return obj;\n};\n\n// Retrieves the element of the array when only one element is available\nexport const maybeOne = (obj) => {\n  if (Array.isArray(obj) && obj.length == 1) {\n    return obj[0];\n  }\n\n  return obj;\n};\n","const BOARDS_REGISTERED = {};\n\nexport const list = () => Object.keys(BOARDS_REGISTERED);\n\nexport const get = (name) => BOARDS_REGISTERED[name];\n\nexport const set = (name, board) => {\n  BOARDS_REGISTERED[name] = board;\n};\n","import * as appdirs from './host/appdirs';\nimport * as options from './host/options';\n\nexport const boardCachePath = () => {\n  return options.getOption('pins.path', appdirs.userCacheDir('pins'));\n};\n","import callbacks from './callbacks';\n\nexport const userCacheDir = () => {\n  return callbacks.get('userCacheDir')('pins');\n};\n","import callbacks from './callbacks';\nimport * as arrays from '../utils/arrays';\n\nexport const tempfile = () => callbacks.get('tempfile')();\nexport const basename = (filePath) => callbacks.get('basename')(filePath);\nexport const readLines = (filePath) => callbacks.get('readLines')(filePath);\nexport const writeLines = (filePath, content) =>\n  callbacks.get('writeLines')(filePath, content);\n\nexport const dir = Object.freeze({\n  create(dirPath, { recursive } = { recursive: false }) {\n    return callbacks.get('dirCreate')(dirPath);\n  },\n  exists(dirPath) {\n    return callbacks.get('dirExists')(dirPath);\n  },\n  list(dirPath, ...args) {\n    return callbacks.get('dirList')(arrays.getOnly(dirPath));\n  },\n  remove(dirPath, ...args) {\n    dirPath = arrays.ensure(dirPath);\n    return dirPath.map((e) => callbacks.get('dirRemove')(dirPath));\n  },\n  zip(dirPath, zipfile, ...ags) {\n    return callbacks.get('dirZip')(dirPath, dirPath);\n  },\n});\n\nexport const tools = Object.freeze({\n  filePathSansExt(filePath) {\n    return filePath.replace(/\\.[^/.]+$/, '');\n  },\n  fileExt(filePath) {\n    return filePath.match(/\\.[^/.]+$/, '')[0];\n  },\n});\n\nexport const write = (object, path) => {\n  return callbacks.get('fileWrite')(object, path);\n};\n\nexport const read = (path) => {\n  return callbacks.get('fileRead')(path);\n};\n\nexport const path = (path1, path2) => {\n  return callbacks.get('filePath')(path1, path2);\n};\n\nexport const normalizePath = (\n  path,\n  { winslash, mustWork } = { winslash: '\\\\', mustWork: false }\n) => {\n  return path;\n};\n\nexport const absolutePath = (path) => path;\n\nexport const lockFile = (path, timeout) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const unlockFile = (path) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const fileExists = (path) => {\n  return callbacks.get('fileExists')(path);\n};\n\nexport const copy = (from, to, { recursive } = { recursive: true }) => {\n  return callbacks.get('fileCopy')(from, to, recursive);\n};\n\nexport const createLink = (from, to) => {\n  return callbacks.get('createLink')(path);\n};\n\nexport const fileSize = (path) => {\n  return callbacks.get('fileSize')(path);\n};\n","import * as checks from './checks';\n\n// TODO remove(column)\n// TODO order((e) => ())\n\nexport const dataFrame = (data, columns) => {\n  var df = [];\n  if (!checks.isNull(data)) {\n    df = data;\n  }\n\n  df.columns = columns;\n  return df;\n};\n\nexport const dfColNames = (df) => {\n  if (df.hasOwnProperty('columns')) return Object.keys(df['columns']);\n  if (df.length > 0) return Object.keys(df[0]);\n  return [];\n};\n\nexport const dfFromColumns = (cols) => {\n  return cols[0].map((row, idx) => {\n    var row = {};\n    for (var col in cols) {\n      row[cols[col]] = cols[col][idx];\n    }\n    return row;\n  });\n};\n\nexport const dfCBind = (df1, df2) => {\n  var rows = df1.map((left, idx) => {\n    var row = {};\n    Object.assign(row, left);\n    Object.assign(row, df2[idx]);\n    return row;\n  });\n\n  var cols = Object.assign({}, df1.columns);\n  Object.assign(cols, df2.columns);\n\n  return dataFrame(rows, cols);\n};\n\nexport const dfColRemove = (df, col) => {\n  var cols = {};\n  Object.assign(cols, df.columns);\n  if (Object.keys(cols).includes(col)) delete cols.columns[col];\n\n  var rows = df.map((old) => {\n    var row = {};\n    Object.assign(row, old);\n    if (Object.keys(row).includes(col)) delete row[col];\n    return row;\n  });\n\n  return dataFrame(rows, cols);\n};\n\nexport const dfIsDataFrame = (obj) => {\n  if (Array.isArray(obj)) {\n    if (obj.length === 0 || typeof obj.columns != 'undefined') return true;\n\n    if (obj.length === 1 && typeof obj[0] === 'object') {\n      return true;\n    }\n\n    if (obj.length > 1) {\n      var isDataFrame = true;\n      for (var idxRow = 1; idxRow < obj.length; idxRow++) {\n        if (\n          typeof obj[idxRow] !== 'object' ||\n          obj[idxRow].length !== obj[0].length\n        ) {\n          isDataFrame = false;\n          break;\n        }\n      }\n\n      return isDataFrame;\n    }\n  }\n\n  return false;\n};\n","import * as options from './host/options';\nimport * as fileSystem from './host/file-system';\nimport { dfFromColumns } from './utils/dataframe';\n\nexport const pinVersionsPathName = () => {\n  return options.getOption('pins.versions.path', '_versions');\n};\n\nconst pinVersionSignature = (hash_files) => {\n  var signature = ''; // TODO sapply(hash_files, function(x) digest::digest(x, algo = \"sha1\", file = TRUE))\n\n  if (signature.length > 1) {\n    signature = paste(signature, (collapse = ','));\n    signature = ''; // TODO digest::digest(signature, (algo = 'sha1'), (file = FALSE));\n  }\n\n  return signature;\n};\n\nconst pinVersionsPath = (storagePath) => {\n  var hashFiles = fileSystem.dir.list(storagePath, { fullNames: true });\n  hashFiles = hashFiles.filter((e) => /(\\/|\\\\)_versions$/g.test(e));\n\n  var version = pinVersionSignature(hashFiles);\n\n  return fileSystem.normalizePath(\n    fileSystem.path(\n      fileSystem.normalizePath(storagePath),\n      pinVersionsPathName(),\n      version\n    ),\n    { mustWork: false }\n  );\n};\n\nconst boardVersionsEnabled = (\n  board,\n  { defaultValue } = { defaultValue: false }\n) => {\n  if (defaultValue) {\n    return board['versions'] !== false;\n  } else {\n    return board['versions'] === true;\n  }\n};\n\nexport const boardVersionsCreate = (board, name, path) => {\n  var versions = null;\n\n  if (boardVersionsEnabled(board)) {\n    // read the versions from the non-versioned manifest\n    var componentPath = pinStoragePath(board, name);\n    var componentManifest = pinManifestGet(componentPath);\n    var versions = componentManifest['versions'];\n\n    var versionPath = pinVersionsPath(path);\n    var versionRelative = pinRegistryRelative(versionPath, path);\n\n    if (any(component_manifest$versions == version_relative)) {\n      versions = versions.filter((e) => e != versionRelative);\n    }\n\n    if (fileSystem.dir.exists(versionPath))\n      fileSystem.dir.removeunlink(versionPath, { recursive: true });\n    fileSystem.dir.create(versionPath, { recursive: true });\n\n    var files = fileSystem.dir.list(path, { fullNames: true });\n    files = files.filter(\n      (e) => e != fileSystem.path(path, pinVersionsPathName())\n    );\n    fileSystem.copy(files, versionPath, { recursive: true });\n\n    versions = c(list(versionRelative), versions);\n\n    manifest = pinManifestGet(path);\n    manifest['versions'] = versions;\n    pin_manifest_update(path, manifest);\n  }\n\n  return versions;\n};\n\nexport const boardVersionsGet = (board, name) => {\n  var versions = dataFrame(null, { versions: 'character' });\n\n  var componentPath = pinStoragePath(board, name);\n  var manifest = pinManifestGet(componentPath);\n\n  versions = manifest['versions'];\n  if (versions.lengtht > 0) {\n    versions = dfFromColumns({ version: versions });\n  }\n\n  return versions;\n};\n\nexport const boardVersionsShorten = (versions) => {\n  var paths = versions.map((e) => e.replace('[^/\\\\\\\\]+$', ''));\n  if (length(unique(paths))) {\n    versions = versions.map((e) => e.replace(/.*(\\/|\\\\)/g, ''));\n  }\n\n  var shortened = versions.map((e) => e.substr(0, 7));\n  if (arrays.unique(shortened).length == versions.length) {\n    versions = shortened;\n  }\n\n  return versions;\n};\n\nexport const boardVersionsExpand = (versions, version) => {\n  var shortened = boardVersionsShorten(versions);\n\n  var versionIndex = shortened.indexOf(version);\n\n  if (versionIndex != -1) {\n    throw new Error(\n      \"Version '\" +\n        version +\n        \"' is not valid, please select from pin_versions().\"\n    );\n  }\n\n  return versions[versionIndex];\n};\n","import * as options from './host/options';\n\nexport const boardDefault = () => {\n  return options.getOption('pins.board', 'local');\n};\n","import * as fileSystem from './host/file-system';\nimport { boardDefault } from './board-default';\nimport * as checks from './utils/checks';\n\nexport const boardLocalStorage = (board) => {\n  var path = board['cache'];\n\n  var componentPath = fileSystem.path(path, board['name']);\n\n  if (!fileSystem.dir.exists(componentPath))\n    fileSystem.dir.create(componentPath, { recursive: true });\n\n  return fileSystem.normalizePath(componentPath, { mustWork: false });\n};\n","export const onExit = (...args) => {\n  var error = null;\n  var result = null;\n  try {\n    result = args[args.length - 1]();\n  } catch (err) {\n    error = err;\n  }\n\n  for (var idx = 0; idx < args.length - 2; idx++) args[idx]();\n\n  if (error !== null) throw error;\n\n  return result;\n};\n","import { getOption } from './host/options';\nimport callbacks from './host/callbacks';\n\nexport const pinLog = (...args) => {\n  if (getOption('pins.verbose', true)) {\n    callbacks.get('pinLog')(args.join(''));\n  }\n};\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /*global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!state.anchorMap.hasOwnProperty(alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        // Implicit resolving is not allowed for non-scalar types, and '?'\n        // non-specific tag is only assigned to plain scalars. So, it isn't\n        // needed to check for 'kind' conformity.\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  var documents = loadDocuments(input, options), index, length;\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, output, options) {\n  if (typeof output === 'function') {\n    loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  } else {\n    return loadAll(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n  }\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    && c !== CHAR_COLON\n    && c !== CHAR_SHARP;\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = state.condenseFlow ? '\"' : '';\n\n    if (index !== 0) pairBuffer += ', ';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","import * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport { dictRemove } from './utils/dict';\nimport { dataFrame } from './utils/dataframe';\n\nexport const pinSplitOwner = (fullName = '') => {\n  const parts = fullName.split('/');\n  const name = parts[0];\n  parts.pop();\n  const owner = parts.join('/');\n\n  return { name, owner };\n};\n\nexport const pinContentName = (fullName) => {\n  return typeof fullName === 'string' ? pinSplitOwner(fullName).name : fullName;\n};\n\nexport const pinOwnerName = (fullName) => {\n  return typeof fullName === 'string'\n    ? pinSplitOwner(fullName).owner\n    : fullName;\n};\n\nexport const pinResultsFromRows = (entries) => {\n  var resultsField = function (e, field, def) {\n    return checks.isNull(e[field]) ? def : e[field];\n  };\n\n  var rows = entries.map((e) => {\n    var row = {\n      name: resultsField(e, 'name', fileSystem.basename(e['path'])),\n      description: resultsField(e, 'description', ''),\n      type: resultsField(e, 'type', 'files'),\n    };\n    row['metadata'] = dictRemove(e, ['name', 'description', 'type']);\n\n    return row;\n  });\n\n  return dataFrame(rows, {\n    name: 'character',\n    description: 'character',\n    type: 'character',\n  });\n};\n\n// TODO: Implement dataframes shim.\nexport const pinResultsExtractColumn = (df, column) => {\n  throw 'NYI';\n};\n\nexport const pinEntriesToDataframe = (entries) => {\n  throw 'NYI';\n};\n\nexport const pinResultsMerge = (r1, r2) => {\n  var result = [].concat(r1).concat(r2);\n  result.columns = {};\n  Object.assign(result.columns, r1.columns);\n  Object.assign(result.columns, r2.columns);\n  return result;\n};\n","export const dictRemove = (dict, removes) => {\n  var copy = {};\n  Object.assign(copy, dict);\n  removes.forEach((remove) => {\n    if (copy.hasOwnProperty(remove)) delete copy[remove];\n  });\n  return copy;\n};\n","import * as fileSystem from './host/file-system';\nimport * as options from './host/options';\nimport { boardLocalStorage } from './board-storage';\nimport { onExit } from './utils/onexit';\nimport { pinLog } from './log';\nimport yaml from 'js-yaml';\nimport { pinResultsFromRows } from './pin-tools';\nimport * as checks from './utils/checks';\nimport * as errors from './utils/errors';\n\nconst pinRegistryConfig = (board) => {\n  return fileSystem.path(boardLocalStorage(board), 'data.txt');\n};\n\nconst pinRegistryLoadEntries = (board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entriesPath = pinRegistryConfig(board);\n\n      if (!fileSystem.fileExists(entriesPath)) {\n        return [];\n      } else {\n        let yamlText = fileSystem.readLines(entriesPath).join('\\n');\n        let loadedYaml = yaml.safeLoad(yamlText);\n        return loadedYaml;\n      }\n    }\n  );\n};\n\nconst pinRegistrySaveEntries = (entries, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      let yamlText = yaml.safeDump(entries);\n      fileSystem.writeLines(pinRegistryConfig(board), yamlText.split('\\n'));\n    }\n  );\n};\n\nexport const pinStoragePath = (board, name) => {\n  var path = fileSystem.path(boardLocalStorage(board), name);\n  if (!fileSystem.dir.exists(path))\n    fileSystem.dir.create(path, { recursive: true });\n\n  return path;\n};\n\nexport const pinRegistryUpdate = (name, board, params = list()) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n      name = pinRegistryQualifyName(name, entries);\n\n      var path = pinStoragePath(board, name);\n\n      if (entries === null) entries = {};\n\n      var names = entries.map((e) => e['name']);\n      var index = 0;\n      if (names.includes(name)) {\n        index = names.findIndex((e) => name == e);\n      } else {\n        index = entries.length;\n        entries[index] = {};\n      }\n\n      entries[index]['name'] = name;\n\n      for (var param in params) {\n        if (\n          (Array.isArray(params[param]) && params[param].length == 0) ||\n          typeof params[param] === 'undefined'\n        ) {\n          delete entries[index][param];\n        } else {\n          entries[index][param] = params[param];\n        }\n      }\n\n      pinRegistrySaveEntries(entries, board);\n\n      return path;\n    }\n  );\n};\n\nexport const pinRegistryFind = (text, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n\n      var results = pinResultsFromRows(entries);\n\n      if (typeof text === 'string' && text.length > 0) {\n        results = results.filter(\n          (x) => !new RegExp(text, 'gi').test(x['name'])\n        );\n      }\n\n      return results;\n    }\n  );\n};\n\nexport const pinRegistryRetrieve = (name, board) => {\n  var lock = pinRegistryLock(board);\n  return onExit(\n    () => pinRegistryUnlock(lock),\n    () => {\n      var entries = pinRegistryLoadEntries(board);\n      name = pinRegistryQualifyName(name, entries);\n\n      var names = entries.map((e) => e['name']);\n      if (!names.includes(name)) {\n        pinLog('Pin not found, pins available in registry: ', names.join(', '));\n        throw new Error(\n          \"Pin '\" + name + \"' not found in '\" + board['name'] + \"' board.\"\n        );\n      }\n\n      return entries[names.findIndex((e) => e == name)];\n    }\n  );\n};\n\nexport const pinRegistryRetrievePath = (name, board) => {\n  var entry = pinRegistryRetrieve(name, board);\n\n  return entry['path'];\n};\n\nexport const pinRegistryRetrieveMaybe = (name, board) => {\n  return tryCatch(pinRegistryRetrieve(name, board), (error = null));\n};\n\nexport const pinRegistryRemove = (name, board, unlink = TRUE) => {\n  var entries = pinRegistryLoadEntries(board);\n  name = pinRegistryQualifyName(name, entries);\n\n  var remove = entries.filter((x) => x['name'] == name);\n  if (remove.length > 0) remove = remove[0];\n  else return;\n\n  entries = entries.filter((x) => x['name'] != name);\n\n  var removePath = pinRegistryAbsolute(remove$path, board);\n  if (unlink) unlink(removePath, (recursive = TRUE));\n\n  return pinRegistrySaveEntries(entries, component);\n};\n\nconst pinRegistryQualifyName = (name, entries) => {\n  var names = entries.map((e) => e['name']);\n\n  var namePattern = '';\n  if (/\\//g.test(name)) namePattern = paste0('^', name, '$');\n  else namePattern = '.*/' + name + '$';\n\n  var nameCandidate = names.filter((e) =>\n    new RegExp(namePattern, 'gi').test(e)\n  );\n\n  if (nameCandidate.length == 1) {\n    name = nameCandidate;\n  }\n\n  return name;\n};\n\nconst pinRegistryLock = (board) => {\n  var lockFile = pinRegistryConfig(board) + '.lock';\n  return fileSystem.lockFile(\n    lockFile,\n    options.getOption('pins.lock.timeout', Infinity)\n  );\n};\n\nconst pinRegistryUnlock = (lock) => {\n  return fileSystem.unlockFile(lock);\n};\n\nexport const pinRegistryRelative = (path, basePath) => {\n  path = fileSystem.normalizePath(path, { winslash: '/', mustWork: false });\n  basePath = fileSystem.normalizePath(basePath, {\n    winslash: '/',\n    mustWork: false,\n  });\n\n  if (path.startsWith(basePath)) {\n    path = path.substr(basePath.length + 1, path.length);\n  }\n\n  var relative = path.replace('^/', '');\n\n  return relative;\n};\n\nexport const pinRegistryAbsolute = (path, board) => {\n  var basePath = fileSystem.absolutePath(boardLocalStorage(board));\n\n  if (path.startsWith(basePath)) {\n    return path;\n  } else {\n    return fileSystem.normalizePath(\n      fileSystem.path(basePath, path),\n      (mustWork = false)\n    );\n  }\n};\n\nexport const pinResetCache = (board, name) => {\n  // clean up name in case it's a full url\n  const sanitizedName = name.replace(/^https?:\\/\\//g, '');\n  const index = errors.tryCatchNull(\n    () => pinRegistryRetrieve(sanitizedName, board) || null\n  );\n\n  if (!checks.isNull(index)) {\n    index.cache = {};\n    pinRegistryUpdate(sanitizedName, board, { params: index });\n  }\n};\n","export const tryCatch = (expr, error) => {\n  try {\n    return expr();\n  } catch (err) {\n    return error(err);\n  }\n};\n\nexport const tryCatchNull = (expr, error) => {\n  return tryCatch(expr, () => null);\n};\n","import * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport * as list from './utils/list';\nimport yaml from 'js-yaml';\n\nexport const pinManifestGet = (path) => {\n  var manifest = {};\n\n  var dataTxt = fileSystem.path(path, 'data.txt');\n  if (fileSystem.fileExists(dataTxt)) {\n    let yamlText = fileSystem.readLines(dataTxt).join('\\n');\n    manifest = yaml.safeLoad(yamlText);\n  }\n\n  if (checks.isNull(manifest['type'])) manifest['type'] = 'files';\n\n  return manifest;\n};\n\nexport const pinManifestUpdate = (path, manifest) => {\n  var dataTxt = fileSystem.path(path, 'data.txt');\n\n  let yamlText = yaml.safeDump(manifest);\n  fileSystem.writeLines(dataTxt, yamlText.split('\\n'));\n};\n\nexport const pinManifestExists = (path) => {\n  return fileSystem.fileExists(fileSystem.path(path, 'data.txt'));\n};\n\nexport const pinManifestCreate = (path, metadata, files) => {\n  var entries = Object.assign(\n    {\n      path: files,\n    },\n    metadata\n  );\n\n  list.removeNulls(entries);\n\n  let yamlText = yaml.safeDump(entries);\n  fileSystem.writeLines(\n    fileSystem.path(path, 'data.txt'),\n    yamlText.split('\\n')\n  );\n\n  return entries;\n};\n\n// retrieve a list of files to download\nexport const pinManifestDownload = (path) => {\n  var manifest = pinManifestGet(path);\n\n  if (checks.isNull(manifest['path'])) return null;\n  return pinFetch({\n    path: manifest['path'],\n    class: manifest['type'],\n  });\n};\n\nexport const pinManifestMerge = (baseManifest, resourceManifest) => {\n  // path requires special merge\n  if (\n    !checks.isNull(resourceManifest['path']) &&\n    !checks.isNull(baseManifest['path']) &&\n    !/https?:\\/\\//g.test(baseManifest['path'])\n  ) {\n    baseManifest['path'] = fileSystem.path(\n      baseManifest['path'],\n      resourceManifest['path']\n    );\n  }\n\n  baseManifest = Object.assign(baseManifest, resourceManifest);\n\n  return baseManifest;\n};\n","import * as checks from './checks';\n\nexport const names = (l) => {\n  if (checks.isNull(l)) return null;\n  else return Object.keys(l);\n};\n\nexport const namesArr = (l) => {\n  if (checks.isNull(l)) return [];\n  else return Object.keys(l);\n};\n\nexport const removeNulls = (obj) => {\n  for (var prop in obj) {\n    if (checks.isNull(obj[prop])) {\n      delete obj[prop];\n    }\n  }\n};\n","import { dfIsDataFrame } from './dataframe';\n\nconst METHODS = {};\nconst DEFAULT_CLASS_NAME = 'default';\n\nexport const registerMethod = (methodName, className, method) => {\n  METHODS[methodName] = METHODS[methodName] || {};\n  METHODS[methodName][className] = method;\n\n  return method;\n};\n\nexport const useMethod = (methodName, object, ...args) => {\n  var className = (object && object.class\n    ? object.class\n    : object.constructor && object.constructor.name\n    ? object.constructor.name\n    : DEFAULT_CLASS_NAME\n  ).toLowerCase();\n\n  if (dfIsDataFrame(object)) {\n    className = 'dataframe';\n  }\n\n  // support to construct objects by wrrapping object in content/class dictionary\n  if (typeof object['_content'] !== 'undefined') {\n    object = object['_content'];\n  }\n\n  if (METHODS[methodName] && METHODS[methodName][className]) {\n    return METHODS[methodName][className](object, ...args);\n  }\n\n  if (METHODS[methodName] && METHODS[methodName]['default']) {\n    return METHODS[methodName]['default'](object, ...args);\n  }\n\n  throw new Error(\n    `no applicable method for '${methodName}' applied to an object of class '${className}'`\n  );\n};\n","import * as boardLocal from './board-local';\nimport * as checks from './utils/checks';\nimport * as fileSystem from './host/file-system';\nimport { useMethod } from './utils/inheritance';\nimport { boardDefault } from './board-default';\nimport { dataFrame } from './utils/dataframe';\n\nexport const boardPinCreate = (board, path, name, metadata, ...args) => {\n  return useMethod('boardPinCreate', board, path, name, metadata, ...args);\n};\n\nexport const boardInitialize = (board, ...args) => {\n  return useMethod('boardInitialize', board, ...args);\n};\n\nexport const boardInitializeDefault = (board, ...args) => {\n  throw new Error(\"Board '\" + board['name'] + \"' is not a valid board.\");\n};\n\nexport const boardPinGet = (board, name, ...args) => {\n  return useMethod('boardPinGet', board, name, ...args);\n};\n\nexport const boardPinRemove = (board, name, ...args) => {\n  return useMethod('boardPinRemove', board, ...args);\n};\n\nexport const boardPinFind = (board, text, ...args) => {\n  return useMethod('boardPinFind', board, text, ...args);\n};\n\nexport const boardPinVersions = (board, name, ...args) => {\n  return useMethod('boardPinVersions', board, name, ...args);\n};\n\nexport const boardBrowse = (board, ...args) => {\n  return useMethod('boardBrowse', ...args);\n};\n\n// boardBrowse.default = function(board) { invisible(NULL) }\n\nexport const boardBrowseDefault = (board, ...args) => {\n  return null;\n};\n\nexport const boardEmptyResults = () => {\n  return dataFrame(null, {\n    name: 'character',\n    description: 'character',\n    rows: 'numeric',\n    cols: 'numeric',\n    class: 'numeric',\n  });\n};\n\nexport const boardPinVersionsDefault = (board, name, ...args) => {\n  return dataFrame(null, {\n    version: 'character',\n  });\n};\n","import * as options from './host/options';\nimport * as arrays from './utils/arrays';\nimport callbacks from './host/callbacks';\nimport * as boardRegistry from './board-registry';\nimport { boardCachePath } from './board-registration';\nimport { boardInitialize } from './board-extensions';\nimport { pinLog } from './log';\nimport * as checks from './utils/checks';\nimport { boardDefault } from './board-default';\n\nconst newBoard = (board, name, cache, versions, ...args) => {\n  if (cache == null) throw new Error(\"Please specify the 'cache' parameter.\");\n\n  board = {\n    board: board,\n    name: name,\n    cache: cache,\n    versions: versions,\n    class: board,\n  };\n\n  board = boardInitialize(board, (cache = cache), (versions = versions), args);\n\n  return board;\n};\n\nconst boardInfer = (x, { name, board, registerCall, connect, url }) => {\n  var inferred = {\n    name: name,\n    board: board == null ? name : board,\n    connect: connect == null ? name !== 'packages' : connect,\n    url: url,\n    registerCall: registerCall,\n  };\n\n  // if boards starts with http:// or https:// assume this is a website board\n  if (/^http:\\/\\/|^https:\\/\\//g.test(x)) {\n    inferred['url'] = x;\n    inferred['board'] = 'datatxt';\n\n    // use only subdomain as friendly name which is also used as cache folder\n    if (name == null || x === name) {\n      inferred['name'] = inferred['url']\n        .replace(/https?:\\/\\//g, '')\n        .replace(/\\\\\\\\..*/g, '');\n    }\n\n    inferred['registerCall'] =\n      'pins::board_register(board = \"datatxt\", name = \"' +\n      inferred['name'] +\n      '\", url = \"' +\n      inferred['url'] +\n      '\")';\n  }\n\n  if (inferred['name'] == null) inferred['name'] = x;\n  if (inferred['board'] == null) inferred['board'] = x;\n\n  return inferred;\n};\n\nconst boardRegisterCode = (board, name) => {\n  return callbacks.get('boardRegisterCode')(board, name);\n};\n\nexport const boardConnect = (board, code, ...args) => {\n  var board = boardGet(board);\n\n  callbacks.get('uiViewerRegister')(board, code);\n\n  return board;\n};\n\nexport const boardDisconnect = (name, ...args) => {\n  throw 'NYI';\n};\n\nexport const boardList = () => {\n  var defaults = arrays.concat(['local', 'packages'], boardDefault());\n  var boards = arrays.concat(boardRegistry.list(), defaults);\n\n  return arrays.unique(boards);\n};\n\nexport const boardGet = (name) => {\n  if (checks.isNull(name)) {\n    name = boardDefault();\n  }\n\n  var registerCall = 'pins::board_register(board = \"' + name + '\")';\n\n  if (!boardRegistry.list().includes(name)) {\n    var boardInferred = boardInfer(name, {});\n\n    if (boardInferred['registerCall'] !== null) {\n      registerCall = boardInferred['registerCall'];\n    }\n\n    // attempt to automatically register board\n    name = boardInferred['name'];\n    try {\n      boardRegister(boardInferred['board'], {\n        name: boardInferred['name'],\n        connect: boardInferred['connect'],\n        registerCall: registerCall,\n        url: boardInferred['url'],\n      });\n    } catch (err) {\n      pinLog(`Failed to register board ${name}: ` + err.toString());\n    }\n\n    if (!boardRegistry.list().includes(name)) {\n      throw (\n        \"Board '\" +\n        name +\n        \"' not a board, available boards: \" +\n        boardList().join(', ')\n      );\n    }\n  }\n\n  return boardRegistry.get(name);\n};\n\nexport const boardRegister = (board, { name, cache, versions, ...args }) => {\n  if (name == null) name = board;\n  if (cache == null) cache = boardCachePath();\n\n  var inferred = boardInfer(board, {\n    board: board,\n    name: name,\n    registerCall: args['registerCall'],\n    connect: args['connect'],\n    url: args['url'],\n  });\n\n  args['url'] = inferred['url'];\n  board = newBoard(inferred['board'], inferred['name'], cache, versions, args);\n\n  boardRegistry.set(inferred['name'], board);\n\n  if (inferred['registerCall'] == null)\n    inferred['registerCall'] = boardRegisterCode(\n      board['name'],\n      inferred['name']\n    );\n\n  if (inferred['connect'] !== false)\n    boardConnect(board['name'], inferred['registerCall']);\n\n  return inferred['name'];\n};\n\nexport const boardDeregister = (name, ...args) => {\n  throw 'NYI';\n};\n","import { useMethod } from './utils/inheritance';\nimport * as checks from './utils/checks';\nimport { boardGet, boardList } from './board';\nimport { pinResetCache } from './pin-registry';\nimport {\n  boardPinGet,\n  boardPinFind,\n  boardEmptyResults,\n} from './board-extensions';\nimport { pinManifestGet } from './pin-manifest';\nimport * as arrays from './utils/arrays';\nimport { pinVersionsPathName } from './versions';\nimport * as fileSystem from './host/file-system';\nimport { pinContentName, pinResultsMerge } from './pin-tools';\nimport { dataFrame, dfCBind, dfColRemove } from './utils/dataframe';\nimport { pinLog } from './log';\n\nexport const pin = (x, ...args) => {\n  return arrays.maybeOne(useMethod('pin', x, ...args));\n};\n\nexport const pinGet = (\n  name,\n  { board, cache, extract, version, files, signature, ...args }\n) => {\n  if (checks.isNull(board)) {\n    var boardPinGetOrNull = function (...args) {\n      try {\n        return boardPinGet(...args);\n      } catch (err) {\n        return null;\n      }\n    };\n\n    var result = boardPinGetOrNull(boardGet(null), name, { version: version });\n\n    if (checks.isNull(result) && checks.isNull(board)) {\n      for (var boardName in boardList()) {\n        if (!cache) pinResetCache(boardName, name);\n        result = boardPinGetOrNull(boardGet(boardName), name, {\n          extract: extract,\n          version: version,\n        });\n        if (!checks.isNull(result)) {\n          pinLog('Found pin ' + name + ' in board ' + boardName);\n          break;\n        }\n      }\n    }\n    if (checks.isNull(result))\n      throw new Error(\"Failed to retrieve '\" + name + \"' pin.\");\n  } else {\n    if (!cache) pinResetCache(board, name);\n    result = boardPinGet(\n      boardGet(board),\n      name,\n      Object.assign({ extract: extract, version: version }, ...args)\n    );\n  }\n\n  var manifest = pinManifestGet(result);\n  if (checks.isNull(manifest['type'])) manifest['type'] = 'files';\n\n  var resultFiles = arrays\n    .ensure(result)\n    .filter((e) => !new RegExp('^' + pinVersionsPathName()).test(e));\n  resultFiles = fileSystem.dir.list(resultFiles, { fullNames: true });\n  if (manifest['type'] == 'files' && resultFiles.length > 1)\n    resultFiles = resultFiles.filter((e) => !/\\/data\\.txt$/g.test(e));\n\n  if (!checks.isNull(signature)) {\n    var pinSignature = pinVersionSignature(resultFiles);\n    if (signature !== pin_signature)\n      throw new Error(\n        \"Pin signature '\" + pin_signature + \"' does not match given signature.\"\n      );\n  }\n\n  if (files) {\n    return arrays.maybeOne(resultFiles);\n  } else {\n    return pinLoad({ _content: result, class: manifest['type'] });\n  }\n};\n\nexport const pinRemove = (name, board) => {\n  board = boardGet(board);\n\n  boardPinRemove(board, name);\n  uiViewerUpdated(board);\n\n  return null;\n};\n\nconst pinFindEmpty = () => {\n  return dataFrame(null, {\n    name: 'character',\n    description: 'character',\n    type: 'character',\n    metadata: 'character',\n    board: 'character',\n  });\n};\n\nexport const pinFind = (text, { board, name, extended, metadata, ...args }) => {\n  if (checks.isNull(board) || board.length == 0) board = boardList();\n\n  text = pinContentName(text);\n  if (checks.isNull(text) && !checks.isNull(name)) text = name;\n\n  var allPins = pinFindEmpty();\n\n  board = arrays.ensure(board);\n  for (var boardIdx in board) {\n    var boardName = board[boardIdx];\n    var boardObject = boardGet(boardName);\n\n    var boardPins = null;\n    try {\n      boardPins = boardPinFind(\n        boardObject,\n        text,\n        Object.assign({ name: name, extended: extended }, ...args)\n      );\n    } catch (error) {\n      pinLog(\"Error searching '\" + boardName + \"' board: \" + error);\n      boardPins = boardEmptyResults();\n    }\n\n    if (extended === true) {\n      boardPins = boardPins.map((row) => {\n        if (row.hasOwnProperty('metadata')) {\n          Object.assign(row, row['metadata']);\n          delete row['metadata'];\n        }\n        return row;\n      });\n    }\n\n    if (boardPins.length > 0) {\n      boardPins = dfCBind(\n        boardPins,\n        dataFrame(\n          Array(boardPins.length)\n            .fill()\n            .map((e) => {\n              board: boardName;\n            }),\n          { board: 'character' }\n        )\n      );\n\n      allPins = pinResultsMerge(allPins, boardPins, extended === true);\n    }\n  }\n\n  if (!checks.isNull(text)) {\n    allPins = allPins.filter(\n      (e) =>\n        e['name'] == text ||\n        (checks.isNull(e['description'])\n          ? false\n          : new RegExp(text, 'i').test(e['description']))\n    );\n  }\n\n  if (!metadata) {\n    allPins = dfColRemove(allPins, 'metadata');\n  }\n\n  if (!checks.isNull(name)) {\n    allPins = allPins.filter((e) =>\n      new RegExp('(.*/)?' + name + '$').test(e['name'])\n    );\n    if (allPins.length > 0) allPins = allPins.filter((e, idx) => idx === 0);\n  }\n\n  // sort pin results by name\n  allPins = allPins.sort((a, b) => a['name'] < a['name']);\n\n  return allPins;\n};\n\nexport const pinPreview = (x, ...args) => {\n  return useMethod('pinPreview', x, ...args);\n};\n\nexport const pinLoad = (path, ...args) => {\n  return useMethod('pinLoad', path, ...args);\n};\n\nconst pinFiles = (name, { board, ...args }) => {\n  var entry = pinFind({ name: name, board: board, metadata: true });\n\n  if (entry.length != 1) throw new Error(\"Pin '\" + name + \"' not found.\");\n  var metadata = entry[0]['metadata'];\n\n  return metadata[path];\n};\n\nconst pinGetOne = (name, board, extended, metadata) => {\n  // first ensure there is always one pin since metadata with multiple entries can fail\n  var entry = pinFind({\n    name: name,\n    board: board,\n    metadata: false,\n    extended: false,\n  });\n\n  if (entry.length == 0) throw new Error(\"Pin '\" + name + \"' was not found.\");\n  if (entry.length > 1)\n    throw new Error(\n      \"Pin '\" +\n        name +\n        \"' was found in multiple boards: \" +\n        entry['board'].join(',') +\n        '.'\n    );\n\n  board = entry['board'];\n  entry = pinFind({\n    name: name,\n    board: board,\n    metadata: metadata,\n    extended: extended,\n  });\n\n  return entry;\n};\n\nexport const pinInfo = (\n  name,\n  { board, extended, metadata, signature, ...args }\n) => {\n  var entry = pinGetOne(name, board, extended, metadata);\n\n  var board = entry['board'];\n\n  metadata = [];\n  if (entry.colnames().includes('metadata') && entry[metadata].length > 0) {\n    metadata = entry['metadata'];\n  }\n\n  if (signature) {\n    var files = pinGet(name, { board: board, files: true });\n    entry['signature'] = pinVersionSignature(files);\n  }\n\n  entryExt = entry.toList();\n  delete entryExt['metadata'];\n\n  entryExt = []; // TODO Filter(function(e) !is.list(e) || length(e) != 1 || !is.list(e[[1]]) || length(e[[1]]) > 0, entry_ext)\n\n  for (name in metadata) {\n    entryExt[name] = metadata[name];\n  }\n\n  return Object.assign(entry_ext, { class: 'pin_info' });\n};\n\nexport const pinFetch = (...args) => {\n  return useMethod('pinFetch', ...args);\n};\n\nexport const pinVersions = (name, { board, full = false, ...args }) => {\n  var versions = boardPinVersions(boardGet(board), name);\n\n  if (!full) {\n    versions['version'] = boardVersionsShorten(versions['version']);\n  }\n\n  return versions;\n};\n","import * as fileSystem from '../host/file-system';\nimport { BoardName } from './const';\n\nexport const pinDefaultName = (x, board) => {\n  const name = fileSystem.basename(x);\n  const error = new Error(\n    \"Can't auto-generate pin name from object, please specify the 'name' parameter.\"\n  );\n\n  if (!name) {\n    throw error;\n  }\n\n  const sanitized = name\n    .replace(/[^a-zA-Z0-9-]/g, '-')\n    .replace(/^-*|-*$/g, '')\n    .replace(/-+/g, '-');\n\n  if (!sanitized) {\n    throw error;\n  }\n\n  if (board === BoardName.kaggle && sanitized.length < 5) {\n    return `${sanitized}-pin`;\n  }\n\n  return sanitized;\n};\n","import * as list from './utils/list';\n\nexport const pinsMergeCustomMetadata = (metadata, customMetadata) => {\n  var fixedFields = ['rows', 'cols', 'name', 'description'];\n\n  list.namesArr(customMetadata).forEach((entry) => {\n    if (entry === 'columns') {\n      var fixedColumnnFields = ['name', 'type'];\n\n      // convert to list of columns\n      if (Array.isArray(metadata['columns'])) {\n        metadata['columns'] = metadata['columns'].map((x, i) => {\n          return {\n            name: Object.keys(metadata['columns'])[i],\n            type: metadata['columns'][i],\n          };\n        });\n      }\n\n      // TODO: Need to convert old-style yaml columns names to new format\n\n      customMetadata['columns'].forEach((column) => {\n        var foundIdx = metadata$columns.filter(\n          (e, i) => metadata['columns'][i]['name'] === column['name']\n        );\n\n        if (foundIdx.length == 1) {\n          Object.keys(column).forEach((fieldName) => {\n            if (!fixedColumnnFields.includes(fieldName)) {\n              metadata['columns'][foundIdx][fieldName] = column[fieldName];\n            }\n          });\n        }\n      });\n    } else if (!fixedFields.includes(entry)) {\n      metadata[entry] = customMetadata[entry];\n    }\n  });\n\n  return metadata;\n};\n","export const BoardName = Object.freeze({\n  kaggle: 'kaggle',\n});\n","import * as fileSystem from './host/file-system';\nimport * as arrays from './utils/arrays';\nimport { boardGet } from './board';\nimport { pinResetCache } from './pin-registry';\nimport { pinLog } from './log';\nimport * as options from './host/options';\nimport { boardDefault } from './board-default';\nimport { onExit } from './utils/onexit.js';\nimport * as checks from './utils/checks';\nimport {\n  pinManifestExists,\n  pinManifestGet,\n  pinManifestCreate,\n} from './pin-manifest';\nimport { pinsMergeCustomMetadata } from './pins-metadata';\nimport { boardPinCreate } from './board-extensions';\nimport { uiViewerUpdated } from './ui-viewer';\nimport { pinGet } from './pin';\n\nconst pinNameFromPath = (pinPath) => {\n  const baseName = fileSystem.basename(pinPath);\n  const baseNameWithoutExt = fileSystem.tools.filePathSansExt(baseName);\n\n  return baseNameWithoutExt.replace(/[^a-zA-Z0-9]+/g, '_');\n};\n\nexport const boardPinStore = (board, opts) => {\n  var {\n    path: path,\n    description,\n    type,\n    metadata,\n    extract: extract,\n    retrieve: retrieve,\n    ...args\n  } = Object.assign({ retrieve: true }, opts);\n  path = arrays.ensure(path);\n\n  var customMetadata = args['customMetadata'];\n  var zip = args['zip'];\n\n  if (checks.isNull(extract)) extract = true;\n\n  const boardInstance = boardGet(board);\n  const name = opts.name || arrays.vectorize(pinNameFromPath)(pinPath);\n\n  pinLog(`Storing ${name} into board ${boardInstance.name} with type ${type}`);\n\n  if (!args.cache) pinResetCache(boardInstance, name);\n\n  path = path.filter((x) => !/data\\.txt/g.test(x));\n\n  const storePath = fileSystem.tempfile();\n  fileSystem.dir.create(storePath);\n  return onExit(\n    () => unlink(storePath, { recursive: true }),\n    () => {\n      if (\n        path.length == 1 &&\n        /^http/g.test(path) &&\n        !/\\\\.[a-z]{2,4}$/g.test(path) &&\n        options.getOption('pins.search.datatxt', true)\n      ) {\n        // attempt to download data.txt to enable public access to boards like rsconnect\n        datatxtPath = fileSystem.path(path, 'data.txt');\n        localPath = pinDownload(datatxtPath, name, boardDefault(), {\n          canFail: true,\n        });\n        if (!is.null(local_path)) {\n          manifest = pinManifestGet(localPath);\n          path = path + '/' + manifest[path];\n          extract = false;\n        }\n      }\n\n      var somethingChanged = false;\n      if (zip === true) {\n        fileSystem.dir.zip(path[0], fileSystem.path(storePath, 'data.zip'));\n        somethingChanged = true;\n      } else {\n        for (var idxPath = 0; idxPath < path.length; idxPath++) {\n          var details = { somethingChanged: true };\n          var singlePath = path[idxPath];\n          if (/^http/g.test(singlePath)) {\n            singlePath = pin_download(\n              singlePath,\n              name,\n              boardDefault(),\n              Object.assign(\n                {\n                  extract: extract,\n                  details: details,\n                  canFail: true,\n                },\n                opt\n              )\n            );\n\n            if (!checks.isNull(details['error'])) {\n              var cachedResult = null;\n              try {\n                pinGet(name, { board: boardDefault() });\n              } catch (error) {}\n              if (checks.isNull(cachedResult)) {\n                throw new Error(details['error']);\n              } else {\n                pinLog(details['error']);\n              }\n              return cachedResult;\n            }\n          }\n\n          if (details['somethingChanged']) {\n            var copyOrLink = function (from, to) {\n              if (\n                fileSystem.fileExists(from) &&\n                fileSystem.fileSize(from) >=\n                  options.getOption('pins.link.size', 10 ^ 8)\n              )\n                fileSystem.createLink(\n                  from,\n                  fileSystem.path(to, fileSystem.basename(from))\n                );\n              else fileSystem.copy(from, to, { recursive: true });\n            };\n\n            if (fileSystem.dir.exists(singlePath)) {\n              for (entry in fileSystem.dir.list(singlePath, {\n                fullNames: true,\n              })) {\n                copyOrLink(entry, store_path);\n              }\n            } else {\n              copyOrLink(singlePath, storePath);\n            }\n\n            somethingChanged = true;\n          }\n        }\n      }\n\n      if (somethingChanged) {\n        if (!pinManifestExists(storePath)) {\n          metadata['description'] = description;\n          metadata['type'] = type;\n\n          metadata = pinsMergeCustomMetadata(metadata, customMetadata);\n\n          pinManifestCreate(\n            storePath,\n            metadata,\n            fileSystem.dir.list(storePath, { recursive: true })\n          );\n        }\n\n        boardPinCreate(boardInstance, storePath, name, metadata, ...args);\n\n        uiViewerUpdated(boardInstance);\n      }\n\n      if (retrieve) {\n        return pinGet(\n          name,\n          Object.assign({ board: boardInstance['name'] }, ...args)\n        );\n      } else {\n        return null;\n      }\n    }\n  );\n};\n","import * as callbacks from './host/callbacks';\n\nexport const uiViewerRegister = (board, boardCall) => {\n  callbacks.get('uiViewerRegister')();\n};\n\nexport const uiViewerUpdated = (board) => {\n  callbacks.get('uiViewerUpdated')();\n};\n","import * as fileSystem from './host/file-system';\nimport { pinLog } from './log';\n\nexport const pinsShowProgress = (opts = { size: 0 }) => {\n  var { size } = opts;\n  if (typeof size === 'string') size = parseInt(size);\n\n  var largeFile = getOption('pins.progress.size', 10 ^ 7);\n  identical(getOption('pins.progress', size > largeFile), true) &&\n    interactive();\n};\n\nexport const pinsSaveCsv = (x, name) => {\n  if (x.length > 0) {\n    const columns = Object.keys(x[0]).join(',');\n    fileSystem.writeLines(name, columns);\n  }\n\n  const rows = x.map((row) => {\n    return Object.keys(row)\n      .map((key) => row[key])\n      .join(',');\n  });\n\n  fileSystem.writeLines(name, rows);\n};\n\nexport const pinsSafeCsv = (x, name) => {\n  try {\n    return pinsSaveCsv(x, name);\n  } catch (e) {\n    pinLog('Failed to save data frame as CSV file: ' + e);\n  }\n};\n","export * from './board';\nexport * from './pin';\n\nimport callbacks from './host/callbacks';\nexport { callbacks };\n\nimport * as pinDefault from './pin-default';\nimport * as inheritance from './utils/inheritance';\n\nimport * as boardExtensions from './board-extensions';\nimport * as boardLocal from './board-local';\nimport { pinString } from './pin-file';\nimport { pinLoadFiles } from './pin-files';\nimport { pinDataFrame } from './pin-dataframe';\n\ninheritance.registerMethod('pin', 'default', pinDefault.pinDefault);\ninheritance.registerMethod('pin', 'string', pinString);\ninheritance.registerMethod('pin', 'dataframe', pinDataFrame);\n\ninheritance.registerMethod('pinPreview', 'default', pinDefault.pinPreviewDefault);\ninheritance.registerMethod('pinLoad', 'default', pinDefault.pinLoadDefault);\ninheritance.registerMethod('pinFetch', 'default', pinDefault.pinFetchDefault);\n\ninheritance.registerMethod('pinLoad', 'files', pinLoadFiles);\n\ninheritance.registerMethod('boardBrowse', 'default', boardExtensions.boardBrowseDefault);\ninheritance.registerMethod('boardPinVersions', 'default', boardExtensions.boardPinVersionsDefault);\ninheritance.registerMethod('boardInitialize', 'default', boardExtensions.boardInitializeDefault);\n\ninheritance.registerMethod('boardInitialize', 'local', boardLocal.boardInitializeLocal);\ninheritance.registerMethod('boardPinCreate', 'local', boardLocal.boardPinCreateLocal);\ninheritance.registerMethod('boardPinFind', 'local', boardLocal.boardPinFindLocal);\ninheritance.registerMethod('boardPinGet', 'local', boardLocal.boardPinGetLocal);\ninheritance.registerMethod('boardPinRemove', 'local', boardLocal.boardPinRemoveLocal);\ninheritance.registerMethod('boardPinVersions', 'local', boardLocal.boardPinVersionsLocal);\n","import * as fileSystem from './host/file-system';\nimport { pinDefaultName } from './utils/pin-utils';\nimport { boardPinStore } from './pin-extensions';\n\nexport const pinDefault = (x, opts = {}) => {\n  const { description, board, ...args } = opts;\n  const name = opts.name || pinDefaultName(x, board);\n  const path = fileSystem.tempfile();\n\n  fileSystem.dir.create(path);\n\n  fileSystem.write(JSON.stringify(x), fileSystem.path(path, 'data.json'));\n\n  return boardPinStore(\n    board,\n    Object.assign(\n      {},\n      {\n        name,\n        description,\n        path: path,\n        type: 'default',\n        metadata: [],\n      },\n      ...args\n    )\n  );\n};\n\nexport const pinPreviewDefault = (x, ...args) => x;\n\nexport const pinLoadDefault = (path, ...args) => {\n  return JSON.parse(fileSystem.read(fileSystem.path(path, 'data.json')));\n};\n\nexport const pinFetchDefault = (...args) => args['path'];\n","import * as fileSystem from './host/file-system';\nimport * as arrays from './utils/arrays';\nimport { boardPinStore } from './pin-extensions';\n\nexport const pinString = (\n  x,\n  opts = { name: null, description: null, board: null }\n) => {\n  const { name, description, board, ...args } = opts;\n  var paths = arrays.ensure(x);\n  var extension = paths.length > 0 ? 'zip' : fileSystem.tools.fileExt(paths);\n  return boardPinStore(\n    board,\n    Object.assign(\n      {},\n      {\n        name,\n        description,\n        path: paths,\n        type: 'files',\n        metadata: {\n          extension: extension,\n        },\n      },\n      ...args\n    )\n  );\n};\n","import * as checks from './utils/checks';\nimport { pinDefaultName } from './utils/pin-utils';\nimport * as fileSystem from './host/file-system';\nimport { onExit } from './utils/onexit';\nimport { pinsSafeCsv } from './utils';\nimport { dfColNames } from './utils/dataframe';\nimport { boardPinStore } from './pin-extensions';\n\nexport const pinDataFrame = (\n  x,\n  opts = { name: null, description: null, board: null }\n) => {\n  var { name, description, board, ...args } = opts;\n  if (checks.isNull(name)) name = pinDefaultName(x, board);\n\n  var path = fileSystem.tempfile();\n  fileSystem.dir.create(path);\n\n  fileSystem.write(JSON.stringify(x), fileSystem.path(path, 'data.json'));\n\n  pinsSafeCsv(x, fileSystem.path(path, 'data.csv'));\n\n  return onExit(\n    () => unlink(path),\n    () => {\n      const columns = dfColNames(x);\n      const metadata = {\n        rows: x.length,\n        cols: columns.length,\n        columns: columns,\n      };\n\n      return boardPinStore(\n        board,\n        Object.assign(\n          {},\n          {\n            name,\n            description,\n            path: path,\n            type: 'table',\n            metadata: [],\n          },\n          ...args\n        )\n      );\n    }\n  );\n};\n\nexport const pinLoadTable = (path, ...args) => {\n  var json = fileSystem.path(path, 'data.json');\n  var csv = fileSystem.path(path, 'data.csv');\n  var result = null;\n\n  if (fileSystem.fileExists(json)) {\n    result = JSON.parse(fileSystem.readLines(json).join('\\n\\r'));\n  } else if (file.exists(csv)) {\n    throw new Error('NYI: No support to load from CSV files.');\n    // TODO result = utils.readCsv(csv, (stringsAsFactors = FALSE));\n  } else {\n    throw new Error(\"A 'table' pin requires CSV or JSON files.\");\n  }\n\n  return result;\n};\n\nexport const pinFetchTable = (path, ...args) => {\n  rds_match = grepl('.*.rds', path);\n  fetch_all = identical(getOption('pins.fetch', 'auto'), 'all');\n  if (any(rds_match) && !fetch_all) return path[rds_match];\n  else return path;\n};\n\nexport const pinPreviewDataFrame = (x, opts = { board: null }) => {\n  const { board, ...args } = opts;\n  utils.head(x, (n = getOption('pins.preview', 10 ^ 3)));\n};\n","import * as fileSystem from './host/file-system';\n\nexport const pinLoadFiles = function (path, { ...args }) {\n  var files = fileSystem.dir.list(path, { recursive: true, fullNames: true });\n\n  var result = files.filter((e) => !/data\\.txt$/g.test(e));\n\n  return result;\n};\n\nexport const pinPreviewFiles = function (x, { board = null, ...args }) {\n  dataFrame(x, { files: 'character' });\n};\n","import * as fileSystem from './host/file-system';\nimport * as versions from './versions';\nimport * as registry from './pin-registry';\nimport { boardLocalStorage } from './board-storage';\nimport * as checks from './utils/checks';\nimport { pinManifestGet, pinManifestMerge } from './pin-manifest';\n\nexport const boardInitializeLocal = (board, ...args) => {\n  var cache = args['cache'];\n  if (!fileSystem.dir.exists(board['cache']))\n    fileSystem.dir.create(board['cache'], { recursive: true });\n\n  return board;\n};\n\nexport const guessExtensionFromPath = (path) => {\n  if (fileSystem.dir.exists(path)) {\n    var allFiles = fileSystem.dir.list(path, { recursive: true });\n    allFiles = allFiles.filter((x) => !/data\\\\.txt/gi.test(x));\n\n    path = allFiles[0];\n  }\n\n  fileSystem.tools.fileExt(path);\n};\n\nexport const boardPinCreateLocal = (board, path, name, metadata, ...args) => {\n  versions.boardVersionsCreate(board, (name = name), (path = path));\n\n  var finalPath = registry.pinStoragePath(board, name);\n\n  var toDelete = fileSystem.dir.list(finalPath, { fullNames: true });\n  toDelete = toDelete.filter((e) => /(\\/|\\\\)_versions$/gi.test(e));\n  fileSystem.dir.remove(toDelete, { recursive: true });\n  if (!fileSystem.dir.exists(finalPath)) fileSystem.dir.create(finalPath);\n\n  fileSystem.copy(fileSystem.dir.list(path, { fullNames: true }), finalPath, {\n    recursive: true,\n  });\n\n  // reduce index size\n  metadata['columns'] = null;\n\n  var basePath = boardLocalStorage(board);\n\n  return registry.pinRegistryUpdate(\n    name,\n    board,\n    Object.assign(\n      {\n        path: registry.pinRegistryRelative(finalPath, { basePath: basePath }),\n      },\n      metadata\n    )\n  );\n};\n\nexport const boardPinFindLocal = (board, text, ...args) => {\n  var results = registry.pinRegistryFind(text, board);\n\n  if (results.length == 1) {\n    var metadata = results['metadata'];\n    var path = registry.pinRegistryAbsolute(metadata['path'], board);\n    var extended = pinManifestGet(path);\n    var merged = pinManifestMerge(metadata, extended);\n\n    results['metadata'] = merged;\n  }\n\n  return results;\n};\n\nexport const boardPinGetLocal = (board, name, ...args) => {\n  var version = args['version'];\n  var path = registry.pinRegistryRetrievePath(name, board);\n\n  if (!checks.isNull(version)) {\n    var manifest = pinManifestGet(registry.pinRegistryAbsolute(path, board));\n\n    if (!manifest['versions'].includes(version)) {\n      version = boardVersionsExpand(manifest['versions'], version);\n    }\n\n    path = fileSystem.path(name, version);\n  }\n\n  return registry.pinRegistryAbsolute(path, board);\n};\n\nexport const boardPinRemoveLocal = (board, name, ...args) => {\n  return registry.pinRegistryRemove(name, board);\n};\n\nexport const boardPinVersionsLocal = (board, name, ...args) => {\n  return boardVersionsGet(board, name);\n};\n"],"names":["get","name","Object","keys","HOST_CALLBACKS","includes","isNull","obj","getOption","defval","option","callbacks.get","checks.isNull","unique","arr","filter","value","index","self","indexOf","concat","ensure","Array","isArray","maybeOne","length","list","BOARDS_REGISTERED","boardCachePath","options.getOption","callbacks","tempfile","basename","filePath","readLines","writeLines","content","write","object","path","path1","path2","normalizePath","winslash","mustWork","fileExists","copy","from","to","recursive","dataFrame","data","columns","df","pinVersionsPathName","pinVersionsPath","storagePath","signature","fileSystem.dir","fullNames","e","test","paste","collapse","fileSystem.normalizePath","fileSystem.path","boardDefault","boardLocalStorage","board","componentPath","exists","create","onExit","error","result","args","err","idx","pinLog","join","const","callback","dir","freeze","dirPath","Error","arrays.getOnly","remove","arrays.ensure","map","zip","zipfile","tools","filePathSansExt","replace","fileExt","match","isNothing","subject","sequence","string","count","cycle","number","Number","NEGATIVE_INFINITY","target","source","key","sourceKeys","YAMLException","reason","mark","call","this","message","toString","captureStackTrace","constructor","stack","prototype","compact","Mark","buffer","position","line","column","getSnippet","indent","maxLength","head","start","tail","end","snippet","charAt","slice","common","repeat","where","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","tag","options","forEach","kind","resolve","construct","instanceOf","predicate","represent","defaultStyle","styleAliases","style","alias","String","compileList","schema","exclude","include","includedSchema","currentType","previousType","previousIndex","push","type","Schema","definition","implicit","explicit","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","scalar","mapping","fallback","collectType","arguments","compileMap","DEFAULT","schemas","types","toArray","every","Type","max","canonical","lowercase","uppercase","camelcase","ch","c","hasDigits","charCodeAt","base","sign","digits","parseInt","split","v","unshift","d","isNegativeZero","binary","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","RegExp","SCIENTIFIC_WITHOUT_DOT","require$$0","require$$1","require$$2","require$$3","toLowerCase","POSITIVE_INFINITY","NaN","parseFloat","res","isNaN","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","exec","year","month","day","hour","minute","second","date","fraction","delta","Date","UTC","setTime","getTime","toISOString","NodeBuffer","require","Buffer","__","BASE64_MAP","code","bitlen","tailbits","input","bits","isBuffer","_hasOwnProperty","hasOwnProperty","_toString","pair","pairKey","pairHasKey","objectKeys","require$$4","require$$5","regexp","modifiers","global","multiline","ignoreCase","esprima","_","window","ast","parse","range","body","expression","params","param","Function","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","simpleEscapeSequence","simpleEscapeCheck","simpleEscapeMap","i","State","filename","DEFAULT_FULL_SCHEMA","onWarning","legacy","json","listener","implicitTypes","typeMap","lineStart","lineIndent","documents","generateError","state","throwError","throwWarning","directiveHandlers","YAML","major","minor","version","checkLineBreaks","TAG","handle","prefix","tagMap","captureSegment","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","isObject","storeMappingPair","keyTag","keyNode","valueNode","startLine","startPos","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readDoubleQuotedScalar","nodeIndent","captureStart","captureEnd","hexLength","hexResult","tmp","lc","fromCharCode","readBlockSequence","_line","_tag","_anchor","anchor","detected","anchorMap","composeNode","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","tagHandle","tagName","isVerbatim","isNamed","readTagProperty","readAnchorProperty","following","_pos","atExplicitKey","readBlockMapping","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","readSingleQuotedScalar","readAlias","withinFlowCollection","hasPendingContent","_lineStart","_lineIndent","_kind","readPlainScalar","loadDocuments","directiveName","directiveArgs","documentStart","hasDirectives","readDocument","loadAll","iterator","load","output","extend","DEFAULT_SAFE_SCHEMA","CHAR_TAB","CHAR_LINE_FEED","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","0","7","8","9","10","11","12","13","27","34","92","133","160","8232","8233","DEPRECATED_BOOLEANS_SYNTAX","encodeHex","character","Math","noArrayIndent","skipInvalid","flowLevel","styleMap","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","level","isWhitespace","isPrintable","isPlainSafe","needIndentIndicator","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","dump","min","str","testImplicitResolving","blockHeader","dropEndingNewline","width","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","foldString","nextChar","escapeSeq","escapeString","indentIndicator","clip","breakRe","curr","detectType","typeList","writeNode","block","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","sort","writeBlockMapping","writeFlowMapping","arrayLevel","writeBlockSequence","writeFlowSequence","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","deprecated","pinResultsFromRows","entries","resultsField","field","def","rows","dict","removes","row","fileSystem.basename","description","assign","pinRegistryConfig","pinRegistryLoadEntries","lock","pinRegistryLock","pinRegistryUnlock","entriesPath","fileSystem.fileExists","let","yamlText","fileSystem.readLines","yaml","safeLoad","pinRegistrySaveEntries","safeDump","fileSystem.writeLines","pinStoragePath","pinRegistryUpdate","pinRegistryQualifyName","names","findIndex","pinRegistryRetrieve","pinResetCache","sanitizedName","expr","tryCatch","cache","pinManifestGet","manifest","dataTxt","pinManifestCreate","metadata","files","prop","list.removeNulls","registerMethod","methodName","className","method","METHODS","useMethod","class","isDataFrame","idxRow","dfIsDataFrame","boardPinGet","require$$6","loader","safeLoadAll","dumper","require$$7","namePattern","paste0","nameCandidate","lockFile","Infinity","pinRegistryAbsolute","basePath","startsWith","newBoard","versions","boardInitialize","boardInfer","x","inferred","connect","url","registerCall","boardConnect","boardGet","boardList","defaults","arrays.concat","boards","boardRegistry.list","arrays.unique","boardInferred","boardRegister","pinGet","boardPinGetOrNull","boardName","extract","resultFiles","arrays\n    .ensure","pinVersionSignature","pin_signature","arrays.maybeOne","pinLoad","_content","pinFind","text","fullName","parts","pop","pinSplitOwner","r1","r2","allPins","boardIdx","boardObject","boardPins","boardPinFind","extended","cols","df1","df2","left","dfCBind","fill","col","old","dfColRemove","a","b","pinDefaultName","sanitized","BoardName","kaggle","pinsMergeCustomMetadata","customMetadata","l","fixedFields","entry","fixedColumnnFields","foundIdx","metadata$columns","fieldName","boardPinStore","opts","retrieve","boardInstance","fun","arrays.vectorize","pinPath","storePath","fileSystem.tempfile","unlink","datatxtPath","localPath","pinDownload","canFail","is","null","local_path","somethingChanged","idxPath","details","singlePath","pin_download","opt","copyOrLink","fileSystem.copy","store_path","pinsSafeCsv","pinsSaveCsv","fileSystem.write","JSON","stringify","paths","extension","fileSystem.tools","versionPath","versionRelative","defaultValue","pinRegistryRelative","any","component_manifest$versions","version_relative","removeunlink","pin_manifest_update","finalPath","registry.pinStoragePath","toDelete","registry.pinRegistryUpdate","substr","merged","baseManifest","resourceManifest","results","registry.pinRegistryAbsolute","boardVersionsExpand","TRUE","removePath","remove$path","component","registry.pinRegistryRemove","boardVersionsGet","pinGetOne","colnames","entryExt","toList","entry_ext","boardPinRemove","uiViewerUpdated","boardPinVersions","full","boardVersionsShorten"],"mappings":"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"}